{"ast":null,"code":"import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */function () {\n  function PdfDictionary(dictionary) {\n    /**\n     * Internal variable to store the `position`.\n     * @default -1\n     * @private\n     */\n    this.position7 = -1;\n    /**\n     * The `IPdfSavable` with the specified key.\n     * @private\n     */\n    this.primitiveItems = new Dictionary();\n    /**\n     * `Start marker` for dictionary.\n     * @private\n     */\n    this.prefix = '<<';\n    /**\n     * `End marker` for dictionary.\n     * @private\n     */\n    this.suffix = '>>';\n    /**\n     * @hidden\n     * @private\n     */\n    this.resources = [];\n    /**\n     * Internal variable to hold `cloned object`.\n     * @default null\n     * @private\n     */\n    this.object = null;\n    /**\n     * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n     * @default true\n     * @private\n     */\n    this.archive = true;\n    /**\n     * Represents the Font dictionary.\n     * @hidden\n     * @private\n     */\n    this.isFont = false;\n    if (typeof dictionary === 'undefined') {\n      this.primitiveItems = new Dictionary();\n      this.encrypt = true;\n      this.dictionaryProperties = new DictionaryProperties();\n    } else {\n      this.primitiveItems = new Dictionary();\n      var keys = dictionary.items.keys();\n      var values = dictionary.items.values();\n      for (var index = 0; index < dictionary.items.size(); index++) {\n        this.primitiveItems.setValue(keys[index], values[index]);\n      }\n      this.status = dictionary.status;\n      this.freezeChanges(this);\n      this.encrypt = true;\n      this.dictionaryProperties = new DictionaryProperties();\n    }\n  }\n  Object.defineProperty(PdfDictionary.prototype, \"items\", {\n    //Properties\n    /**\n     * Gets or sets the `IPdfSavable` with the specified key.\n     * @private\n     */\n    get: function () {\n      return this.primitiveItems;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"status\", {\n    /**\n     * Gets or sets the `Status` of the specified object.\n     * @private\n     */\n    get: function () {\n      return this.status7;\n    },\n    set: function (value) {\n      this.status7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n    /**\n     * Gets or sets a value indicating whether this document `is saving` or not.\n     * @private\n     */\n    get: function () {\n      return this.isSaving7;\n    },\n    set: function (value) {\n      this.isSaving7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n    /**\n     * Gets or sets the `index` value of the specified object.\n     * @private\n     */\n    get: function () {\n      return this.index7;\n    },\n    set: function (value) {\n      this.index7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n    /**\n     * Returns `cloned object`.\n     * @private\n     */\n    get: function () {\n      return this.object;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"position\", {\n    /**\n     * Gets or sets the `position` of the object.\n     * @private\n     */\n    get: function () {\n      return this.position7;\n    },\n    set: function (value) {\n      this.position7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n    /**\n     * Gets the `count`.\n     * @private\n     */\n    get: function () {\n      return this.primitiveItems.size();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n    /**\n     * Collection of `items` in the object.\n     * @private\n     */\n    get: function () {\n      return this;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get flag if need to `archive` dictionary.\n   * @private\n   */\n  PdfDictionary.prototype.getArchive = function () {\n    return this.archive;\n  };\n  /**\n   * Set flag if need to `archive` dictionary.\n   * @private\n   */\n  PdfDictionary.prototype.setArchive = function (value) {\n    this.archive = value;\n  };\n  /**\n   * Sets flag if `encryption` is needed.\n   * @private\n   */\n  PdfDictionary.prototype.setEncrypt = function (value) {\n    this.encrypt = value;\n    this.modify();\n  };\n  /**\n   * Gets flag if `encryption` is needed.\n   * @private\n   */\n  PdfDictionary.prototype.getEncrypt = function () {\n    return this.encrypt;\n  };\n  /**\n   * `Freezes` the changes.\n   * @private\n   */\n  PdfDictionary.prototype.freezeChanges = function (freezer) {\n    this.bChanged = false;\n  };\n  /**\n   * Creates a `copy of PdfDictionary`.\n   * @private\n   */\n  PdfDictionary.prototype.clone = function (crossTable) {\n    //Need to add more codings\n    var newDict = new PdfDictionary();\n    return newDict;\n  };\n  /**\n   * `Mark` this instance modified.\n   * @private\n   */\n  PdfDictionary.prototype.modify = function () {\n    this.bChanged = true;\n  };\n  /**\n   * `Removes` the specified key.\n   * @private\n   */\n  PdfDictionary.prototype.remove = function (key) {\n    if (typeof key !== 'string') {\n      this.primitiveItems.remove(key.value);\n      this.modify();\n    } else {\n      this.remove(new PdfName(key));\n    }\n  };\n  /**\n   * `Determines` whether the dictionary contains the key.\n   * @private\n   */\n  PdfDictionary.prototype.containsKey = function (key) {\n    var returnValue = false;\n    returnValue = this.primitiveItems.containsKey(key.toString());\n    return returnValue;\n  };\n  /**\n   * Raises event `BeginSave`.\n   * @private\n   */\n  PdfDictionary.prototype.onBeginSave = function () {\n    this.beginSave.sender.beginSave();\n  };\n  /**\n   * Raises event `Font Dictionary BeginSave`.\n   * @private\n   */\n  PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n    this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n  };\n  /**\n   * Raises event `Descendant Font BeginSave`.\n   * @private\n   */\n  PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n    this.descendantFontBeginSave.sender.descendantFontBeginSave();\n  };\n  /**\n   * Raises event 'BeginSave'.\n   * @private\n   */\n  PdfDictionary.prototype.onTemplateBeginSave = function () {\n    this.pageBeginDrawTemplate.sender.pageBeginSave();\n  };\n  /**\n   * Raises event `BeginSave`.\n   * @private\n   */\n  PdfDictionary.prototype.onBeginAnnotationSave = function () {\n    this.annotationBeginSave.sender.beginSave();\n  };\n  /**\n   * Raises event `BeginSave`.\n   * @private\n   */\n  PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n    var saveEvent = this.sectionBeginSave;\n    saveEvent.sender.beginSave(saveEvent.state, writer);\n  };\n  PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n    if (typeof bRaiseEvent === 'undefined') {\n      this.save(writer, true);\n    } else {\n      writer.write(this.prefix);\n      if (typeof this.beginSave !== 'undefined') {\n        this.onBeginSave();\n      }\n      if (typeof this.descendantFontBeginSave !== 'undefined') {\n        this.onDescendantFontBeginSave();\n      }\n      if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n        this.onFontDictionaryBeginSave();\n      }\n      if (typeof this.annotationBeginSave !== 'undefined') {\n        this.onBeginAnnotationSave();\n      }\n      if (typeof this.sectionBeginSave !== 'undefined') {\n        this.onSectionBeginSave(writer);\n      }\n      if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n        this.onTemplateBeginSave();\n      }\n      // }\n      if (this.Count > 0) {\n        this.saveItems(writer);\n      }\n      writer.write(this.suffix);\n      writer.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Save dictionary items`.\n   * @private\n   */\n  PdfDictionary.prototype.saveItems = function (writer) {\n    writer.write(Operators.newLine);\n    var keys = this.primitiveItems.keys();\n    var values = this.primitiveItems.values();\n    for (var index = 0; index < keys.length; index++) {\n      var key = keys[index];\n      var name_1 = new PdfName(key);\n      name_1.save(writer);\n      writer.write(Operators.whiteSpace);\n      var resources = values[index];\n      resources.save(writer);\n      writer.write(Operators.newLine);\n    }\n  };\n  return PdfDictionary;\n}();\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */function () {\n  /**\n   * New instance for `save section collection event handler` class.\n   * @private\n   */\n  function SaveSectionCollectionEventHandler(sender) {\n    this.sender = sender;\n  }\n  return SaveSectionCollectionEventHandler;\n}();\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */function () {\n  /**\n   * New instance for `save section collection event handler` class.\n   * @private\n   */\n  function SaveDescendantFontEventHandler(sender) {\n    this.sender = sender;\n  }\n  return SaveDescendantFontEventHandler;\n}();\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */function () {\n  /**\n   * New instance for `save section collection event handler` class.\n   * @private\n   */\n  function SaveFontDictionaryEventHandler(sender) {\n    this.sender = sender;\n  }\n  return SaveFontDictionaryEventHandler;\n}();\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */function () {\n  /**\n   * New instance for `save annotation event handler` class.\n   * @private\n   */\n  function SaveAnnotationEventHandler(sender) {\n    this.sender = sender;\n  }\n  return SaveAnnotationEventHandler;\n}();\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */function () {\n  // constructors\n  /**\n   * New instance for `save section event handler` class.\n   * @private\n   */\n  function SaveSectionEventHandler(sender, state) {\n    this.sender = sender;\n    this.state = state;\n  }\n  return SaveSectionEventHandler;\n}();\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */function () {\n  /**\n   * New instance for save section collection event handler class.\n   * @public\n   */\n  function SaveTemplateEventHandler(sender) {\n    this.sender = sender;\n  }\n  return SaveTemplateEventHandler;\n}();\nexport { SaveTemplateEventHandler };","map":{"version":3,"names":["Dictionary","PdfName","Operators","DictionaryProperties","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","resources","object","archive","isFont","encrypt","dictionaryProperties","keys","items","values","index","size","setValue","status","freezeChanges","Object","defineProperty","prototype","get","enumerable","configurable","status7","set","value","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","clone","crossTable","newDict","remove","key","containsKey","returnValue","toString","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","writer","saveEvent","sectionBeginSave","state","save","bRaiseEvent","write","Count","saveItems","newLine","length","name_1","whiteSpace","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js"],"sourcesContent":["import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}