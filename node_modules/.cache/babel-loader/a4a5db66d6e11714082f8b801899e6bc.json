{"ast":null,"code":"import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */function () {\n  function PdfAnnotation(arg1) {\n    // Fields\n    /**\n     * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n     * @private\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\n     * `Color` of the annotation\n     * @private\n     */\n    this.pdfColor = new PdfColor(255, 255, 255);\n    /**\n     * `Bounds` of the annotation.\n     * @private\n     */\n    this.rectangle = new RectangleF(0, 0, 0, 0);\n    /**\n     * Parent `page` of the annotation.\n     * @private\n     */\n    this.pdfPage = null;\n    /**\n     * `Brush of the text` of the annotation.\n     * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n     * @private\n     */\n    this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    /**\n     * `Font of the text` of the annotation.\n     * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n     * @private\n     */\n    this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n    /**\n     * `StringFormat of the text` of the annotation.\n     * @default new PdfStringFormat(PdfTextAlignment.Left)\n     * @private\n     */\n    this.format = new PdfStringFormat(PdfTextAlignment.Left);\n    /**\n     * `Text` of the annotation.\n     * @private\n     */\n    this.content = '';\n    /**\n     * Internal variable to store `dictionary`.\n     * @private\n     */\n    this.pdfDictionary = new PdfDictionary();\n    /**\n     * To specifying the `Inner color` with which to fill the annotation\n     * @private\n     */\n    this.internalColor = new PdfColor();\n    /**\n     * `opacity or darkness` of the annotation.\n     * @private\n     * @default 1.0\n     */\n    this.darkness = 1.0;\n    if (typeof arg1 === 'undefined') {\n      this.initialize();\n    } else {\n      this.initialize();\n      this.bounds = arg1;\n    }\n  }\n  Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n    // Properties\n    /**\n     * `Color` of the annotation\n     * @private\n     */\n    get: function () {\n      return this.pdfColor;\n    },\n    set: function (value) {\n      this.pdfColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n    /**\n     * To specifying the `Inner color` with which to fill the annotation\n     * @private\n     */\n    get: function () {\n      return this.internalColor;\n    },\n    set: function (value) {\n      this.internalColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n    /**\n     * `bounds` of the annotation.\n     * @private\n     */\n    get: function () {\n      return this.rectangle;\n    },\n    set: function (value) {\n      this.rectangle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n    /**\n     * Parent `page` of the annotation.\n     * @private\n     */\n    get: function () {\n      return this.pdfPage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n    /**\n     * To specifying the `Font of the text` in the annotation.\n     * @private\n     */\n    get: function () {\n      return this.textFont;\n    },\n    set: function (value) {\n      this.textFont = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n    /**\n     * To specifying the `StringFormat of the text` in the annotation.\n     * @private\n     */\n    get: function () {\n      return this.format;\n    },\n    set: function (value) {\n      this.format = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n    /**\n     * To specifying the `Brush of the text` in the annotation.\n     * @private\n     */\n    get: function () {\n      return this.textBrush;\n    },\n    set: function (value) {\n      this.textBrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n    /**\n     * `Text` of the annotation.\n     * @private\n     */\n    get: function () {\n      return this.content;\n    },\n    set: function (value) {\n      this.content = value;\n      this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n    /**\n     * Internal variable to store `dictionary`.\n     * @hidden\n     */\n    get: function () {\n      return this.pdfDictionary;\n    },\n    set: function (value) {\n      this.pdfDictionary = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // Implementation\n  /**\n   * `Initialize` the annotation event handler and specifies the type of the annotation.\n   * @private\n   */\n  PdfAnnotation.prototype.initialize = function () {\n    this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n  };\n  /**\n   * Sets related `page` of the annotation.\n   * @private\n   */\n  PdfAnnotation.prototype.setPage = function (page) {\n    this.pdfPage = page;\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n  };\n  /**\n   * Handles the `BeginSave` event of the Dictionary.\n   * @private\n   */\n  PdfAnnotation.prototype.beginSave = function () {\n    this.save();\n  };\n  /**\n   * `Saves` an annotation.\n   * @private\n   */\n  /* tslint:disable */\n  PdfAnnotation.prototype.save = function () {\n    var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    var section = this.pdfPage.section;\n    var initialHeight = nativeRectangle.height;\n    var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n    nativeRectangle.x = tempLoacation.x;\n    nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n    nativeRectangle.y = tempLoacation.y - this.page.document.pageSettings.margins.top;\n    nativeRectangle.height = nativeRectangle.y - initialHeight;\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n    this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n  };\n  Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n    /* tslint:enable */\n    // IPdfWrapper Members\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    get: function () {\n      return this.pdfDictionary;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotation;\n}();\nexport { PdfAnnotation };","map":{"version":3,"names":["PdfColor","RectangleF","PointF","PdfDictionary","SaveAnnotationEventHandler","PdfArray","PdfNumber","PdfReferenceHolder","PdfString","DictionaryProperties","PdfName","PdfSolidBrush","PdfStandardFont","PdfFontFamily","PdfStringFormat","PdfTextAlignment","PdfAnnotation","arg1","dictionaryProperties","pdfColor","rectangle","pdfPage","textBrush","textFont","TimesRoman","format","Left","content","pdfDictionary","internalColor","darkness","initialize","bounds","Object","defineProperty","prototype","get","set","value","enumerable","configurable","dictionary","items","setValue","contents","annotationBeginSave","type","annot","setPage","page","p","beginSave","save","nativeRectangle","x","y","width","height","section","initialHeight","tempLoacation","pointToNativePdf","document","pageSettings","margins","top","rect","fromRectangle","ca"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js"],"sourcesContent":["import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}