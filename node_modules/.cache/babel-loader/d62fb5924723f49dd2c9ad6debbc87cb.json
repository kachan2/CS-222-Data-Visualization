{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */function () {\n  /**\n   * Constructor for Adaptor class\n   * @param  {DataOptions} ds?\n   * @hidden\n   * @returns aggregates\n   */\n  function Adaptor(ds) {\n    // common options for all the adaptors \n    this.options = {\n      from: 'table',\n      requestType: 'json',\n      sortBy: 'sorted',\n      select: 'select',\n      skip: 'skip',\n      group: 'group',\n      take: 'take',\n      search: 'search',\n      count: 'requiresCounts',\n      where: 'where',\n      aggregates: 'aggregates',\n      expand: 'expand'\n    };\n    /**\n     * Specifies the type of adaptor.\n     * @default Adaptor\n     */\n    this.type = Adaptor;\n    this.dataSource = ds;\n    this.pvt = {};\n  }\n  /**\n   * Returns the data from the query processing.\n   * @param  {Object} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @returns Object\n   */\n  Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n    return data;\n  };\n  return Adaptor;\n}();\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */function (_super) {\n  __extends(JsonAdaptor, _super);\n  function JsonAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dataManager\n   * @param  {Query} query\n   * @returns Object\n   */\n  JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n    var result = dataManager.dataSource.json.slice(0);\n    var count = result.length;\n    var countFlg = true;\n    var ret;\n    var key;\n    var lazyLoad = {};\n    var keyCount = 0;\n    var group = [];\n    var page;\n    for (var i = 0; i < query.lazyLoad.length; i++) {\n      keyCount++;\n      lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n    }\n    var agg = {};\n    for (var i = 0; i < query.queries.length; i++) {\n      key = query.queries[i];\n      if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n        if (key.fn === 'onGroup') {\n          group.push(key.e);\n        }\n        if (key.fn === 'onPage') {\n          page = key.e;\n        }\n        continue;\n      }\n      ret = this[key.fn].call(this, result, key.e, query);\n      if (key.fn === 'onAggregates') {\n        agg[key.e.field + ' - ' + key.e.type] = ret;\n      } else {\n        result = ret !== undefined ? ret : result;\n      }\n      if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n        countFlg = false;\n      }\n      if (countFlg) {\n        count = result.length;\n      }\n    }\n    if (keyCount) {\n      var args = {\n        query: query,\n        lazyLoad: lazyLoad,\n        result: result,\n        group: group,\n        page: page\n      };\n      var lazyLoadData = this.lazyLoadGroup(args);\n      result = lazyLoadData.result;\n      count = lazyLoadData.count;\n    }\n    if (query.isCountRequired) {\n      result = {\n        result: result,\n        count: count,\n        aggregates: agg\n      };\n    }\n    return result;\n  };\n  /**\n   * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n   * @param  {LazyLoadGroupArgs} args\n   */\n  JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n    var count = 0;\n    var agg = this.getAggregate(args.query);\n    var result = args.result;\n    if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n      var req = args.lazyLoad.onDemandGroupInfo;\n      for (var i = req.where.length - 1; i >= 0; i--) {\n        result = this.onWhere(result, req.where[i]);\n      }\n      if (args.group.length !== req.level) {\n        var field = args.group[req.level].fieldName;\n        result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      }\n      count = result.length;\n      var data = result;\n      result = result.slice(req.skip);\n      result = result.slice(0, req.take);\n      if (args.group.length !== req.level) {\n        this.formGroupResult(result, data);\n      }\n    } else {\n      var field = args.group[0].fieldName;\n      result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      count = result.length;\n      var data = result;\n      if (args.page) {\n        result = this.onPage(result, args.page, args.query);\n      }\n      this.formGroupResult(result, data);\n    }\n    return {\n      result: result,\n      count: count\n    };\n  };\n  JsonAdaptor.prototype.formGroupResult = function (result, data) {\n    if (result.length && data.length) {\n      var uid = 'GroupGuid';\n      var childLevel = 'childLevels';\n      var level = 'level';\n      var records = 'records';\n      result[uid] = data[uid];\n      result[childLevel] = data[childLevel];\n      result[level] = data[level];\n      result[records] = data[records];\n    }\n    return result;\n  };\n  /**\n   * Separate the aggregate query from the given queries\n   * @param  {Query} query\n   */\n  JsonAdaptor.prototype.getAggregate = function (query) {\n    var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n    var agg = [];\n    if (aggQuery.length) {\n      var tmp = void 0;\n      for (var i = 0; i < aggQuery.length; i++) {\n        tmp = aggQuery[i].e;\n        agg.push({\n          type: tmp.type,\n          field: DataUtil.getValue(tmp.field, query)\n        });\n      }\n    }\n    return agg;\n  };\n  /**\n   * Performs batch update in the JSON array which add, remove and update records.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n  JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var i;\n    var deletedRecordsLen = changes.deletedRecords.length;\n    for (i = 0; i < changes.addedRecords.length; i++) {\n      this.insert(dm, changes.addedRecords[i]);\n    }\n    for (i = 0; i < changes.changedRecords.length; i++) {\n      this.update(dm, e.key, changes.changedRecords[i]);\n    }\n    for (i = 0; i < deletedRecordsLen; i++) {\n      this.remove(dm, e.key, changes.deletedRecords[i]);\n    }\n    return changes;\n  };\n  /**\n   * Performs filter operation with the given data and where query.\n   * @param  {Object[]} ds\n   * @param  {{validate:Function}} e\n   */\n  JsonAdaptor.prototype.onWhere = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.filter(function (obj) {\n      if (e) {\n        return e.validate(obj);\n      }\n    });\n  };\n  /**\n   * Returns aggregate function based on the aggregate type.\n   * @param  {Object[]} ds\n   * @param  {{field:string} e\n   * @param  {string}} type\n   */\n  JsonAdaptor.prototype.onAggregates = function (ds, e) {\n    var fn = DataUtil.aggregates[e.type];\n    if (!ds || !fn || ds.length === 0) {\n      return null;\n    }\n    return fn(ds, e.field);\n  };\n  /**\n   * Performs search operation based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   */\n  JsonAdaptor.prototype.onSearch = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    if (e.fieldNames.length === 0) {\n      DataUtil.getFieldList(ds[0], e.fieldNames);\n    }\n    return ds.filter(function (obj) {\n      for (var j = 0; j < e.fieldNames.length; j++) {\n        if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n  /**\n   * Sort the data with given direction and field.\n   * @param  {Object[]} ds\n   * @param  {{comparer:(a:Object} e\n   * @param  {Object} b\n   */\n  JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    var fnCompare;\n    var field = DataUtil.getValue(e.fieldName, query);\n    if (!field) {\n      return ds.sort(e.comparer);\n    }\n    if (field instanceof Array) {\n      field = field.slice(0);\n      for (var i = field.length - 1; i >= 0; i--) {\n        if (!field[i]) {\n          continue;\n        }\n        fnCompare = e.comparer;\n        if (DataUtil.endsWith(field[i], ' desc')) {\n          fnCompare = DataUtil.fnSort('descending');\n          field[i] = field[i].replace(' desc', '');\n        }\n        ds = DataUtil.sort(ds, field[i], fnCompare);\n      }\n      return ds;\n    }\n    return DataUtil.sort(ds, field, e.comparer);\n  };\n  /**\n   * Group the data based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   * @param  {Query} query\n   */\n  JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    var agg = this.getAggregate(query);\n    return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n  };\n  /**\n   * Retrieves records based on the given page index and size.\n   * @param  {Object[]} ds\n   * @param  {{pageSize:number} e\n   * @param  {number}} pageIndex\n   * @param  {Query} query\n   */\n  JsonAdaptor.prototype.onPage = function (ds, e, query) {\n    var size = DataUtil.getValue(e.pageSize, query);\n    var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n    var end = start + size;\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(start, end);\n  };\n  /**\n   * Retrieves records based on the given start and end index from query.\n   * @param  {Object[]} ds\n   * @param  {{start:number} e\n   * @param  {number}} end\n   */\n  JsonAdaptor.prototype.onRange = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n  };\n  /**\n   * Picks the given count of records from the top of the datasource.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n  JsonAdaptor.prototype.onTake = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(0, DataUtil.getValue(e.nos));\n  };\n  /**\n   * Skips the given count of records from the data source.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n  JsonAdaptor.prototype.onSkip = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(DataUtil.getValue(e.nos));\n  };\n  /**\n   * Selects specified columns from the data source.\n   * @param  {Object[]} ds\n   * @param  {{fieldNames:string}} e\n   */\n  JsonAdaptor.prototype.onSelect = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n  };\n  /**\n   * Inserts new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {number} position\n   */\n  JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    if (isNullOrUndefined(position)) {\n      return dm.dataSource.json.push(data);\n    } else {\n      return dm.dataSource.json.splice(position, 0, data);\n    }\n  };\n  /**\n   * Remove the data from the dataSource based on the key field value.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n  JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    if (typeof value === 'object' && !(value instanceof Date)) {\n      value = DataUtil.getObject(keyField, value);\n    }\n    for (i = 0; i < ds.length; i++) {\n      if (DataUtil.getObject(keyField, ds[i]) === value) {\n        break;\n      }\n    }\n    return i !== ds.length ? ds.splice(i, 1) : null;\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n  JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    var key;\n    if (!isNullOrUndefined(keyField)) {\n      key = getValue(keyField, value);\n    }\n    for (i = 0; i < ds.length; i++) {\n      if (!isNullOrUndefined(keyField) && getValue(keyField, ds[i]) === key) {\n        break;\n      }\n    }\n    return i < ds.length ? merge(ds[i], value) : null;\n  };\n  return JsonAdaptor;\n}(Adaptor);\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */function (_super) {\n  __extends(UrlAdaptor, _super);\n  function UrlAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the query to generate request body.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns p\n   */\n  // tslint:disable-next-line:max-func-body-length\n  UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var params = query.params;\n    var url = dm.dataSource.url;\n    var temp;\n    var skip;\n    var take = null;\n    var options = this.options;\n    var request = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    // calc Paging & Range\n    if ('onPage' in singles) {\n      temp = singles.onPage;\n      skip = DataUtil.getValue(temp.pageIndex, query);\n      take = DataUtil.getValue(temp.pageSize, query);\n      skip = (skip - 1) * take;\n    } else if ('onRange' in singles) {\n      temp = singles.onRange;\n      skip = temp.start;\n      take = temp.end - temp.start;\n    }\n    // Sorting\n    for (var i = 0; i < queries.sorts.length; i++) {\n      temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n      request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', {\n        name: temp,\n        direction: queries.sorts[i].e.direction\n      }, query));\n    }\n    // hierarchy\n    if (hierarchyFilters) {\n      temp = this.getFiltersFrom(hierarchyFilters, query);\n      if (temp) {\n        request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n      }\n    }\n    // Filters\n    for (var i = 0; i < queries.filters.length; i++) {\n      var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n      if (this.getModuleName && this.getModuleName() === 'ODataV4Adaptor' && !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n        res = \"(\" + res + \")\";\n      }\n      request.filters.push(res);\n      var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n      for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        if (DataUtil.isNull(request[prop])) {\n          delete request[prop];\n        }\n      }\n    }\n    // Searches\n    for (var i = 0; i < queries.searches.length; i++) {\n      temp = queries.searches[i].e;\n      request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n        fields: temp.fieldNames,\n        operator: temp.operator,\n        key: temp.searchKey,\n        ignoreCase: temp.ignoreCase\n      }, query));\n    }\n    // Grouping\n    for (var i = 0; i < queries.groups.length; i++) {\n      request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n    }\n    // aggregates\n    for (var i = 0; i < queries.aggregates.length; i++) {\n      temp = queries.aggregates[i].e;\n      request.aggregates.push({\n        type: temp.type,\n        field: DataUtil.getValue(temp.field, query)\n      });\n    }\n    var req = {};\n    this.getRequestQuery(options, query, singles, request, req);\n    // Params\n    DataUtil.callAdaptorFunction(this, 'addParams', {\n      dm: dm,\n      query: query,\n      params: params,\n      reqParams: req\n    });\n    if (query.lazyLoad.length) {\n      for (var i = 0; i < query.lazyLoad.length; i++) {\n        req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n      }\n    }\n    // cleanup\n    var keys = Object.keys(req);\n    for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n      var prop = keys_2[_a];\n      if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n        delete req[prop];\n      }\n    }\n    if (!(options.skip in req && options.take in req) && take !== null) {\n      req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n      req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n    }\n    var p = this.pvt;\n    this.pvt = {};\n    if (this.options.requestType === 'json') {\n      return {\n        data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n        url: url,\n        pvtData: p,\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8'\n      };\n    }\n    temp = this.convertToQueryString(req, query, dm);\n    temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n    return {\n      type: 'GET',\n      url: temp.length ? url.replace(/\\/*$/, temp) : url,\n      pvtData: p\n    };\n  };\n  UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n    var param = 'param';\n    var req = request1;\n    req[options.from] = query.fromTable;\n    if (options.apply && query.distincts.length) {\n      req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n    }\n    if (!query.distincts.length && options.expand) {\n      req[options.expand] = 'onExpand' in this && 'onSelect' in singles ? DataUtil.callAdaptorFunction(this, 'onExpand', {\n        selects: DataUtil.getValue(singles.onSelect.fieldNames, query),\n        expands: query.expands\n      }, query) : query.expands;\n    }\n    req[options.select] = 'onSelect' in singles && !query.distincts.length ? DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n    req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n    req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n    req[options.skip] = 'onSkip' in singles ? DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n    req[options.take] = 'onTake' in singles ? DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n    req[options.where] = request.filters.length || request.searches.length ? DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n    req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n    req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n    req[options.aggregates] = request.aggregates.length ? DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n    req[param] = [];\n  };\n  /**\n   * Convert the object from processQuery to string which can be added query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   */\n  UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    return '';\n    // this needs to be overridden\n  };\n  /**\n   * Return the data from the data manager processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @param  {CrudOptions} changes?\n   */\n  UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n      var handleTimeZone = DataUtil.timeZoneHandling;\n      if (ds && !ds.timeZoneHandling) {\n        DataUtil.timeZoneHandling = false;\n      }\n      data = DataUtil.parse.parseJson(data);\n      DataUtil.timeZoneHandling = handleTimeZone;\n    }\n    var requests = request;\n    var pvt = requests.pvtData || {};\n    var groupDs = data ? data.groupDs : [];\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n    var d = JSON.parse(requests.data);\n    if (d && d.action === 'batch' && data && data.addedRecords) {\n      changes.addedRecords = data.addedRecords;\n      return changes;\n    }\n    if (data && data.d) {\n      data = data.d;\n    }\n    var args = {};\n    if (data && 'count' in data) {\n      args.count = data.count;\n    }\n    args.result = data && data.result ? data.result : data;\n    var isExpand = false;\n    if (Array.isArray(data.result) && data.result.length) {\n      var key = 'key';\n      var val = 'value';\n      var level = 'level';\n      if (!isNullOrUndefined(data.result[0][key])) {\n        args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n      }\n      if (query && query.lazyLoad.length && pvt.groups.length) {\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n          if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n            var value = query.lazyLoad[i][val][level];\n            if (pvt.groups.length === value) {\n              isExpand = true;\n            }\n          }\n        }\n      }\n    }\n    if (!isExpand) {\n      this.getAggregateResult(pvt, data, args, groupDs, query);\n    }\n    return DataUtil.isNull(args.count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n        this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n      }\n    }\n    var uid = 'GroupGuid';\n    var childLvl = 'childLevels';\n    var lvl = 'level';\n    var records = 'records';\n    data[uid] = consts[uid];\n    data[lvl] = level;\n    data[childLvl] = childLevel;\n    data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n    return data;\n  };\n  UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n    var childGroupedRecords = [];\n    var records = 'records';\n    for (var i = 0; i < data.length; i++) {\n      if (!hasRecords) {\n        for (var j = 0; j < data[i].items.length; j++) {\n          childGroupedRecords.push(data[i].items[j]);\n        }\n      } else {\n        childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n      }\n    }\n    return childGroupedRecords;\n  };\n  /**\n   * Add the group query to the adaptor`s option.\n   * @param  {Object[]} e\n   * @returns void\n   */\n  UrlAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return e;\n  };\n  /**\n   * Add the aggregate query to the adaptor`s option.\n   * @param  {Aggregates[]} e\n   * @returns void\n   */\n  UrlAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   */\n  UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var url;\n    var key;\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e[url],\n        key: e[key]\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @returns void\n   */\n  UrlAdaptor.prototype.beforeSend = function (dm, request) {\n    // need to extend this method\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName\n   */\n  UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number|string} value\n   * @param  {string} tableName\n   */\n  UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: value,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n  UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: value,\n        action: 'update',\n        keyColumn: keyField,\n        key: DataUtil.getObject(keyField, value),\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * To generate the predicate based on the filtered query.\n   * @param  {Object[]|string[]|number[]} data\n   * @param  {Query} query\n   * @hidden\n   */\n  UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n    var key = query.fKey;\n    var value;\n    var prop = key;\n    var pKey = query.key;\n    var predicats = [];\n    if (typeof data[0] !== 'object') {\n      prop = null;\n    }\n    for (var i = 0; i < data.length; i++) {\n      if (typeof data[0] === 'object') {\n        value = DataUtil.getObject(pKey || prop, data[i]);\n      } else {\n        value = data[i];\n      }\n      predicats.push(new Predicate(key, 'equal', value));\n    }\n    return Predicate.or(predicats);\n  };\n  UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n    var pData = data;\n    if (data && data.result) {\n      pData = data.result;\n    }\n    if (pvt && pvt.aggregates && pvt.aggregates.length) {\n      var agg = pvt.aggregates;\n      var fn = void 0;\n      var aggregateData = pData;\n      var res = {};\n      if (data.aggregate) {\n        aggregateData = data.aggregate;\n      }\n      for (var i = 0; i < agg.length; i++) {\n        fn = DataUtil.aggregates[agg[i].type];\n        if (fn) {\n          res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n        }\n      }\n      args.aggregates = res;\n    }\n    var key = 'key';\n    var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n    if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n      var groups = pvt.groups;\n      for (var i = 0; i < groups.length; i++) {\n        var level = null;\n        if (!isNullOrUndefined(groupDs)) {\n          groupDs = DataUtil.group(groupDs, groups[i]);\n        }\n        var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n        pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n      }\n      args.result = pData;\n    }\n    return args;\n  };\n  UrlAdaptor.prototype.getQueryRequest = function (query) {\n    var req = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n    req.groups = Query.filterQueries(query.queries, 'onGroup');\n    req.filters = Query.filterQueries(query.queries, 'onWhere');\n    req.searches = Query.filterQueries(query.queries, 'onSearch');\n    req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n    return req;\n  };\n  UrlAdaptor.prototype.addParams = function (options) {\n    var req = options.reqParams;\n    if (options.params.length) {\n      req.params = {};\n    }\n    for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n      var tmp = _a[_i];\n      if (req[tmp.key]) {\n        throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n      }\n      req[tmp.key] = tmp.value;\n      if (tmp.fn) {\n        req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n      }\n      req.params[tmp.key] = req[tmp.key];\n    }\n  };\n  return UrlAdaptor;\n}(Adaptor);\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */function (_super) {\n  __extends(ODataAdaptor, _super);\n  function ODataAdaptor(props) {\n    var _this = _super.call(this) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$inlinecount',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PUT'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  ODataAdaptor.prototype.getModuleName = function () {\n    return 'ODataAdaptor';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n  ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var operator;\n    var guid;\n    var val = predicate.value;\n    var type = typeof val;\n    var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n    if (val instanceof Date) {\n      val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n    }\n    if (type === 'string') {\n      val = val.replace(/'/g, \"''\");\n      if (predicate.ignoreCase) {\n        val = val.toLowerCase();\n      }\n      val = encodeURIComponent(val);\n      val = '\\'' + val + '\\'';\n      if (requiresCast) {\n        field = 'cast(' + field + ', \\'Edm.String\\')';\n      }\n      if (DataUtil.parse.isGuid(val)) {\n        guid = 'guid';\n      }\n      if (predicate.ignoreCase) {\n        if (!guid) {\n          field = 'tolower(' + field + ')';\n        }\n        val = val.toLowerCase();\n      }\n    }\n    operator = DataUtil.odBiOperator[predicate.operator];\n    if (operator) {\n      returnValue += field;\n      returnValue += operator;\n      if (guid) {\n        returnValue += guid;\n      }\n      return returnValue + val;\n    }\n    if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n      operator = DataUtil.odv4UniOperator[predicate.operator];\n    } else {\n      operator = DataUtil.odUniOperator[predicate.operator];\n    }\n    if (operator === 'substringof') {\n      var temp = val;\n      val = field;\n      field = temp;\n    }\n    returnValue += operator + '(';\n    returnValue += field + ',';\n    if (guid) {\n      returnValue += guid;\n    }\n    returnValue += val + ')';\n    return returnValue;\n  };\n  ODataAdaptor.prototype.addParams = function (options) {\n    _super.prototype.addParams.call(this, options);\n    delete options.reqParams.params;\n  };\n  /**\n   * Generate request string based on the multiple filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n  ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n    var res = [];\n    for (var i = 0; i < predicate.predicates.length; i++) {\n      res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n    }\n    return res.join(' ' + predicate.condition + ' ');\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {Predicate} filter\n   * @param  {boolean} requiresCast?\n   */\n  ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n    return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {string[]} filters\n   */\n  ODataAdaptor.prototype.onWhere = function (filters) {\n    if (this.pvt.search) {\n      filters.push(this.onEachWhere(this.pvt.search, null, true));\n    }\n    return filters.join(' and ');\n  };\n  /**\n   * Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n  ODataAdaptor.prototype.onEachSearch = function (e) {\n    if (e.fields && e.fields.length === 0) {\n      DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n    }\n    var filter = this.pvt.search || [];\n    for (var i = 0; i < e.fields.length; i++) {\n      filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n    }\n    this.pvt.search = filter;\n  };\n  /**\n   * Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n  ODataAdaptor.prototype.onSearch = function (e) {\n    this.pvt.search = Predicate.or(this.pvt.search);\n    return '';\n  };\n  /**\n   * Generate query string based on multiple sort criteria from query.\n   * @param  {QueryOptions} e\n   */\n  ODataAdaptor.prototype.onEachSort = function (e) {\n    var res = [];\n    if (e.name instanceof Array) {\n      for (var i = 0; i < e.name.length; i++) {\n        res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n      }\n    } else {\n      res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n    }\n    return res.join(',');\n  };\n  /**\n   * Returns sort query string.\n   * @param  {string[]} e\n   */\n  ODataAdaptor.prototype.onSortBy = function (e) {\n    return e.reverse().join(',');\n  };\n  /**\n   * Adds the group query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n  ODataAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return [];\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n  ODataAdaptor.prototype.onSelect = function (e) {\n    for (var i = 0; i < e.length; i++) {\n      e[i] = ODataAdaptor.getField(e[i]);\n    }\n    return e.join(',');\n  };\n  /**\n   * Add the aggregate query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n  ODataAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n    return '';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n  ODataAdaptor.prototype.onCount = function (e) {\n    return e === true ? 'allpages' : '';\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n  ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.options.multipartAccept);\n      request.setRequestHeader('DataServiceVersion', '2.0');\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n    } else {\n      request.setRequestHeader('Accept', this.options.accept);\n    }\n    request.setRequestHeader('DataServiceVersion', '2.0');\n    request.setRequestHeader('MaxDataServiceVersion', '2.0');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n  ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaCheck = 'odata.metadata';\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaCheck]) {\n      var dataUrls = data[metaCheck].split('/$metadata#');\n      this.rootUrl = dataUrls[0];\n      this.resourceTableName = dataUrls[1];\n    }\n    var pvtData = 'pvtData';\n    if (!isNullOrUndefined(data.d)) {\n      var dataCopy = query && query.isCountRequired ? data.d.results : data.d;\n      var metaData = '__metadata';\n      if (!isNullOrUndefined(dataCopy)) {\n        for (var i = 0; i < dataCopy.length; i++) {\n          if (!isNullOrUndefined(dataCopy[i][metaData])) {\n            delete dataCopy[i][metaData];\n          }\n        }\n      }\n    }\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n    var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n    var count = null;\n    var version = versionCheck && parseInt(versionCheck, 10) || 2;\n    if (query && query.isCountRequired) {\n      var oDataCount = '__count';\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n      if (data.d) {\n        data = data.d;\n      }\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n    }\n    if (version === 3 && data.value) {\n      data = data.value;\n    }\n    if (data.d) {\n      data = data.d;\n    }\n    if (version < 3 && data.results) {\n      data = data.results;\n    }\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\n   * Converts the request object to query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   * @returns tableName\n   */\n  ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    var res = [];\n    var table = 'table';\n    var tableName = request[table] || '';\n    var format = '$format';\n    delete request[table];\n    if (dm.dataSource.requiresFormat) {\n      request[format] = 'json';\n    }\n    var keys = Object.keys(request);\n    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n      var prop = keys_4[_i];\n      res.push(prop + '=' + request[prop]);\n    }\n    res = res.join('&');\n    if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n      return res;\n    }\n    return res.length ? tableName + '?' + res : tableName || '';\n  };\n  ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n    for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n      var prop = _a[_i];\n      if (convertObj[prop] instanceof Date) {\n        convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n      }\n    }\n    return convertObj;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n  ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n      data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n  ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var url;\n    if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n      url = \"('\" + value + \"')\";\n    } else {\n      url = \"(\" + value + \")\";\n    }\n    return {\n      type: 'DELETE',\n      url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n    };\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns this\n   */\n  ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n    if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n      value = this.compareAndRemove(value, original, keyField);\n    }\n    var url;\n    if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n      url = \"('\" + value[keyField] + \"')\";\n    } else {\n      url = \"(\" + value[keyField] + \")\";\n    }\n    return {\n      type: this.options.updateType,\n      url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n      data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n      accept: this.options.accept\n    };\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   * @returns {Object}\n   */\n  ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch : dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var args = {\n      url: e.url,\n      key: e.key,\n      cid: 1,\n      cSet: DataUtil.getGuid(this.options.changeSet)\n    };\n    var req = '--' + initialGuid + '\\n';\n    req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n    this.pvt.changeSet = 0;\n    req += this.generateInsertRequest(changes.addedRecords, args, dm);\n    req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n    req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n    req += args.cSet + '--\\n';\n    req += '--' + initialGuid + '--';\n    return {\n      type: 'POST',\n      url: url,\n      dataType: 'json',\n      contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n      data: req\n    };\n  };\n  /**\n   * Generate the string content from the removed records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   * @returns this\n   */\n  ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    var stat = {\n      'method': 'DELETE ',\n      'url': function (data, i, key) {\n        var url = DataUtil.getObject(key, data[i]);\n        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n          return '(' + url + ')';\n        } else if (url instanceof Date) {\n          var dateTime = data[i][key];\n          return '(' + dateTime.toJSON() + ')';\n        } else {\n          return \"('\" + url + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return '';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req + '\\n';\n  };\n  /**\n   * Generate the string content from the inserted records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n  ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    var stat = {\n      'method': 'POST ',\n      'url': function (data, i, key) {\n        return '';\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  /**\n   * Generate the string content from the updated records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n  ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n    var _this = this;\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    arr.forEach(function (change) {\n      return change = _this.compareAndRemove(change, org.filter(function (o) {\n        return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change);\n      })[0], e.key);\n    });\n    var stat = {\n      'method': this.options.updateType + ' ',\n      'url': function (data, i, key) {\n        if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n          return '(' + data[i][key] + ')';\n        } else if (data[i][key] instanceof Date) {\n          var date = data[i][key];\n          return '(' + date.toJSON() + ')';\n        } else {\n          return \"('\" + data[i][key] + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  ODataAdaptor.getField = function (prop) {\n    return prop.replace(/\\./g, '/');\n  };\n  ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n    var req = '';\n    for (var i = 0; i < arr.length; i++) {\n      req += '\\n' + e.cSet + '\\n';\n      req += this.options.changeSetContent + '\\n\\n';\n      req += stat.method;\n      if (stat.method === 'POST ') {\n        req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n        req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'DELETE ') {\n        req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      }\n      req += 'Accept: ' + this.options.accept + '\\n';\n      req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n      req += this.options.batchChangeSetContentType + '\\n';\n      if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n        req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n        delete arr[i]['@odata.etag'];\n      } else {\n        req += '\\n';\n      }\n      req += stat.data(arr, i);\n    }\n    return req;\n  };\n  ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n    if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n      var guid = xhr.getResponseHeader('Content-Type');\n      var cIdx = void 0;\n      var jsonObj = void 0;\n      var d = data + '';\n      guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n      d = d.split(guid);\n      if (d.length < 2) {\n        return {};\n      }\n      d = d[1];\n      var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n      if (exVal) {\n        d.replace(exVal[0], '');\n      }\n      var changeGuid = exVal ? exVal[1] : '';\n      d = d.split(changeGuid);\n      for (var i = d.length; i > -1; i--) {\n        if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n          continue;\n        }\n        cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n        if (changes.addedRecords[cIdx]) {\n          jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n          extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n        }\n      }\n      return changes;\n    }\n    return null;\n  };\n  ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n    var _this = this;\n    if (isNullOrUndefined(original)) {\n      return data;\n    }\n    Object.keys(data).forEach(function (prop) {\n      if (prop !== key && prop !== '@odata.etag') {\n        if (DataUtil.isPlainObject(data[prop])) {\n          _this.compareAndRemove(data[prop], original[prop]);\n          var final = Object.keys(data[prop]).filter(function (data) {\n            return data !== '@odata.etag';\n          });\n          if (final.length === 0) {\n            delete data[prop];\n          }\n        } else if (data[prop] === original[prop]) {\n          delete data[prop];\n        } else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n          delete data[prop];\n        }\n      }\n    });\n    return data;\n  };\n  return ODataAdaptor;\n}(UrlAdaptor);\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */function (_super) {\n  __extends(ODataV4Adaptor, _super);\n  function ODataV4Adaptor(props) {\n    var _this = _super.call(this, props) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json, text/javascript, */*; q=0.01',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$count',\n      search: '$search',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PATCH',\n      localTime: false,\n      apply: '$apply'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  ODataV4Adaptor.prototype.getModuleName = function () {\n    return 'ODataV4Adaptor';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n  ODataV4Adaptor.prototype.onCount = function (e) {\n    return e === true ? 'true' : '';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n  ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var val = predicate.value;\n    var isDate = val instanceof Date;\n    if (query instanceof Query) {\n      var queries = this.getQueryRequest(query);\n      for (var i = 0; i < queries.filters.length; i++) {\n        if (queries.filters[i].e.key === predicate.value) {\n          requiresCast = true;\n        }\n      }\n    }\n    returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n    if (isDate) {\n      returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n    }\n    if (DataUtil.parse.isGuid(val)) {\n      returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n    }\n    return returnValue;\n  };\n  /**\n   *  Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n  ODataV4Adaptor.prototype.onEachSearch = function (e) {\n    var search = this.pvt.searches || [];\n    search.push(e.key);\n    this.pvt.searches = search;\n  };\n  /**\n   *  Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n  ODataV4Adaptor.prototype.onSearch = function (e) {\n    return this.pvt.searches.join(' OR ');\n  };\n  /**\n   * Returns the expand query string.\n   * @param  {string} e\n   */\n  ODataV4Adaptor.prototype.onExpand = function (e) {\n    var _this = this;\n    var selected = {};\n    var expanded = {};\n    var expands = e.expands.slice();\n    var exArr = [];\n    var selects = e.selects.filter(function (item) {\n      return item.indexOf('.') > -1;\n    });\n    selects.forEach(function (select) {\n      var splits = select.split('.');\n      if (!(splits[0] in selected)) {\n        selected[splits[0]] = [];\n      }\n      if (splits.length == 2) {\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n          if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n            selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n          } else {\n            selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n          }\n        } else {\n          selected[splits[0]].push('$select=' + splits[1]);\n        }\n      } else {\n        var sel = '$select=' + splits[splits.length - 1];\n        var exp = '';\n        var close_1 = '';\n        for (var i = 1; i < splits.length - 1; i++) {\n          exp = exp + '$expand=' + splits[i] + '(';\n          close_1 = close_1 + ')';\n        }\n        var combineVal = exp + sel + close_1;\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 && _this.expandQueryIndex(selected[splits[0]], true)) {\n          var idx = _this.expandQueryIndex(selected[splits[0]]);\n          selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n        } else {\n          selected[splits[0]].push(combineVal);\n        }\n      }\n    });\n    //Auto expand from select query\n    Object.keys(selected).forEach(function (expand) {\n      if (expands.indexOf(expand) === -1) {\n        expands.push(expand);\n      }\n    });\n    expands.forEach(function (expand) {\n      expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n    });\n    Object.keys(expanded).forEach(function (ex) {\n      return exArr.push(expanded[ex]);\n    });\n    return exArr.join(',');\n  };\n  ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n    for (var i = 0; i < query.length; i++) {\n      if (query[i].indexOf('$expand') !== -1) {\n        return isExpand ? true : i;\n      }\n    }\n    return isExpand ? false : 0;\n  };\n  /**\n   * Returns the groupby query string.\n   * @param  {string} e\n   */\n  ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n    var fields = distinctFields.map(function (field) {\n      return ODataAdaptor.getField(field);\n    }).join(',');\n    return \"groupby((\" + fields + \"))\";\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n  ODataV4Adaptor.prototype.onSelect = function (e) {\n    return _super.prototype.onSelect.call(this, e.filter(function (item) {\n      return item.indexOf('.') === -1;\n    }));\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n  ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n      request.setRequestHeader('Prefer', 'return=representation');\n    }\n    request.setRequestHeader('Accept', this.options.accept);\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n  ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaName = '@odata.context';\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaName]) {\n      var dataUrl = data[metaName].split('/$metadata#');\n      this.rootUrl = dataUrl[0];\n      this.resourceTableName = dataUrl[1];\n    }\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n    var count = null;\n    var dataCount = '@odata.count';\n    if (query && query.isCountRequired) {\n      if (dataCount in data) {\n        count = data[dataCount];\n      }\n    }\n    data = !isNullOrUndefined(data.value) ? data.value : data;\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: count,\n      aggregates: args.aggregates\n    };\n  };\n  return ODataV4Adaptor;\n}(ODataAdaptor);\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */function (_super) {\n  __extends(WebApiAdaptor, _super);\n  function WebApiAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  WebApiAdaptor.prototype.getModuleName = function () {\n    return 'WebApiAdaptor';\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n  WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.url,\n      data: JSON.stringify(data)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n  WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    return {\n      type: 'DELETE',\n      url: dm.dataSource.url + '/' + value,\n      data: JSON.stringify(value)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n  WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    return {\n      type: 'PUT',\n      url: dm.dataSource.url,\n      data: JSON.stringify(value)\n    };\n  };\n  WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var _this = this;\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var req = [];\n    var _loop_1 = function (i, x) {\n      changes.addedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': 'POST ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //insertion\n    for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n      _loop_1(i, x);\n    }\n    var _loop_2 = function (i, x) {\n      changes.changedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': _this.options.updateType + ' ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //updation \n    for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n      _loop_2(i, x);\n    }\n    var _loop_3 = function (i, x) {\n      changes.deletedRecords.forEach(function (j, d) {\n        var state = {\n          'mtd': 'DELETE ',\n          'url': function (data, i, key) {\n            var url = DataUtil.getObject(key, data[i]);\n            if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n              return '/' + url;\n            } else if (url instanceof Date) {\n              var datTime = data[i][key];\n              return '/' + datTime.toJSON();\n            } else {\n              return \"/'\" + url + \"'\";\n            }\n          },\n          'data': function (data, i) {\n            return '';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //deletion\n    for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n      _loop_3(i, x);\n    }\n    req.push('--' + initialGuid + '--', '');\n    return {\n      type: 'POST',\n      url: url,\n      contentType: 'multipart/mixed; boundary=' + initialGuid,\n      data: req.join('\\r\\n')\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n  WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n  WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var count = null;\n    var args = {};\n    if (request && request.type.toLowerCase() !== 'post') {\n      var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n      var version = versionCheck && parseInt(versionCheck, 10) || 2;\n      if (query && query.isCountRequired) {\n        if (!DataUtil.isNull(data.Count)) {\n          count = data.Count;\n        }\n      }\n      if (version < 3 && data.Items) {\n        data = data.Items;\n      }\n      args.count = count;\n      args.result = data;\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n    args.result = args.result || data;\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  return WebApiAdaptor;\n}(ODataAdaptor);\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */function (_super) {\n  __extends(WebMethodAdaptor, _super);\n  function WebMethodAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Prepare the request body based on the query.\n   * The query information can be accessed at the WebMethod using variable named `value`.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns application\n   */\n  WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n    var getData = 'data';\n    var data = DataUtil.parse.parseJson(obj[getData]);\n    var result = {};\n    var value = 'value';\n    if (data.param) {\n      for (var i = 0; i < data.param.length; i++) {\n        var param = data.param[i];\n        var key = Object.keys(param)[0];\n        result[key] = param[key];\n      }\n    }\n    result[value] = data;\n    var pvtData = 'pvtData';\n    var url = 'url';\n    return {\n      data: JSON.stringify(result),\n      url: obj[url],\n      pvtData: obj[pvtData],\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8'\n    };\n  };\n  return WebMethodAdaptor;\n}(UrlAdaptor);\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */function (_super) {\n  __extends(RemoteSaveAdaptor, _super);\n  /**\n   * @hidden\n   */\n  function RemoteSaveAdaptor() {\n    var _this = _super.call(this) || this;\n    setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n    return _this;\n  }\n  RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    this.pvt.position = position;\n    this.updateType = 'add';\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n    _super.prototype.remove.call(this, dm, keyField, val);\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: val,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n    this.updateType = 'update';\n    this.updateKey = keyField;\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: val,\n        action: 'update',\n        keyColumn: keyField,\n        key: val[keyField],\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n    var i;\n    var newData = request ? JSON.parse(request.data) : data;\n    data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n    if (this.updateType === 'add') {\n      _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n    }\n    if (this.updateType === 'update') {\n      _super.prototype.update.call(this, ds, this.updateKey, data);\n    }\n    this.updateType = undefined;\n    if (data.added) {\n      for (i = 0; i < data.added.length; i++) {\n        _super.prototype.insert.call(this, ds, data.added[i]);\n      }\n    }\n    if (data.changed) {\n      for (i = 0; i < data.changed.length; i++) {\n        _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n      }\n    }\n    if (data.deleted) {\n      for (i = 0; i < data.deleted.length; i++) {\n        _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n      }\n    }\n    return data;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * Also perform the changes in the locally cached data to sync with the remote data.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n  RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e.url,\n        key: e.key\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.addParams = function (options) {\n    var urlParams = new UrlAdaptor();\n    urlParams.addParams(options);\n  };\n  return RemoteSaveAdaptor;\n}(JsonAdaptor);\nexport { RemoteSaveAdaptor };\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */function (_super) {\n  __extends(CustomDataAdaptor, _super);\n  function CustomDataAdaptor(props) {\n    var _this = _super.call(this) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      getData: new Function(),\n      addRecord: new Function(),\n      updateRecord: new Function(),\n      deleteRecord: new Function(),\n      batchUpdate: new Function()\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  CustomDataAdaptor.prototype.getModuleName = function () {\n    return 'CustomDataAdaptor';\n  };\n  return CustomDataAdaptor;\n}(UrlAdaptor);\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\nvar GraphQLAdaptor = /** @class */function (_super) {\n  __extends(GraphQLAdaptor, _super);\n  function GraphQLAdaptor(options) {\n    var _this = _super.call(this) || this;\n    _this.opt = options;\n    _this.schema = _this.opt.response;\n    _this.query = _this.opt.query;\n    _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () {};\n    _this.getQuery = function () {\n      return _this.query;\n    };\n    return _this;\n  }\n  GraphQLAdaptor.prototype.getModuleName = function () {\n    return 'GraphQLAdaptor';\n  };\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   */\n  GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n    var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n    var dm = JSON.parse(urlQuery.data);\n    // constructing GraphQL parameters\n    var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where', 'search', 'requiresCounts', 'aggregates', 'params'];\n    var temp = {};\n    var str = 'searchwhereparams';\n    keys.filter(function (e) {\n      temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n    });\n    var vars = this.getVariables() || {};\n    vars['datamanager'] = temp;\n    var data = JSON.stringify({\n      query: this.getQuery(),\n      variables: vars\n    });\n    urlQuery.data = data;\n    return urlQuery;\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @returns DataResult\n   */\n  GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n    var res = resData;\n    var count;\n    var aggregates;\n    var result = getValue(this.schema.result, res.data);\n    if (this.schema.count) {\n      count = getValue(this.schema.count, res.data);\n    }\n    if (this.schema.aggregates) {\n      aggregates = getValue(this.schema.aggregates, res.data);\n      aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n    }\n    var pvt = request.pvtData || {};\n    var args = {\n      result: result,\n      aggregates: aggregates\n    };\n    var data = args;\n    if (pvt && pvt.groups && pvt.groups.length) {\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n    return !isNullOrUndefined(count) ? {\n      result: args.result,\n      count: count,\n      aggregates: aggregates\n    } : args.result;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   */\n  GraphQLAdaptor.prototype.insert = function () {\n    var inserted = _super.prototype.insert.apply(this, arguments);\n    return this.generateCrudData(inserted, 'insert');\n  };\n  /**\n   * Prepare and returns request body which is used to update a new record in the table.\n   */\n  GraphQLAdaptor.prototype.update = function () {\n    var inserted = _super.prototype.update.apply(this, arguments);\n    return this.generateCrudData(inserted, 'update');\n  };\n  /**\n   * Prepare and returns request body which is used to remove a new record in the table.\n   */\n  GraphQLAdaptor.prototype.remove = function () {\n    var inserted = _super.prototype.remove.apply(this, arguments);\n    return this.generateCrudData(inserted, 'remove');\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   * @param  {Query} query\n   * @param  {Object} original\n   */\n  GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var batch = _super.prototype.batchRequest.apply(this, arguments);\n    var bData = JSON.parse(batch.data);\n    bData.key = e.key;\n    batch.data = JSON.stringify(bData);\n    return this.generateCrudData(batch, 'batch');\n  };\n  GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n    var parsed = JSON.parse(crudData.data);\n    crudData.data = JSON.stringify({\n      query: this.opt.getMutation(action),\n      variables: parsed\n    });\n    return crudData;\n  };\n  return GraphQLAdaptor;\n}(UrlAdaptor);\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */function (_super) {\n  __extends(CacheAdaptor, _super);\n  /**\n   * Constructor for CacheAdaptor class.\n   * @param  {CacheAdaptor} adaptor?\n   * @param  {number} timeStamp?\n   * @param  {number} pageSize?\n   * @hidden\n   */\n  function CacheAdaptor(adaptor, timeStamp, pageSize) {\n    var _this = _super.call(this) || this;\n    _this.isCrudAction = false;\n    _this.isInsertAction = false;\n    if (!isNullOrUndefined(adaptor)) {\n      _this.cacheAdaptor = adaptor;\n    }\n    _this.pageSize = pageSize;\n    _this.guidId = DataUtil.getGuid('cacheAdaptor');\n    var obj = {\n      keys: [],\n      results: []\n    };\n    window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n    var guid = _this.guidId;\n    if (!isNullOrUndefined(timeStamp)) {\n      setInterval(function () {\n        var data;\n        data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n        var forDel = [];\n        for (var i = 0; i < data.results.length; i++) {\n          var currentTime = +new Date();\n          var requestTime = +new Date(data.results[i].timeStamp);\n          data.results[i].timeStamp = currentTime - requestTime;\n          if (currentTime - requestTime > timeStamp) {\n            forDel.push(i);\n          }\n        }\n        for (var i = 0; i < forDel.length; i++) {\n          data.results.splice(forDel[i], 1);\n          data.keys.splice(forDel[i], 1);\n        }\n        window.localStorage.removeItem(guid);\n        window.localStorage.setItem(guid, JSON.stringify(data));\n      }, timeStamp);\n    }\n    return _this;\n  }\n  /**\n   * It will generate the key based on the URL when we send a request to server.\n   * @param  {string} url\n   * @param  {Query} query?\n   * @hidden\n   */\n  CacheAdaptor.prototype.generateKey = function (url, query) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var key = url;\n    var page = 'onPage';\n    if (page in singles) {\n      key += singles[page].pageIndex;\n    }\n    queries.sorts.forEach(function (obj) {\n      key += obj.e.direction + obj.e.fieldName;\n    });\n    queries.groups.forEach(function (obj) {\n      key += obj.e.fieldName;\n    });\n    queries.searches.forEach(function (obj) {\n      key += obj.e.searchKey;\n    });\n    for (var filter = 0; filter < queries.filters.length; filter++) {\n      var currentFilter = queries.filters[filter];\n      if (currentFilter.e.isComplex) {\n        var newQuery = query.clone();\n        newQuery.queries = [];\n        for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n          newQuery.queries.push({\n            fn: 'onWhere',\n            e: currentFilter.e.predicates[i],\n            filter: query.queries.filter\n          });\n        }\n        key += currentFilter.e.condition + this.generateKey(url, newQuery);\n      } else {\n        key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n      }\n    }\n    return key;\n  };\n  /**\n   * Process the query to generate request body.\n   * If the data is already cached, it will return the cached data.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   * @param  {Object[]} hierarchyFilters?\n   */\n  CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var key = this.generateKey(dm.dataSource.url, query);\n    var cachedItems;\n    cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n    if (data != null && !this.isCrudAction && !this.isInsertAction) {\n      return data;\n    }\n    this.isCrudAction = null;\n    this.isInsertAction = null;\n    return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   */\n  CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (this.isInsertAction || request && this.cacheAdaptor.options.batch && DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post') {\n      return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n    }\n    data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n    var obj = {};\n    obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var index = obj.keys.indexOf(key);\n    if (index !== -1) {\n      obj.results.splice(index, 1);\n      obj.keys.splice(index, 1);\n    }\n    obj.results[obj.keys.push(key) - 1] = {\n      keys: key,\n      result: data.result,\n      timeStamp: new Date(),\n      count: data.count\n    };\n    while (obj.results.length > this.pageSize) {\n      obj.results.splice(0, 1);\n      obj.keys.splice(0, 1);\n    }\n    window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n    return data;\n  };\n  /**\n   * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n  CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n    }\n    if (!dm.dataSource.crossDomain) {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n    }\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n  CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.update(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n  CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n    this.isInsertAction = true;\n    return this.cacheAdaptor.insert(dm, data, tableName);\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n  CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n  CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    return this.cacheAdaptor.batchRequest(dm, changes, e);\n  };\n  return CacheAdaptor;\n}(UrlAdaptor);\nexport { CacheAdaptor };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","merge","extend","isNullOrUndefined","setValue","getValue","DataUtil","Query","Predicate","consts","GroupGuid","Adaptor","ds","options","from","requestType","sortBy","select","skip","group","take","search","count","where","aggregates","expand","type","dataSource","pvt","processResponse","data","query","xhr","JsonAdaptor","_super","apply","arguments","processQuery","dataManager","result","json","slice","length","countFlg","ret","key","lazyLoad","keyCount","page","i","value","agg","queries","fn","push","e","call","field","undefined","args","lazyLoadData","lazyLoadGroup","isCountRequired","getAggregate","onDemandGroupInfo","req","onWhere","level","fieldName","comparer","formGroupResult","onPage","uid","childLevel","records","aggQuery","filterQueries","tmp","batchRequest","dm","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","filter","obj","validate","onAggregates","onSearch","fieldNames","getFieldList","j","getObject","searchKey","ignoreCase","ignoreAccent","onSortBy","fnCompare","sort","endsWith","fnSort","replace","onGroup","size","pageSize","start","pageIndex","end","onRange","onTake","nos","onSkip","onSelect","tableName","position","splice","keyField","Date","UrlAdaptor","hierarchyFilters","getQueryRequest","singles","filterQueryLists","params","url","temp","request","sorts","groups","filters","searches","callAdaptorFunction","name","direction","getFiltersFrom","toJson","res","getModuleName","keys_3","keys","_i","keys_1","prop","isNull","fields","operator","getRequestQuery","reqParams","_a","keys_2","JSON","stringify","parse","jsonDateReplacer","pvtData","contentType","convertToQueryString","indexOf","request1","param","fromTable","distincts","selects","expands","getResponseHeader","handleTimeZone","timeZoneHandling","parseJson","requests","groupDs","action","isExpand","isArray","val","formRemoteGroupedData","getAggregateResult","items","childLvl","lvl","getGroupedRecords","hasRecords","childGroupedRecords","concat","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","getAddParams","beforeSend","insertUrl","keyColumn","updateUrl","fKey","pKey","predicats","or","pData","aggregateData","aggregate","isServerGrouping","groupQuery","addParams","Error","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","predicate","requiresCast","returnValue","guid","getField","replacer","toLowerCase","encodeURIComponent","isGuid","odBiOperator","odv4UniOperator","odUniOperator","onComplexPredicate","predicates","onEachWhere","join","condition","isComplex","onEachSearch","throwError","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","split","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","version","parseInt","oDataCount","format","requiresFormat","keys_4","localTimeReplacer","convertObj","dateParse","toLocalTime","localTime","compareAndRemove","initialGuid","getGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","arr","stat","dateTime","toJSON","generateBodyContent","org","forEach","change","o","date","method","cIdx","jsonObj","substring","exVal","exec","changeGuid","test","isPlainObject","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","splits","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","map","metaName","dataUrl","dataCount","WebApiAdaptor","_loop_1","x","location","host","_loop_2","_loop_3","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","newData","urlParams","CustomDataAdaptor","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","str","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","adaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","window","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","clone","cachedItems","index","crossDomain"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-data/src/adaptors.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field = args.group[0].fieldName;\n            result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = \"(\" + res + \")\";\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = val.replace(/'/g, \"''\");\n            if (predicate.ignoreCase) {\n                val = val.toLowerCase();\n            }\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            if (splits.length == 2) {\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n                    }\n                    else {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n                    }\n                }\n                else {\n                    selected[splits[0]].push('$select=' + splits[1]);\n                }\n            }\n            else {\n                var sel = '$select=' + splits[splits.length - 1];\n                var exp = '';\n                var close_1 = '';\n                for (var i = 1; i < splits.length - 1; i++) {\n                    exp = exp + '$expand=' + splits[i] + '(';\n                    close_1 = close_1 + ')';\n                }\n                var combineVal = exp + sel + close_1;\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n                }\n                else {\n                    selected[splits[0]].push(combineVal);\n                }\n            }\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n        for (var i = 0; i < query.length; i++) {\n            if (query[i].indexOf('$expand') !== -1) {\n                return isExpand ? true : i;\n            }\n        }\n        return isExpand ? false : 0;\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\nvar GraphQLAdaptor = /** @class */ (function (_super) {\n    __extends(GraphQLAdaptor, _super);\n    function GraphQLAdaptor(options) {\n        var _this = _super.call(this) || this;\n        _this.opt = options;\n        _this.schema = _this.opt.response;\n        _this.query = _this.opt.query;\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\n        _this.getQuery = function () { return _this.query; };\n        return _this;\n    }\n    GraphQLAdaptor.prototype.getModuleName = function () {\n        return 'GraphQLAdaptor';\n    };\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     */\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n        var dm = JSON.parse(urlQuery.data);\n        // constructing GraphQL parameters\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\n            'search', 'requiresCounts', 'aggregates', 'params'];\n        var temp = {};\n        var str = 'searchwhereparams';\n        keys.filter(function (e) {\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n        });\n        var vars = this.getVariables() || {};\n        vars['datamanager'] = temp;\n        var data = JSON.stringify({\n            query: this.getQuery(),\n            variables: vars\n        });\n        urlQuery.data = data;\n        return urlQuery;\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @returns DataResult\n     */\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n        var res = resData;\n        var count;\n        var aggregates;\n        var result = getValue(this.schema.result, res.data);\n        if (this.schema.count) {\n            count = getValue(this.schema.count, res.data);\n        }\n        if (this.schema.aggregates) {\n            aggregates = getValue(this.schema.aggregates, res.data);\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n        }\n        var pvt = request.pvtData || {};\n        var args = { result: result, aggregates: aggregates };\n        var data = args;\n        if (pvt && pvt.groups && pvt.groups.length) {\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     */\n    GraphQLAdaptor.prototype.insert = function () {\n        var inserted = _super.prototype.insert.apply(this, arguments);\n        return this.generateCrudData(inserted, 'insert');\n    };\n    /**\n     * Prepare and returns request body which is used to update a new record in the table.\n     */\n    GraphQLAdaptor.prototype.update = function () {\n        var inserted = _super.prototype.update.apply(this, arguments);\n        return this.generateCrudData(inserted, 'update');\n    };\n    /**\n     * Prepare and returns request body which is used to remove a new record in the table.\n     */\n    GraphQLAdaptor.prototype.remove = function () {\n        var inserted = _super.prototype.remove.apply(this, arguments);\n        return this.generateCrudData(inserted, 'remove');\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     * @param  {Query} query\n     * @param  {Object} original\n     */\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\n        var bData = JSON.parse(batch.data);\n        bData.key = e.key;\n        batch.data = JSON.stringify(bData);\n        return this.generateCrudData(batch, 'batch');\n    };\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n        var parsed = JSON.parse(crudData.data);\n        crudData.data = JSON.stringify({\n            query: this.opt.getMutation(action),\n            variables: parsed\n        });\n        return crudData;\n    };\n    return GraphQLAdaptor;\n}(UrlAdaptor));\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}