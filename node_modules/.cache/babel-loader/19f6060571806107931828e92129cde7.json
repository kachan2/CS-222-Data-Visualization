{"ast":null,"code":"import { click, legendRendering } from '../index';\nimport { Rect, measureText, PathOption, textTrim, drawBalloon, removeClass, querySelector, getTemplateFunction, maintainStyleClass, getValueFromObject } from '../utils/helper';\nimport { RectOption, Size, TextOption, Point, renderTextElement, drawSymbol, checkPropertyPath, getElement } from '../utils/helper';\nimport { isNullOrUndefined, Browser, EventHandler, remove, extend } from '@syncfusion/ej2-base';\n/**\n * Legend module is used to render legend for the maps\n */\nvar Legend = /** @class */function () {\n  function Legend(maps) {\n    /**\n     * @private\n     */\n    this.legendBorderRect = new Rect(0, 0, 0, 0);\n    /**\n     * @private\n     */\n    this.initialMapAreaRect = new Rect(0, 0, 0, 0);\n    /**\n     * @private\n     */\n    this.legendTotalRect = new Rect(0, 0, 0, 0);\n    /**\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.totalPages = [];\n    this.page = 0;\n    /**\n     * @private\n     */\n    this.currentPage = 0;\n    this.legendItemRect = new Rect(0, 0, 0, 0);\n    this.heightIncrement = 0;\n    this.widthIncrement = 0;\n    this.textMaxWidth = 0;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.shapeHighlightCollection = [];\n    /**\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.legendHighlightCollection = [];\n    /**\n     * @private\n     */\n    this.shapePreviousColor = [];\n    /**\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.selectedNonLegendShapes = [];\n    /**\n     * @private\n     */\n    this.shapeToggled = true;\n    /**\n     * @private\n     */\n    this.legendElement = null;\n    this.maps = maps;\n    this.addEventListener();\n  }\n  /**\n   * To calculate legend bounds and draw the legend shape and text.\n   *\n   * @returns {void}\n   */\n  Legend.prototype.renderLegend = function () {\n    this.legendRenderingCollections = [];\n    this.legendCollection = [];\n    this.totalPages = [];\n    this.widthIncrement = 0;\n    this.heightIncrement = 0;\n    this.defsElement = this.maps.renderer.createDefs();\n    this.maps.svgObject.appendChild(this.defsElement);\n    this.initialMapAreaRect = this.maps.mapAreaRect;\n    this.calculateLegendBounds();\n    this.drawLegend();\n  };\n  Legend.prototype.calculateLegendBounds = function () {\n    var _this = this;\n    var map = this.maps;\n    var legend = map.legendSettings;\n    this.legendCollection = [];\n    var spacing = 10;\n    var leftPadding = 10;\n    var topPadding = map.mapAreaRect.y;\n    this.legendRenderingCollections = [];\n    Array.prototype.forEach.call(map.layersCollection, function (layer, layerIndex) {\n      if (!isNullOrUndefined(layer.shapeData)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var layerData = layer.shapeData['features'];\n        var dataPath = layer.shapeDataPath;\n        var propertyPath = layer.shapePropertyPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var dataSource = layer.dataSource;\n        var colorValuePath = void 0;\n        var colorMapping = void 0;\n        if (legend.type === 'Layers' && layer.visible) {\n          colorValuePath = layer.shapeSettings.colorValuePath;\n          colorMapping = layer.shapeSettings.colorMapping;\n          _this.getLegends(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n        } else if (legend.type === 'Bubbles') {\n          for (var _i = 0, _a = layer.bubbleSettings; _i < _a.length; _i++) {\n            var bubble = _a[_i];\n            if (bubble.visible) {\n              colorValuePath = bubble.colorValuePath;\n              colorMapping = bubble.colorMapping;\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              dataSource = bubble.dataSource;\n              _this.getLegends(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n            }\n          }\n        }\n      }\n      if (legend.type === 'Markers') {\n        _this.getMarkersLegendCollections(layerIndex, layer.markerSettings);\n      }\n    });\n    if (this.legendCollection.length > 0) {\n      for (var i = 0; i < this.legendCollection.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var legendItem = this.legendCollection[i];\n        var eventArgs = {\n          name: legendRendering,\n          cancel: false,\n          fill: legendItem['fill'],\n          shape: legend.shape,\n          shapeBorder: legend.shapeBorder,\n          text: typeof legendItem['text'] === 'number' ? legendItem['text'].toString() : legendItem['text']\n        };\n        map.trigger('legendRendering', eventArgs);\n        legendItem['fill'] = eventArgs.fill;\n        legendItem['shape'] = eventArgs.shape;\n        legendItem['shapeBorder'] = eventArgs.shapeBorder;\n        legendItem['text'] = eventArgs.text;\n        if (eventArgs.cancel) {\n          this.legendCollection.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    var defaultSize = 25;\n    var legendTitle = map.legendSettings.title.text;\n    var titleTextStyle = map.legendSettings.titleStyle;\n    if (this.legendCollection.length > 0) {\n      var legendMode = legend.mode;\n      var shapeX = 0;\n      var shapeY = 0;\n      var textX = 0;\n      var textY = 0;\n      var shapePadding = legend.shapePadding;\n      var textPadding = 10;\n      var shapeHeight = legend.shapeHeight;\n      var shapeWidth = legend.shapeWidth;\n      var shapeLocation = [];\n      var textLocation = [];\n      var legendRectCollection = [];\n      var location_1;\n      var position = legend.position;\n      var labelAction = legend.labelDisplayMode;\n      var arrangement = legend.orientation === 'None' ? position === 'Top' || position === 'Bottom' ? 'Horizontal' : 'Vertical' : legend.orientation;\n      var legendWidth = legend.width.length > 1 ? legend.width.indexOf('%') > -1 ? map.availableSize.width / 100 * parseInt(legend.width, 10) : parseInt(legend.width, 10) : null;\n      var legendHeight = legend.height.length > 1 ? legend.height.indexOf('%') > -1 ? map.availableSize.height / 100 * parseInt(legend.height, 10) : parseInt(legend.height, 10) : null;\n      var legendItemStartX_1;\n      var legendItemStartY_1;\n      var startX = 0;\n      var startY = 0;\n      var legendtitleSize = measureText(legendTitle, titleTextStyle);\n      if (legendMode === 'Interactive') {\n        var itemTextStyle = legend.textStyle;\n        var legendLength = this.legendCollection.length;\n        var rectWidth = arrangement === 'Horizontal' ? isNullOrUndefined(legendWidth) ? map.mapAreaRect.width / legendLength : legendWidth / legendLength : isNullOrUndefined(legendWidth) ? defaultSize : legendWidth;\n        var rectHeight = arrangement === 'Horizontal' ? isNullOrUndefined(legendHeight) ? defaultSize : legendHeight : isNullOrUndefined(legendHeight) ? map.mapAreaRect.height / legendLength : legendHeight / legendLength;\n        startX = 0;\n        startY = legendtitleSize.height + spacing;\n        var position_1 = legend.labelPosition;\n        var textX_1 = 0;\n        var textY_1 = 0;\n        var textPadding_1 = 10;\n        var itemStartX = 0;\n        var itemStartY = 0;\n        var maxTextHeight = 0;\n        var maxTextWidth = 0;\n        for (var i = 0; i < this.legendCollection.length; i++) {\n          startX = arrangement === 'Horizontal' ? startX + rectWidth : startX;\n          startY = arrangement === 'Horizontal' ? startY : startY + rectHeight;\n          var legendText = this.legendCollection[i]['text'];\n          var itemTextSize = new Size(0, 0);\n          if (labelAction === 'None') {\n            itemTextSize = measureText(legendText, itemTextStyle);\n          } else if (labelAction === 'Trim') {\n            legendText = textTrim(arrangement === 'Horizontal' ? rectWidth : rectHeight, legendText, itemTextStyle);\n            itemTextSize = measureText(legendText, itemTextStyle);\n          } else {\n            legendText = '';\n          }\n          maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n          maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n          if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n            if (arrangement === 'Horizontal') {\n              textX_1 = startX + rectWidth / 2;\n              textY_1 = position_1 === 'After' ? startY + rectHeight + itemTextSize.height / 2 + textPadding_1 : startY - textPadding_1;\n            } else {\n              textX_1 = position_1 === 'After' ? startX - itemTextSize.width / 2 - textPadding_1 : startX + rectWidth + itemTextSize.width / 2 + textPadding_1;\n              textY_1 = startY + rectHeight / 2 + itemTextSize.height / 4;\n            }\n          }\n          if (i === 0) {\n            itemStartX = arrangement === 'Horizontal' ? startX : position_1 === 'After' ? textX_1 - itemTextSize.width / 2 : startX;\n            itemStartY = arrangement === 'Horizontal' ? position_1 === 'After' ? startY : textY_1 - itemTextSize.height / 2 : startY;\n            if (this.legendCollection.length === 1) {\n              legendWidth = arrangement === 'Horizontal' ? Math.abs(startX + rectWidth - itemStartX) : rectWidth + maxTextWidth + textPadding_1;\n              legendHeight = arrangement === 'Horizontal' ? rectHeight + maxTextHeight / 2 + textPadding_1 : Math.abs(startY + rectHeight - itemStartY);\n            }\n          } else if (i === this.legendCollection.length - 1) {\n            legendWidth = arrangement === 'Horizontal' ? Math.abs(startX + rectWidth - itemStartX) : rectWidth + maxTextWidth + textPadding_1;\n            legendHeight = arrangement === 'Horizontal' ? rectHeight + maxTextHeight / 2 + textPadding_1 : Math.abs(startY + rectHeight - itemStartY);\n          }\n          this.legendRenderingCollections.push({\n            fill: this.legendCollection[i]['fill'],\n            x: startX,\n            y: startY,\n            width: rectWidth,\n            height: rectHeight,\n            text: legendText,\n            textX: textX_1,\n            textY: textY_1,\n            textWidth: itemTextSize.width,\n            textHeight: itemTextSize.height,\n            shapeBorder: this.legendCollection[i]['shapeBorder']\n          });\n        }\n        if (this.legendCollection.length === 1) {\n          legendHeight = rectHeight;\n          legendWidth = rectWidth;\n        }\n        this.legendItemRect = {\n          x: itemStartX,\n          y: itemStartY,\n          width: legendWidth,\n          height: legendHeight\n        };\n      } else {\n        legendWidth = isNullOrUndefined(legendWidth) ? map.mapAreaRect.width : legendWidth;\n        legendHeight = isNullOrUndefined(legendHeight) ? map.mapAreaRect.height : legendHeight;\n        var j = 0;\n        this.page = 0;\n        for (var i = 0; i < this.legendCollection.length; i++) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var legendItem = this.legendCollection[i];\n          if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = {\n              Page: this.page + 1,\n              Collection: []\n            };\n          }\n          var legendTextSize = measureText(legendItem['text'], legend.textStyle);\n          this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n          if (i === 0) {\n            startX = shapeX = leftPadding + shapeWidth / 2;\n            startY = shapeY = topPadding + legendtitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2 : legendTextSize.height / 4);\n          } else {\n            var maxSize = legendTextSize.height > shapeHeight ? legendTextSize.height : shapeHeight;\n            if (arrangement === 'Horizontal') {\n              var prvePositionX = textLocation[j - 1].x + textLocation[j - 1].width + textPadding + shapeWidth;\n              if (prvePositionX + shapePadding + legendTextSize.width > legendWidth) {\n                var nextPositionY = (textLocation[j - 1].y > shapeLocation[j - 1].y + shapeHeight / 2 ? textLocation[j - 1].y : shapeLocation[j - 1].y + shapeHeight / 2) + topPadding;\n                if (nextPositionY + maxSize > legendHeight) {\n                  this.getPageChanged();\n                  j = 0;\n                  shapeLocation = [];\n                  textLocation = [];\n                  legendRectCollection = [];\n                  shapeX = startX;\n                  shapeY = startY;\n                } else {\n                  shapeX = shapeLocation[0].x;\n                  shapeY = nextPositionY + maxSize / 2;\n                }\n              } else {\n                shapeX = prvePositionX - shapeWidth / 2;\n                shapeY = shapeLocation[j - 1].y;\n              }\n            } else {\n              var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + shapeHeight / 2 ? textLocation[j - 1].y : shapeLocation[j - 1].y + shapeHeight / 2;\n              if (prevPositionY + topPadding + maxSize > legendHeight) {\n                var nextPositionX = textLocation[j - 1].x + this.textMaxWidth + textPadding;\n                if (nextPositionX + shapePadding + legendTextSize.width > legendWidth) {\n                  shapeX = startX;\n                  shapeY = startY;\n                  legendRectCollection = [];\n                  textLocation = [];\n                  shapeLocation = [];\n                  this.getPageChanged();\n                  j = 0;\n                } else {\n                  shapeX = nextPositionX + shapeWidth / 2;\n                  shapeY = shapeLocation[0].y;\n                }\n              } else {\n                var padding = 10;\n                shapeX = shapeLocation[j - 1].x;\n                shapeY = prevPositionY + padding + shapeHeight / 2;\n              }\n            }\n          }\n          textX = shapeX + shapeWidth / 2 + shapePadding;\n          textY = shapeY + legendTextSize.height / 4;\n          shapeLocation.push({\n            x: shapeX,\n            y: shapeY\n          });\n          textLocation.push({\n            x: textX,\n            y: textY,\n            width: legendTextSize.width,\n            height: legendTextSize.height / 2\n          });\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          this.totalPages[this.page]['Collection'].push({\n            DisplayText: legendItem['text'],\n            ImageSrc: legendItem['imageSrc'],\n            Shape: {\n              x: shapeX,\n              y: shapeY\n            },\n            Text: {\n              x: textX,\n              y: textY\n            },\n            Fill: legendItem['fill'],\n            legendShape: legendItem['shape'],\n            shapeBorder: legendItem['shapeBorder'],\n            idIndex: i,\n            Rect: {\n              x: shapeLocation[j].x - shapeWidth / 2,\n              y: shapeLocation[j].y - shapeHeight / 2 < textY - legendTextSize.height ? shapeLocation[j].y - shapeHeight / 2 : textY - legendTextSize.height,\n              width: Math.abs(shapeLocation[j].x - shapeWidth / 2 - (textX + legendTextSize.width)),\n              height: shapeHeight > legendTextSize.height ? shapeHeight : legendTextSize.height\n            }\n          });\n          j++;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var collection = this.totalPages[0]['Collection'];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Array.prototype.forEach.call(collection, function (legendObj, index) {\n          var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n          if (index === 0) {\n            legendItemStartX_1 = legendRect.x;\n            legendItemStartY_1 = legendRect.y;\n          }\n          _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(legendItemStartX_1 - (legendRect.x + legendRect.width)));\n          _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(legendItemStartY_1 - (legendRect.y + legendRect.height)));\n        });\n        legendWidth = this.widthIncrement < legendWidth ? this.widthIncrement : legendWidth;\n        legendHeight = this.heightIncrement < legendHeight ? this.heightIncrement : legendHeight;\n        this.legendItemRect = {\n          x: collection[0]['Rect']['x'],\n          y: collection[0]['Rect']['y'],\n          width: legendWidth,\n          height: legendHeight\n        };\n      }\n    }\n  };\n  /**\n   * Get the legend collections\n   *\n   * @param {number} layerIndex - Specifies the layer index\n   * @param {object[]} layerData - Specifies the layer data\n   * @param {ColorMappingSettings[]} colorMapping - Specifies the color mapping\n   * @param {object[]} dataSource - Specifies the data source\n   * @param {string} dataPath - Specifies the data path\n   * @param {string} colorValuePath - Specifies the color value path\n   * @param {string | string[]} propertyPath - Specifies the property path\n   * @returns {void}\n   */\n  Legend.prototype.getLegends = function (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n    this.getRangeLegendCollection(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n    this.getEqualLegendCollection(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n    this.getDataLegendCollection(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n  };\n  Legend.prototype.getPageChanged = function () {\n    this.page++;\n    if (isNullOrUndefined(this.totalPages[this.page])) {\n      this.totalPages[this.page] = {\n        Page: this.page + 1,\n        Collection: []\n      };\n    }\n  };\n  Legend.prototype.legendTextTrim = function (maxWidth, text, font, legendRectSize) {\n    var label = text;\n    var size = measureText(text, font).width;\n    var legendWithoutTextSize = legendRectSize - size;\n    if (legendRectSize > maxWidth) {\n      var textLength = text.length;\n      for (var i = textLength - 1; i >= 0; --i) {\n        label = text.substring(0, i) + '...';\n        size = measureText(label, font).width;\n        var totalSize = legendWithoutTextSize + size;\n        if (totalSize <= maxWidth || label.length < 4) {\n          if (label.length < 4) {\n            label = ' ';\n          }\n          return label;\n        }\n      }\n    }\n    return label;\n  };\n  // eslint-disable-next-line valid-jsdoc\n  /**\n   * To draw the legend shape and text.\n   */\n  Legend.prototype.drawLegend = function () {\n    var map = this.maps;\n    var legend = map.legendSettings;\n    var render = map.renderer;\n    var textOptions;\n    var textFont = {\n      size: legend.textStyle.size,\n      color: legend.textStyle.color,\n      fontFamily: legend.textStyle.fontFamily,\n      fontWeight: legend.textStyle.fontWeight,\n      fontStyle: legend.textStyle.fontStyle,\n      opacity: legend.textStyle.opacity\n    };\n    this.legendGroup = render.createGroup({\n      id: map.element.id + '_Legend_Group'\n    });\n    if (legend.mode === 'Interactive') {\n      for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n        var itemId = map.element.id + '_Legend_Index_' + i;\n        var textId = map.element.id + '_Legend_Index_' + i + '_Text';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item = this.legendRenderingCollections[i];\n        var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n        if (i === 0) {\n          this.renderLegendBorder();\n        }\n        var textLocation = new Point(item['textX'], item['textY']);\n        textFont.color = textFont.color !== null ? textFont.color : this.maps.themeStyle.legendTextColor;\n        var rectOptions = new RectOption(itemId, item['fill'], item['shapeBorder'], legend.opacity, bounds);\n        textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n        textFont.fontFamily = !isNullOrUndefined(textFont.fontFamily) ? textFont.fontFamily : this.maps.themeStyle.fontFamily;\n        textFont.size = map.themeStyle.legendFontSize || textFont.size;\n        renderTextElement(textOptions, textFont, textFont.color, this.legendGroup);\n        this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n        this.legendToggle();\n      }\n    } else {\n      this.drawLegendItem(this.currentPage);\n    }\n  };\n  /**\n   * @param {string} page - Specifies the legend page.\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.drawLegendItem = function (page) {\n    var map = this.maps;\n    var legend = map.legendSettings;\n    var spacing = 10;\n    var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n    var textOptions;\n    var renderOptions;\n    var render = map.renderer;\n    var legendShape = legend.shape;\n    if (page >= 0 && page < this.totalPages.length) {\n      if (querySelector(this.legendGroup.id, this.maps.element.id)) {\n        remove(querySelector(this.legendGroup.id, this.maps.element.id));\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var collection = this.totalPages[page]['Collection'][i];\n        var shapeBorder = collection['shapeBorder'];\n        var legendElement = render.createGroup({\n          id: map.element.id + '_Legend_Index_' + collection['idIndex']\n        });\n        var legendText = collection['DisplayText'];\n        var pagingArrowPadding = 4;\n        var shape = legend.type === 'Markers' ? isNullOrUndefined(collection['ImageSrc']) ? legend.shape : 'Image' : collection['legendShape'];\n        var strokeColor = legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross' ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n        var strokeWidth = legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross' ? shapeBorder.width === 0 ? 1 : shapeBorder.width : shapeBorder.width;\n        var shapeId = map.element.id + '_Legend_Shape_Index_' + collection['idIndex'];\n        var textId = map.element.id + '_Legend_Text_Index_' + collection['idIndex'];\n        var shapeLocation = new Point(collection['Shape']['x'], collection['Shape']['y'] - pagingArrowPadding);\n        var textLocation = new Point(collection['Text']['x'], collection['Text']['y'] - pagingArrowPadding);\n        var imageUrl = isNullOrUndefined(collection['ImageSrc']) ? legend.shape : collection['ImageSrc'];\n        var renderOptions_1 = new PathOption(shapeId, collection['Fill'], strokeWidth, strokeColor, legend.opacity, isNullOrUndefined(shapeBorder.opacity) ? legend.opacity : shapeBorder.opacity, '');\n        var legendTextStyle = {\n          fontFamily: legend.textStyle.fontFamily,\n          fontStyle: legend.textStyle.fontStyle,\n          fontWeight: legend.textStyle.fontWeight,\n          size: legend.textStyle.size,\n          color: legend.textStyle.color,\n          opacity: legend.textStyle.opacity\n        };\n        legendTextStyle.color = legendTextStyle.color !== null ? legendTextStyle.color : this.maps.themeStyle.legendTextColor;\n        legendTextStyle.fontFamily = !isNullOrUndefined(legendTextStyle.fontFamily) ? legendTextStyle.fontFamily : this.maps.themeStyle.fontFamily;\n        legendTextStyle.size = map.themeStyle.legendFontSize || legendTextStyle.size;\n        if (i === 0) {\n          this.renderLegendBorder();\n        }\n        if (legend.type === 'Markers' && legend.useMarkerShape) {\n          var legendShapeData = this.legendCollection[collection['idIndex']].data[0];\n          var marker = map.layers[legendShapeData['layerIndex']].markerSettings[legendShapeData['markerIndex']];\n          legendShape = !isNullOrUndefined(marker.dataSource[legendShapeData['dataIndex']][marker['shapeValuePath']]) && marker.dataSource[legendShapeData['dataIndex']][marker['shapeValuePath']] !== '' ? marker.dataSource[legendShapeData['dataIndex']][marker['shapeValuePath']] : marker.shape;\n        }\n        if (legendShape === \"Balloon\") {\n          legendElement.appendChild(drawBalloon(map, renderOptions_1, shapeSize, {\n            x: shapeLocation.x,\n            y: shapeLocation.y + 5\n          }, 'Legend'));\n        } else {\n          legendElement.appendChild(drawSymbol(shapeLocation, legendShape, shapeSize, collection['ImageSrc'], renderOptions_1));\n        }\n        var legendRectSize = collection['Rect']['x'] + collection['Rect']['width'];\n        if (legendRectSize > this.legendBorderRect.width) {\n          var trimmedText = this.legendTextTrim(this.legendBorderRect.width, legendText, legendTextStyle, legendRectSize);\n          legendText = trimmedText;\n        }\n        textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n        renderTextElement(textOptions, legendTextStyle, legendTextStyle.color, legendElement);\n        this.legendGroup.appendChild(legendElement);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (i === this.totalPages[page]['Collection'].length - 1) {\n          var pagingGroup = void 0;\n          var width = spacing;\n          var height = spacing / 2;\n          if (this.page !== 0) {\n            var pagingText = page + 1 + '/' + this.totalPages.length;\n            var pagingFont = legend.textStyle;\n            var pagingTextSize = measureText(pagingText, pagingFont);\n            var leftPageX = this.legendItemRect.x + this.legendItemRect.width - pagingTextSize.width - width * 2 - spacing * 2 + pagingArrowPadding / 2;\n            var rightPageX = this.legendItemRect.x + this.legendItemRect.width;\n            var pageTextX = rightPageX - width - pagingTextSize.width / 2 - spacing / 2 - pagingArrowPadding;\n            var locY = this.legendItemRect.y + this.legendItemRect.height + height / 2 + spacing;\n            pagingGroup = render.createGroup({\n              id: map.element.id + '_Legend_Paging_Group'\n            });\n            var leftPageElement = render.createGroup({\n              id: map.element.id + '_Legend_Left_Paging_Group'\n            });\n            var rightPageElement = render.createGroup({\n              id: map.element.id + '_Legend_Right_Paging_Group'\n            });\n            var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) + ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n            var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) + ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n            var leftPageOptions = new PathOption(map.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', page + 1 === 1 ? 0.5 : 1, 1, '', leftPath);\n            leftPageElement.appendChild(render.drawPath(leftPageOptions));\n            var leftRectPageOptions = new RectOption(map.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - width / 2, locY - height * 2, width * 2, spacing * 2), null, null, '', '');\n            var pathEle = render.drawRectangle(leftRectPageOptions);\n            pathEle.setAttribute('tabindex', (page + 1 === 1 ? -1 : map.tabIndex + 1).toString());\n            leftPageElement.appendChild(pathEle);\n            this.wireEvents(leftPageElement);\n            var rightPageOptions = new PathOption(map.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', page + 1 === this.totalPages.length ? 0.5 : 1, 1, '', rightPath);\n            rightPageElement.appendChild(render.drawPath(rightPageOptions));\n            var rightRectPageOptions = new RectOption(map.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect(rightPageX - spacing - width / 2, locY - height * 2, width * 2, spacing * 2), null, null, '', '');\n            pathEle = render.drawRectangle(rightRectPageOptions);\n            pathEle.setAttribute('tabindex', (page + 1 === this.totalPages.length ? -1 : map.tabIndex + 2).toString());\n            rightPageElement.appendChild(pathEle);\n            this.wireEvents(rightPageElement);\n            pagingGroup.appendChild(leftPageElement);\n            pagingGroup.appendChild(rightPageElement);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pageTextOptions = {\n              'id': map.element.id + '_Paging_Text',\n              'x': pageTextX,\n              'y': locY + pagingTextSize.height / 4,\n              'fill': '#a6a6a6',\n              'font-size': '14px',\n              'font-style': pagingFont.fontStyle,\n              'font-family': pagingFont.fontFamily,\n              'font-weight': pagingFont.fontWeight,\n              'text-anchor': 'middle',\n              'transform': '',\n              'opacity': 1,\n              'dominant-baseline': ''\n            };\n            var pagingTextElement = render.createText(pageTextOptions, pagingText);\n            pagingTextElement.setAttribute('style', 'user-select: none;');\n            pagingGroup.appendChild(pagingTextElement);\n            this.legendGroup.appendChild(pagingGroup);\n          }\n          this.legendToggle();\n        }\n      }\n    }\n  };\n  Legend.prototype.legendHighLightAndSelection = function (targetElement, value) {\n    var shapeIndex;\n    var layerIndex;\n    var dataIndex;\n    var pointIndex;\n    var legend = this.maps.legendSettings;\n    var textEle = legend.mode === 'Default' ? document.getElementById(targetElement.id.replace('Shape', 'Text')) : document.getElementById(targetElement.id + '_Text');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var collection = this.maps.legendModule.legendCollection;\n    var length;\n    var multiSelectEnable = !isNullOrUndefined(collection[0]['data'][0]['layerIndex']) ? this.maps.layers[collection[0]['data'][0]['layerIndex']].selectionSettings.enableMultiSelect : false;\n    var selectLength = 0;\n    var interactProcess = true;\n    var idIndex = parseFloat(targetElement.id.charAt(targetElement.id.length - 1));\n    this.updateLegendElement();\n    var toggleLegendCheck = this.maps.toggledLegendId.indexOf(idIndex);\n    if (this.maps.legendSettings.toggleLegendSettings.enable && value === 'highlight' && toggleLegendCheck !== -1) {\n      var collectionIndex = this.getIndexofLegend(this.legendHighlightCollection, targetElement);\n      if (collectionIndex !== -1) {\n        this.legendHighlightCollection.splice(collectionIndex, 1);\n      }\n      this.removeLegendHighlightCollection();\n      return null;\n    }\n    if (value === 'selection') {\n      this.shapeHighlightCollection = [];\n      if (!this.maps.shapeSelections && !multiSelectEnable) {\n        this.removeAllSelections();\n        this.maps.shapeSelections = true;\n      }\n      if (this.maps.legendSelectionCollection.length > 0 && (!multiSelectEnable ? this.maps.shapeSelections : true)) {\n        for (var k = 0; k < this.maps.legendSelectionCollection.length; k++) {\n          if (targetElement === this.maps.legendSelectionCollection[k]['legendElement']) {\n            this.maps.legendSelectionCollection[k]['legendElement'] = targetElement;\n            interactProcess = false;\n            this.removeLegendSelectionCollection(this.maps.legendSelectionCollection[k]['legendElement']);\n            this.maps.selectedLegendElementId.splice(this.maps.selectedLegendElementId.indexOf(idIndex), 1);\n            this.maps.legendSelectionCollection.splice(k, 1);\n            this.maps.legendSelection = this.maps.legendSelectionCollection.length > 0 ? false : true;\n            break;\n          } else if (!multiSelectEnable) {\n            if (this.maps.legendSelectionCollection.length > 1) {\n              for (var z = 0; z < this.maps.legendSelectionCollection.length; z++) {\n                this.removeLegendSelectionCollection(this.maps.legendSelectionCollection[z]['legendElement']);\n              }\n              this.maps.legendSelectionCollection = [];\n            } else {\n              this.removeLegendSelectionCollection(this.maps.legendSelectionCollection[k]['legendElement']);\n              this.maps.legendSelectionCollection.splice(k, 1);\n            }\n          }\n        }\n      }\n    } else {\n      if (this.maps.legendSelectionCollection.length > 0) {\n        for (var k = 0; k < this.maps.legendSelectionCollection.length; k++) {\n          if ((targetElement.id.indexOf('_Legend_Shape') > -1 || targetElement.id.indexOf('_Legend_Index')) && targetElement === this.maps.legendSelectionCollection[k]['legendElement']) {\n            interactProcess = false;\n            break;\n          } else {\n            this.removeLegendHighlightCollection();\n          }\n        }\n      }\n      this.removeLegendHighlightCollection();\n    }\n    if (interactProcess) {\n      for (var i = 0; i < collection.length; i++) {\n        var idIndex_1 = this.maps.legendSettings.mode === 'Interactive' ? parseFloat(targetElement.id.split('_Legend_Index_')[1]) : parseFloat(targetElement.id.split('_Legend_Shape_Index_')[1]);\n        if (textEle.textContent === collection[i]['text'] && collection[i]['data'].length > 0 && idIndex_1 === i) {\n          var layer = this.maps.layers[collection[i]['data'][0]['layerIndex']];\n          var enable = void 0;\n          var module = void 0;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var data = void 0;\n          if (!isNullOrUndefined(layer)) {\n            enable = value === 'selection' ? layer.selectionSettings.enable : layer.highlightSettings.enable;\n            module = void 0;\n            module = value === 'selection' ? layer.selectionSettings : layer.highlightSettings;\n            data = collection[i]['data'];\n          }\n          if (enable) {\n            for (var j = 0; j < data.length; j++) {\n              var shapeElement = void 0;\n              shapeIndex = data[j]['shapeIndex'];\n              layerIndex = data[j]['layerIndex'];\n              dataIndex = data[j]['dataIndex'];\n              pointIndex = data[j]['pointIndex'];\n              if (pointIndex === -1) {\n                shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' + layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex);\n              } else {\n                shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' + layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex + '_multiLine_' + pointIndex);\n              }\n              if (shapeElement !== null) {\n                var shapeMatch = true;\n                if (this.maps.legendSelectionCollection !== null) {\n                  for (var i_1 = 0; i_1 < this.maps.legendSelectionCollection.length; i_1++) {\n                    if (this.maps.legendSelectionCollection[i_1]['legendElement'] === targetElement) {\n                      shapeMatch = false;\n                      break;\n                    }\n                  }\n                }\n                if (value === 'highlight' && shapeMatch) {\n                  if (j === 0) {\n                    this.legendHighlightCollection = [];\n                    this.pushCollection(targetElement, this.legendHighlightCollection, collection[i], layer.shapeSettings);\n                  }\n                  length = this.legendHighlightCollection.length;\n                  var legendHighlightColor = this.legendHighlightCollection[length - 1]['legendOldFill'];\n                  this.legendHighlightCollection[length - 1]['MapShapeCollection']['Elements'].push(shapeElement);\n                  var shapeItemCount = this.legendHighlightCollection[length - 1]['MapShapeCollection']['Elements'].length - 1;\n                  var shapeOldFillColor = shapeElement.getAttribute('fill');\n                  this.legendHighlightCollection[length - 1]['shapeOldFillColor'].push(shapeOldFillColor);\n                  var shapeOldColor = this.legendHighlightCollection[length - 1]['shapeOldFillColor'][shapeItemCount];\n                  this.shapePreviousColor = this.legendHighlightCollection[length - 1]['shapeOldFillColor'];\n                  this.setColor(shapeElement, !isNullOrUndefined(module.fill) ? module.fill : shapeOldColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n                  this.setColor(targetElement, !isNullOrUndefined(module.fill) ? module.fill : legendHighlightColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n                } else if (value === 'selection') {\n                  this.legendHighlightCollection = [];\n                  this.maps.legendSelectionClass = module;\n                  if (j === 0) {\n                    this.pushCollection(targetElement, this.maps.legendSelectionCollection, collection[i], layer.shapeSettings);\n                    if (multiSelectEnable) {\n                      this.maps.selectedLegendElementId.push(i);\n                    } else {\n                      if (this.maps.selectedLegendElementId.length === 0) {\n                        this.maps.selectedLegendElementId.push(i);\n                      } else {\n                        this.maps.selectedLegendElementId = [];\n                        this.maps.selectedLegendElementId.push(i);\n                      }\n                    }\n                  }\n                  selectLength = this.maps.legendSelectionCollection.length;\n                  var legendSelectionColor = this.maps.legendSelectionCollection[selectLength - 1]['legendOldFill'];\n                  this.maps.legendSelectionCollection[selectLength - 1]['MapShapeCollection']['Elements'].push(shapeElement);\n                  this.maps.legendSelectionCollection[selectLength - 1]['shapeOldFillColor'] = this.shapePreviousColor;\n                  this.setColor(targetElement, !isNullOrUndefined(module.fill) ? module.fill : legendSelectionColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'selection');\n                  this.setColor(shapeElement, !isNullOrUndefined(module.fill) ? module.fill : legendSelectionColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'selection');\n                  if (this.maps.selectedElementId.indexOf(shapeElement.getAttribute('id')) === -1) {\n                    this.maps.selectedElementId.push(shapeElement.getAttribute('id'));\n                  }\n                  if (j === data.length - 1) {\n                    this.maps.legendSelection = false;\n                    this.removeLegend(this.maps.legendSelectionCollection);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  Legend.prototype.setColor = function (element, fill, opacity, borderColor, borderWidth, type) {\n    var isLineStringShape = element.parentElement.id.indexOf('LineString') > -1;\n    if (type === 'selection') {\n      maintainStyleClass(isLineStringShape ? 'LineselectionMap' : 'ShapeselectionMap', isLineStringShape ? 'LineselectionMapStyle' : 'ShapeselectionMapStyle', isLineStringShape ? 'transparent' : fill, opacity, isLineStringShape ? fill : borderColor, borderWidth, this.maps);\n      element.setAttribute('class', isLineStringShape ? 'LineselectionMapStyle' : 'ShapeselectionMapStyle');\n    } else {\n      element.setAttribute('fill', isLineStringShape ? 'transparent' : fill);\n      element.setAttribute('fill-opacity', opacity);\n      element.setAttribute('stroke', isLineStringShape ? fill : borderColor);\n      element.setAttribute('stroke-width', (Number(borderWidth) / this.maps.scale).toString());\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.pushCollection = function (targetElement, collection, oldElement, shapeSettings) {\n    collection.push({\n      legendElement: targetElement,\n      legendOldFill: oldElement['fill'],\n      legendOldOpacity: oldElement['opacity'],\n      legendOldBorderColor: oldElement['borderColor'],\n      legendOldBorderWidth: oldElement['borderWidth'],\n      shapeOpacity: shapeSettings.opacity,\n      shapeOldBorderColor: shapeSettings.border.color,\n      shapeOldBorderWidth: shapeSettings.border.width\n    });\n    var length = collection.length;\n    collection[length - 1]['MapShapeCollection'] = {\n      Elements: []\n    };\n    collection[length - 1]['shapeOldFillColor'] = [];\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.removeLegend = function (collection) {\n    for (var i = 0; i < collection.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var item = collection[i];\n      this.setColor(item['legendElement'], item['legendOldFill'], item['legendOldOpacity'], item['legendOldBorderColor'], item['legendOldBorderWidth'], 'highlight');\n      var dataCount = item['MapShapeCollection']['Elements'].length;\n      for (var j = 0; j < dataCount; j++) {\n        var shapeFillColor = item['legendOldFill'].indexOf('url') !== -1 ? item['shapeOldFillColor'][j] : item['legendOldFill'];\n        this.setColor(item['MapShapeCollection']['Elements'][j], shapeFillColor, item['shapeOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth'], 'highlight');\n      }\n    }\n  };\n  Legend.prototype.removeLegendHighlightCollection = function () {\n    if (this.legendHighlightCollection.length > 0) {\n      this.removeLegend(this.legendHighlightCollection);\n      this.legendHighlightCollection = [];\n    }\n  };\n  Legend.prototype.removeLegendSelectionCollection = function (targetElement) {\n    if (this.maps.legendSelectionCollection.length > 0) {\n      removeClass(targetElement);\n      var shapeElements = this.shapesOfLegend(targetElement);\n      var dataCount = shapeElements.length;\n      for (var j = 0; j < dataCount; j++) {\n        var shapeElement = getElement(shapeElements[j]);\n        if (shapeElement.getAttribute('class') === 'ShapeselectionMapStyle' || shapeElement.getAttribute('class') === 'LineselectionMapStyle') {\n          removeClass(shapeElement);\n          var selectedElementIdIndex = this.maps.selectedElementId.indexOf(shapeElement.id);\n          if (selectedElementIdIndex !== -1) {\n            this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n          }\n        }\n      }\n    }\n  };\n  Legend.prototype.removeShapeHighlightCollection = function () {\n    if (this.shapeHighlightCollection.length > 0) {\n      for (var i = 0; i < this.shapeHighlightCollection.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item = this.shapeHighlightCollection[i];\n        var removeFill = true;\n        for (var j = 0; j < this.maps.legendSelectionCollection.length; j++) {\n          if (this.maps.legendSelectionCollection[j]['legendElement'] === item['legendElement']) {\n            removeFill = false;\n          }\n        }\n        if (removeFill) {\n          this.setColor(item['legendElement'], item['legendOldFill'], item['legendOldOpacity'], item['legendOldBorderColor'], item['legendOldBorderWidth'], 'highlight');\n        }\n      }\n    }\n  };\n  Legend.prototype.shapeHighLightAndSelection = function (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  targetElement, data, module, getValue, layerIndex) {\n    if (data !== undefined) {\n      this.updateLegendElement();\n      this.shapeToggled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var collection = this.maps.legendModule.legendCollection;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var indexes = this.legendIndexOnShape(data, layerIndex);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var shapeElement = this.shapeDataOnLegend(targetElement);\n      var toggleLegendCheck = this.maps.toggledLegendId.indexOf(indexes['actualIndex']);\n      if (this.maps.legendSettings.toggleLegendSettings.enable && toggleLegendCheck !== -1) {\n        this.shapeToggled = false;\n        this.legendHighlightCollection = [];\n        var collectionIndex = this.getIndexofLegend(this.shapeHighlightCollection, shapeElement['LegendEle']);\n        if (collectionIndex !== -1) {\n          this.shapeHighlightCollection.splice(collectionIndex, 1);\n        }\n        this.removeShapeHighlightCollection();\n        return null;\n      }\n      if (indexes['currentIndex'] === undefined && indexes['actualIndex'] === undefined) {\n        this.removeShapeHighlightCollection();\n        return null;\n      }\n      if (indexes['currentIndex'] === undefined && getValue === 'selection' && !this.maps.layers[layerIndex].selectionSettings.enableMultiSelect && targetElement.getAttribute('class') !== 'ShapeselectionMapStyle') {\n        this.maps.legendSelection = false;\n      }\n      if (getValue === 'selection' && !this.maps.layers[layerIndex].selectionSettings.enableMultiSelect && !this.maps.legendSelection) {\n        this.removeAllSelections();\n        this.maps.legendSelection = true;\n      }\n      if (indexes['currentIndex'] === undefined) {\n        if (getValue === 'selection' && indexes['actualIndex'] !== undefined) {\n          var checkSelection = 0;\n          for (var i = 0; i < shapeElement['Elements'].length; i++) {\n            if (shapeElement['Elements'][i].getAttribute('class') === 'ShapeselectionMapStyle') {\n              checkSelection++;\n            }\n          }\n          var selectionIndex = this.maps.selectedLegendElementId.indexOf(indexes['actualIndex']);\n          if (selectionIndex === -1) {\n            this.maps.selectedLegendElementId.push(indexes['actualIndex']);\n            this.maps.legendSelectionClass = module;\n          } else {\n            if (checkSelection <= 1 && (targetElement.getAttribute('class') === 'ShapeselectionMapStyle' || targetElement.getAttribute('class') === 'LineselectionMapStyle')) {\n              if (!this.maps.layers[layerIndex].selectionSettings.enableMultiSelect) {\n                this.maps.selectedLegendElementId.splice(selectionIndex, 1);\n              } else {\n                if (checkSelection <= 1 && (targetElement.getAttribute('class') === 'ShapeselectionMapStyle' || targetElement.getAttribute('class') === 'LineselectionMapStyle')) {\n                  this.maps.selectedLegendElementId.splice(selectionIndex, 1);\n                }\n              }\n            }\n          }\n        }\n        this.removeShapeHighlightCollection();\n        return null;\n      }\n      var text = collection[indexes['actualIndex']]['text'];\n      var content = void 0;\n      var legendShape = void 0;\n      if (this.maps.legendSettings.mode === 'Default') {\n        if (indexes['currentIndex'] !== undefined) {\n          content = document.getElementById(this.maps.element.id + '_Legend_Text_Index_' + indexes['actualIndex']).textContent;\n          legendShape = document.getElementById(this.maps.element.id + '_Legend_Shape_Index_' + indexes['actualIndex']);\n        }\n      } else {\n        content = document.getElementById(this.maps.element.id + '_Legend_Index_' + indexes['actualIndex'] + '_Text').textContent;\n        legendShape = document.getElementById(this.maps.element.id + '_Legend_Index_' + indexes['actualIndex']);\n      }\n      this.oldShapeElement = shapeElement['LegendEle'];\n      var length_1 = this.maps.legendSelectionCollection.length;\n      if (text === content) {\n        var shapeMatched = true;\n        if (this.maps.legendSelectionCollection) {\n          for (var i = 0; i < this.maps.legendSelectionCollection.length; i++) {\n            if (this.maps.legendSelectionCollection[i]['legendElement'] === shapeElement['LegendEle']) {\n              shapeMatched = false;\n              break;\n            }\n          }\n        }\n        if (getValue === 'highlight' && shapeMatched) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var selectionEle = this.isTargetSelected(shapeElement, this.shapeHighlightCollection);\n          if (selectionEle === undefined || selectionEle && !selectionEle['IsSelected']) {\n            this.pushCollection(legendShape, this.shapeHighlightCollection, collection[indexes['actualIndex']], this.maps.layers[layerIndex].shapeSettings);\n          }\n          for (var j = 0; j < this.shapeHighlightCollection.length; j++) {\n            if (shapeElement['LegendEle'].id === this.shapeHighlightCollection[j]['legendElement'].id) {\n              this.shapeHighlightCollection[j]['legendElement'] = shapeElement['LegendEle'];\n            }\n          }\n          if (length_1 > 0) {\n            for (var j = 0; j < length_1; j++) {\n              if (shapeElement['LegendEle'] === this.maps.legendSelectionCollection[j]['legendElement']) {\n                this.maps.legendSelectionCollection[j]['legendElement'] = shapeElement['LegendEle'];\n                this.removeShapeHighlightCollection();\n                break;\n              } else if (j === length_1 - 1) {\n                this.removeShapeHighlightCollection();\n                this.setColor(legendShape, !isNullOrUndefined(module.fill) ? module.fill : legendShape.getAttribute('fill'), module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n              }\n            }\n          } else {\n            this.removeShapeHighlightCollection();\n            this.setColor(legendShape, !isNullOrUndefined(module.fill) ? module.fill : legendShape.getAttribute('fill'), module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n          }\n        } else if (getValue === 'selection') {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var selectionEle = this.isTargetSelected(shapeElement, this.maps.legendSelectionCollection);\n          if (length_1 > 0) {\n            var j = 0;\n            while (j < this.maps.legendSelectionCollection.length) {\n              if (shapeElement['LegendEle'] !== this.maps.legendSelectionCollection[j]['legendElement'] && !module.enableMultiSelect) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var element = this.maps.legendSelectionCollection[j];\n                var selectedLegendIndex = this.maps.selectedLegendElementId.indexOf(indexes['actualIndex']);\n                this.maps.selectedLegendElementId.splice(selectedLegendIndex, 1);\n                this.maps.legendSelectionCollection.splice(j, 1);\n                removeClass(element['legendElement']);\n                this.maps.shapeSelections = true;\n                j = 0;\n              } else {\n                j++;\n              }\n            }\n          }\n          if (selectionEle && selectionEle['IsSelected'] && (targetElement.getAttribute('class') === 'ShapeselectionMapStyle' || targetElement.getAttribute('class') === 'LineselectionMapStyle')) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var element = this.maps.legendSelectionCollection[selectionEle['SelectionIndex']];\n            var multiSelection = 0;\n            if (module.enableMultiSelect) {\n              for (var i = 0; i < shapeElement['Elements'].length; i++) {\n                if (targetElement.getAttribute('class') === shapeElement['Elements'][i].getAttribute('class')) {\n                  multiSelection++;\n                }\n              }\n            }\n            if (multiSelection <= 1 && (!module.enableMultiSelect ? this.maps.legendSelection : true)) {\n              this.maps.selectedLegendElementId.splice(this.maps.selectedLegendElementId.indexOf(indexes['actualIndex']), 1);\n              if (!isNullOrUndefined(shapeElement['LegendEle'])) {\n                removeClass(shapeElement['LegendEle']);\n              }\n              this.maps.legendSelectionCollection.splice(selectionEle['SelectionIndex'], 1);\n              this.maps.shapeSelections = true;\n            }\n          } else {\n            if ((selectionEle === undefined || selectionEle && !selectionEle['IsSelected']) && !isNullOrUndefined(legendShape)) {\n              var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, legendShape);\n              if (legendSelectionIndex === -1) {\n                this.pushCollection(legendShape, this.maps.legendSelectionCollection, collection[indexes['actualIndex']], this.maps.layers[layerIndex].shapeSettings);\n              }\n            }\n            var addId = true;\n            for (var i = 0; i < this.maps.selectedLegendElementId.length; i++) {\n              if (indexes['actualIndex'] === this.maps.selectedLegendElementId[i]) {\n                addId = false;\n              }\n            }\n            if (addId) {\n              this.maps.selectedLegendElementId.push(indexes['actualIndex']);\n            }\n            this.maps.legendSelectionClass = module;\n            this.removeLegend(this.shapeHighlightCollection);\n            if (!isNullOrUndefined(legendShape)) {\n              this.setColor(legendShape, !isNullOrUndefined(module.fill) ? module.fill : legendShape.getAttribute('fill'), module.opacity.toString(), module.border.color, module.border.width.toString(), 'selection');\n              var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, legendShape);\n              this.maps.legendSelectionCollection[legendSelectionIndex]['MapShapeCollection']['Elements'].push(targetElement);\n            }\n            this.maps.shapeSelections = false;\n          }\n        } else if (document.getElementsByClassName('highlightMapStyle').length > 0) {\n          this.removeShapeHighlightCollection();\n          removeClass(document.getElementsByClassName('highlightMapStyle')[0]);\n        }\n      }\n    } else {\n      this.removeShapeHighlightCollection();\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.isTargetSelected = function (target, collection) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var selectEle;\n    for (var i = 0; i < collection.length; i++) {\n      if (!isNullOrUndefined(target['LegendEle'].getAttribute('id')) && target['LegendEle'].getAttribute('id') === collection[i]['legendElement'].getAttribute('id')) {\n        selectEle = {\n          IsSelected: true,\n          SelectionIndex: i\n        };\n      }\n    }\n    return selectEle;\n  };\n  Legend.prototype.updateLegendElement = function () {\n    for (var i = 0; i < this.maps.legendSelectionCollection.length; i++) {\n      if (document.getElementById(this.maps.legendSelectionCollection[i]['legendElement'].id)) {\n        this.maps.legendSelectionCollection[i]['legendElement'] = document.getElementById(this.maps.legendSelectionCollection[i]['legendElement'].id);\n      }\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.getIndexofLegend = function (targetCollection, targetElement) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var legendIndex = targetCollection.map(function (e) {\n      return e['legendElement'];\n    }).indexOf(targetElement);\n    return legendIndex;\n  };\n  Legend.prototype.removeAllSelections = function () {\n    for (var i = 0; i < this.maps.selectedElementId.length; i++) {\n      var selectedElement = document.getElementById(this.maps.selectedElementId[i]);\n      removeClass(selectedElement);\n    }\n    for (var j = 0; j < this.maps.selectedLegendElementId.length; j++) {\n      var idIndex = this.maps.legendSettings.mode === 'Interactive' ? this.maps.element.id + '_Legend_Index_' : this.maps.element.id + '_Legend_Shape_Index_';\n      var selectedElement = idIndex + this.maps.selectedLegendElementId[j];\n      var legendElement = document.getElementById(selectedElement);\n      if (!isNullOrUndefined(legendElement)) {\n        removeClass(document.getElementById(selectedElement));\n      }\n    }\n    this.maps.legendSelectionCollection = [];\n    this.maps.selectedLegendElementId = [];\n    this.maps.selectedElementId = [];\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.legendIndexOnShape = function (data, index) {\n    var legendIndex;\n    var actualIndex;\n    var path = this.maps.layers[index].shapeDataPath;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var value = data[path];\n    var legendType = this.maps.legendSettings.mode;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var collection = this.maps.legendModule.legendCollection;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var currentCollection;\n    if (legendType === 'Default' && !isNullOrUndefined(this.maps.legendModule.totalPages)) {\n      currentCollection = this.maps.legendModule.totalPages[this.maps.legendModule.currentPage]['Collection'];\n    }\n    var currentCollectionLength = legendType === 'Default' ? currentCollection['length'] : 1;\n    for (var i = 0; i < collection.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var dataValue = collection[i]['data'];\n      for (var k = 0; k < currentCollectionLength; k++) {\n        if (legendType !== 'Default' || collection[i]['text'] === currentCollection[k]['DisplayText']) {\n          for (var j = 0; j < dataValue.length; j++) {\n            if (value === dataValue[j]['name']) {\n              legendIndex = k;\n            }\n          }\n        }\n      }\n      for (var j = 0; j < dataValue.length; j++) {\n        if (value === dataValue[j]['name']) {\n          actualIndex = i;\n        }\n      }\n    }\n    return {\n      currentIndex: legendIndex,\n      actualIndex: actualIndex\n    };\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.shapeDataOnLegend = function (targetElement) {\n    var shapeIndex;\n    var layerIndex;\n    var dataIndex;\n    var pointIndex;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var collection = this.maps.legendModule.legendCollection;\n    var legend = this.maps.legendSettings;\n    for (var i = 0; i < collection.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var data = collection[i]['data'];\n      var process = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var elements = [];\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var currentElement = {\n        Elements: []\n      };\n      for (var j = 0; j < data.length; j++) {\n        var shapeElement = void 0;\n        shapeIndex = data[j]['shapeIndex'];\n        layerIndex = data[j]['layerIndex'];\n        dataIndex = data[j]['dataIndex'];\n        pointIndex = data[j]['pointIndex'];\n        if (pointIndex === -1) {\n          shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' + layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex);\n        } else {\n          shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' + layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex + '_multiLine_' + pointIndex);\n        }\n        if (targetElement === shapeElement) {\n          process = true;\n        }\n        elements.push(shapeElement);\n      }\n      if (process) {\n        if (isNullOrUndefined(currentElement['LegendEle'])) {\n          currentElement['LegendEle'] = legend.mode === 'Default' ? document.getElementById(this.maps.element.id + '_Legend_Shape_Index_' + i) : document.getElementById(this.maps.element.id + '_Legend_Index_' + i);\n        }\n        currentElement['Elements'] = elements;\n        return currentElement;\n      }\n    }\n    return null;\n  };\n  Legend.prototype.shapesOfLegend = function (targetElement) {\n    var shapeIndex;\n    var layerIndex;\n    var dataIndex;\n    var pointIndex;\n    var idIndex = parseFloat(targetElement.id.charAt(targetElement.id.length - 1));\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var data = this.maps.legendModule.legendCollection[idIndex]['data'];\n    var legendShapeElements = [];\n    for (var i = 0; i < data.length; i++) {\n      var shapeElement = void 0;\n      shapeIndex = data[i]['shapeIndex'];\n      layerIndex = data[i]['layerIndex'];\n      dataIndex = data[i]['dataIndex'];\n      pointIndex = data[i]['pointIndex'];\n      if (pointIndex === -1) {\n        shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' + layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex);\n      } else {\n        shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' + layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex + '_multiLine_' + pointIndex);\n      }\n      if (!isNullOrUndefined(shapeElement)) {\n        legendShapeElements.push(shapeElement.id);\n      }\n    }\n    return legendShapeElements;\n  };\n  Legend.prototype.legendToggle = function () {\n    var map = this.maps;\n    var legend = map.legendSettings;\n    if (this.maps.selectedLegendElementId) {\n      // To maintain the state of legend selection during page resize.\n      for (var j = 0; j < this.maps.selectedLegendElementId.length; j++) {\n        var idIndex = legend.mode === 'Interactive' ? this.maps.element.id + '_Legend_Index_' : this.maps.element.id + '_Legend_Shape_Index_';\n        var selectedElement = map.svgObject.querySelector('#' + idIndex + this.maps.selectedLegendElementId[j]);\n        if (!isNullOrUndefined(selectedElement)) {\n          var fill = !isNullOrUndefined(this.maps.legendSelectionClass.fill) ? this.maps.legendSelectionClass.fill : selectedElement.getAttribute('fill');\n          this.setColor(selectedElement, fill, this.maps.legendSelectionClass.opacity.toString(), this.maps.legendSelectionClass.border.color, this.maps.legendSelectionClass.border.width.toString(), 'selection');\n          for (var i = 0; i < this.maps.legendSelectionCollection.length; i++) {\n            if (this.maps.legendSelectionCollection[i]['legendElement'].id === selectedElement.id) {\n              this.maps.legendSelectionCollection[i]['legendElement'] = selectedElement;\n            }\n          }\n          var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, selectedElement);\n          if (legendSelectionIndex === -1) {\n            var layerIndex = this.maps.legendModule.legendCollection[this.maps.selectedLegendElementId[j]]['data'][j]['layerIndex'];\n            this.pushCollection(selectedElement, this.maps.legendSelectionCollection, this.maps.legendModule.legendCollection[this.maps.selectedLegendElementId[j]], this.maps.layers[layerIndex].shapeSettings);\n          }\n        }\n      }\n    }\n    if (this.maps.toggledLegendId) {\n      for (var j = 0; j < this.maps.toggledLegendId.length; j++) {\n        var legendTextId = legend.mode === 'Interactive' ? '#' + this.maps.element.id + '_Legend_Index_' + this.maps.toggledLegendId[j] + '_Text' : '#' + this.maps.element.id + '_Legend_Text_Index_' + this.maps.toggledLegendId[j];\n        var textElement = map.svgObject.querySelector(legendTextId);\n        if (!isNullOrUndefined(textElement)) {\n          textElement.setAttribute('fill', '#E5E5E5');\n        }\n        var legendShapeId = legend.mode === 'Interactive' ? '#' + this.maps.element.id + '_Legend_Index_' + this.maps.toggledLegendId[j] : '#' + this.maps.element.id + '_Legend_Shape_Index_' + this.maps.toggledLegendId[j];\n        var legendElement = map.svgObject.querySelector(legendShapeId);\n        if (!isNullOrUndefined(legendElement)) {\n          legendElement.setAttribute('fill', '#E5E5E5');\n        }\n      }\n    }\n  };\n  Legend.prototype.renderLegendBorder = function () {\n    var map = this.maps;\n    var legend = map.legendSettings;\n    var legendTitle = legend.title.text;\n    var textStyle = {\n      fontFamily: legend.titleStyle.fontFamily,\n      fontStyle: legend.titleStyle.fontStyle,\n      fontWeight: legend.titleStyle.fontWeight,\n      size: legend.titleStyle.size,\n      color: legend.titleStyle.color,\n      opacity: legend.titleStyle.opacity\n    };\n    var textOptions;\n    var spacing = 10;\n    var trimTitle = textTrim(this.legendItemRect.width + spacing * 2, legendTitle, textStyle);\n    var textSize = measureText(trimTitle, textStyle);\n    this.legendBorderRect = new Rect(this.legendItemRect.x - spacing, this.legendItemRect.y - spacing - textSize.height, this.legendItemRect.width + spacing * 2, this.legendItemRect.height + spacing * 2 + textSize.height + (legend.mode === 'Interactive' ? 0 : this.page !== 0 ? spacing : 0));\n    var legendBorder = {\n      color: legend.border.color,\n      width: legend.border.width,\n      opacity: legend.border.opacity\n    };\n    legendBorder.opacity = isNullOrUndefined(legendBorder.opacity) ? 1 : legendBorder.opacity;\n    var renderOptions = new RectOption(map.element.id + '_Legend_Border', legend.background, legendBorder, 1, this.legendBorderRect, null, null, '', '');\n    this.legendGroup.appendChild(map.renderer.drawRectangle(renderOptions));\n    this.getLegendAlignment(map, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n    this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + -this.legendBorderRect.x) + ' ' + (this.translate.y + -this.legendBorderRect.y) + ' )');\n    if (legend.position !== 'Float') {\n      map.svgObject.appendChild(this.legendGroup);\n    }\n    if (legendTitle) {\n      textStyle.color = textStyle.color !== null ? textStyle.color : this.maps.themeStyle.legendTitleFontColor;\n      textStyle.fontFamily = !isNullOrUndefined(textStyle.fontFamily) ? textStyle.fontFamily : this.maps.themeStyle.fontFamily;\n      textOptions = new TextOption(map.element.id + '_LegendTitle', this.legendItemRect.x + this.legendItemRect.width / 2, this.legendItemRect.y - textSize.height / 2 - spacing / 2, 'middle', trimTitle, '');\n      renderTextElement(textOptions, textStyle, textStyle.color, this.legendGroup);\n    }\n  };\n  Legend.prototype.changeNextPage = function (e) {\n    this.currentPage = e.target.id.indexOf('_Left_Page_') > -1 ? this.currentPage - 1 : this.currentPage + 1;\n    this.legendGroup = this.maps.renderer.createGroup({\n      id: this.maps.element.id + '_Legend_Group'\n    });\n    this.maps.mapAreaRect = this.initialMapAreaRect;\n    this.drawLegendItem(this.currentPage);\n    if (!isNullOrUndefined(this.maps.legendModule) && this.maps.legendSettings.position === 'Float') {\n      if (this.maps.isTileMap) {\n        this.maps.mapLayerPanel.layerGroup.appendChild(this.maps.legendModule.legendGroup);\n      } else {\n        this.maps.svgObject.appendChild(this.maps.legendModule.legendGroup);\n      }\n    }\n    if (querySelector(this.maps.element.id + '_Legend_Border', this.maps.element.id)) {\n      querySelector(this.maps.element.id + '_Legend_Border', this.maps.element.id).style.pointerEvents = 'none';\n    }\n  };\n  Legend.prototype.getLegendAlignment = function (map, width, height, legend) {\n    var x;\n    var y;\n    var spacing = 10;\n    var totalRect;\n    // eslint-disable-next-line prefer-const\n    totalRect = extend({}, map.mapAreaRect, totalRect, true);\n    var areaX = totalRect.x;\n    var areaY = totalRect.y;\n    var areaHeight = totalRect.height;\n    var areaWidth = totalRect.width;\n    var totalWidth = map.availableSize.width;\n    var totalHeight = map.availableSize.height;\n    var locationX = !isNullOrUndefined(legend.location.x) ? legend.location.x : 0;\n    var locationY = !isNullOrUndefined(legend.location.y) ? legend.location.y : 0;\n    if (legend.position === 'Float') {\n      this.translate = map.isTileMap ? new Point(locationX, locationY + spacing / 4) : new Point(locationX + map.mapAreaRect.x, locationY + map.mapAreaRect.y);\n      this.legendTotalRect = map.mapAreaRect;\n    } else {\n      switch (legend.position) {\n        case 'Top':\n        case 'Bottom':\n          totalRect.height = legend.position === 'Top' ? areaHeight - height : areaHeight - height - spacing * 2;\n          x = totalWidth / 2 - width / 2;\n          y = legend.position === 'Top' ? areaY : areaY + totalRect.height;\n          totalRect.y = legend.position === 'Top' ? areaY + height + (map.isTileMap ? spacing / 2 : spacing) : areaY - spacing / 2;\n          break;\n        case 'Left':\n        case 'Right':\n          totalRect.width = areaWidth - width - map.mapAreaRect.x;\n          x = legend.position === 'Left' ? areaX + spacing / 2 : areaX + totalRect.width + spacing;\n          y = totalHeight / 2 - height / 2;\n          totalRect.x = legend.position === 'Left' ? areaX + width + spacing : areaX;\n          break;\n      }\n      switch (legend.alignment) {\n        case 'Near':\n          if (legend.position === 'Top' || legend.position === 'Bottom') {\n            x = totalRect.x - (legend.mode === 'Interactive' ? spacing : 0);\n          } else {\n            y = totalRect.y - (!(legend.height && legend.width) && legend.mode === 'Interactive' ? map.mapAreaRect.x : 0);\n          }\n          break;\n        case 'Far':\n          if (legend.position === 'Top' || legend.position === 'Bottom') {\n            x = totalWidth - width - (legend.mode === 'Interactive' ? 0 : spacing);\n          } else {\n            y = totalHeight - height - (legend.mode === 'Default' ? spacing : 0);\n          }\n          break;\n      }\n      if ((legend.height || legend.width) && legend.mode !== 'Interactive') {\n        this.legendTotalRect = map.mapAreaRect = map.totalRect = totalRect;\n      } else {\n        map.totalRect = null;\n        if ((legend.height || legend.width) && legend.mode === 'Interactive') {\n          map.totalRect = totalRect;\n        }\n        this.legendTotalRect = map.mapAreaRect = totalRect;\n      }\n      if (legend.position === 'Left') {\n        map.mapAreaRect.width = totalRect.width;\n      }\n      this.translate = new Point(x, y);\n    }\n  };\n  Legend.prototype.getMarkersLegendCollections = function (layerIndex, markers) {\n    var _this = this;\n    Array.prototype.forEach.call(markers, function (marker, markerIndex) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var dataSource = marker.dataSource;\n      var field = marker.legendText;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var templateFn;\n      var isDuplicate;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n        var imageSrc = null;\n        var showLegend = isNullOrUndefined(data[_this.maps.legendSettings.showLegendPath]) ? true : data[_this.maps.legendSettings.showLegendPath];\n        if (marker.visible && showLegend && !isNullOrUndefined(data['latitude']) && !isNullOrUndefined(data['longitude'])) {\n          if (marker.template) {\n            templateFn = getTemplateFunction(marker.template, _this.maps);\n            var templateElement = templateFn(_this.maps);\n            var markerEle = isNullOrUndefined(templateElement.childElementCount) ? templateElement[0] : templateElement;\n            imageSrc = markerEle.querySelector('img').src;\n          }\n          var text = isNullOrUndefined(data[field]) ? '' : data[field];\n          var legendFill = !isNullOrUndefined(marker.colorValuePath) ? data[marker.colorValuePath] : marker.fill;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var newData = [];\n          if (_this.maps.legendSettings.removeDuplicateLegend) {\n            newData.push(_this.getMarkerLegendData(layerIndex, text, legendFill));\n            _this.getOverallLegendItemsCollection(text, legendFill, newData, showLegend);\n          } else {\n            newData.push({\n              layerIndex: layerIndex,\n              markerIndex: markerIndex,\n              dataIndex: dataIndex,\n              value: legendFill,\n              name: text,\n              shape: !isNullOrUndefined(marker.shapeValuePath) && !isNullOrUndefined(data[marker.shapeValuePath]) && data[marker.shapeValuePath] !== '' ? data[marker.shapeValuePath] : _this.maps.legendSettings.useMarkerShape ? marker.shape : _this.maps.legendSettings.shape\n            });\n            _this.getOverallLegendItemsCollection(text, legendFill, newData, showLegend);\n          }\n        }\n      });\n    });\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.getMarkerLegendData = function (layerIndex, text, legendFill) {\n    var _this = this;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var legendData = [];\n    this.maps.layers[layerIndex].markerSettings.map(function (markerSettings, markerIndex) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var markerData = markerSettings.dataSource;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Array.prototype.forEach.call(markerData, function (data, dataIndex) {\n        var marker = _this.maps.layers[layerIndex].markerSettings[markerIndex];\n        if ((text === data[marker.legendText] || text === '') && legendFill === data[marker.colorValuePath]) {\n          legendData.push({\n            layerIndex: layerIndex,\n            markerIndex: markerIndex,\n            dataIndex: dataIndex,\n            value: legendFill,\n            name: text,\n            shape: !isNullOrUndefined(marker.shapeValuePath) ? data[marker.shapeValuePath] : marker.shape\n          });\n        }\n      });\n    });\n    return legendData;\n  };\n  Legend.prototype.getRangeLegendCollection = function (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n    var _this = this;\n    var legendText;\n    var legendIndex = 0;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var fill = this.maps.legendSettings.fill;\n    var rangeData = [];\n    var _loop_1 = function (colorMap) {\n      if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to)) {\n        legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n        rangeData = [];\n        var colorMapProcess_1 = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n          var colorValue = colorValuePath.indexOf('.') > -1 ? Number(getValueFromObject(data, colorValuePath)) : parseFloat(data[colorValuePath]);\n          if (colorValue >= colorMap.from && colorValue <= colorMap.to) {\n            colorMapProcess_1 = true;\n            rangeData.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, colorValue));\n          }\n        });\n        if (!colorMapProcess_1) {\n          rangeData.push({\n            layerIndex: layerIndex,\n            shapeIndex: null,\n            dataIndex: null,\n            name: null,\n            value: null\n          });\n        }\n        var legendFill = isNullOrUndefined(fill) ? Object.prototype.toString.call(colorMap.color) === '[object Array]' ? !isNullOrUndefined(colorMap.value) ? colorMap.color[0] : this_1.legendGradientColor(colorMap, legendIndex) : colorMap.color : fill;\n        legendIndex++;\n        this_1.getOverallLegendItemsCollection(legendText, legendFill, rangeData, colorMap.showLegend);\n      }\n    };\n    var this_1 = this;\n    for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n      var colorMap = colorMapping_1[_i];\n      _loop_1(colorMap);\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.getOverallLegendItemsCollection = function (legendText, legendFill, legendData, showLegend) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var newColllection = [];\n    var legend = this.maps.legendSettings;\n    if (legendData.length > 0 && showLegend) {\n      for (var i = 0; i < legendData.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var collection = legendData[i];\n        if (collection.length > 0) {\n          for (var j = 0; j < collection.length; j++) {\n            newColllection.push(collection[j]);\n          }\n        } else {\n          newColllection.push(legendData[i]);\n        }\n        newColllection['_isVisible'] = true;\n      }\n      var isDuplicate = this.maps.legendSettings.removeDuplicateLegend ? this.removeDuplicates(this.legendCollection, legendText, legendFill) : false;\n      if (!isDuplicate) {\n        this.legendCollection.push({\n          text: legendText,\n          fill: legendFill,\n          data: newColllection,\n          opacity: legend.opacity,\n          borderColor: legend.shapeBorder.color,\n          borderWidth: legend.shapeBorder.width\n        });\n      } else {\n        for (var i = 0; i < this.legendCollection.length; i++) {\n          if (this.legendCollection[i]['text'] === legendText && this.legendCollection[i]['fill'] === legendFill) {\n            this.legendCollection[i].data.push(newColllection[0]);\n          }\n        }\n      }\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Legend.prototype.removeDuplicates = function (legendCollection, text, legendFill) {\n    var isDuplicate = false;\n    for (var i = 0; i < legendCollection.length; i++) {\n      if ((legendCollection[i]['text'] === text || legendCollection[i]['text'] === '') && legendCollection[i]['fill'] === legendFill) {\n        isDuplicate = true;\n        break;\n      } else {\n        continue;\n      }\n    }\n    return isDuplicate;\n  };\n  Legend.prototype.getEqualLegendCollection = function (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n    var _this = this;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var fill = this.maps.legendSettings.fill;\n    var equalValues = [];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var legendText;\n    var legendIndex = 0;\n    var equalData = [];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var outOfRangeValues = [];\n    var outOfRange = [];\n    var _loop_2 = function (colorMap) {\n      if (!isNullOrUndefined(colorMap.value)) {\n        legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value;\n        equalData = [];\n        var eqaulColorProcess_1 = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n          var equalValue = colorValuePath.indexOf('.') > -1 ? getValueFromObject(data, colorValuePath) : data[colorValuePath];\n          if (equalValue === colorMap.value) {\n            eqaulColorProcess_1 = true;\n            if (equalValues.indexOf(equalValue) === -1) {\n              equalValues.push(equalValue);\n            }\n            equalData.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, equalValue));\n          } else {\n            if (outOfRangeValues.indexOf(equalValue) === -1) {\n              outOfRangeValues.push(equalValue);\n            }\n          }\n        });\n        for (var x = 0; x < equalValues.length; x++) {\n          for (var y = 0; y < outOfRangeValues.length; y++) {\n            if (equalValues[x] === outOfRangeValues[y]) {\n              var equalIndex = outOfRangeValues.indexOf(equalValues[x]);\n              outOfRangeValues.splice(equalIndex, 1);\n            }\n          }\n        }\n        if (!eqaulColorProcess_1) {\n          equalData.push({\n            layerIndex: layerIndex,\n            shapeIndex: null,\n            dataIndex: null,\n            name: null,\n            value: null\n          });\n        }\n        var legendFill = isNullOrUndefined(fill) ? Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color : fill;\n        legendIndex++;\n        this_2.getOverallLegendItemsCollection(legendText, legendFill, equalData, colorMap.showLegend);\n      } else if (isNullOrUndefined(colorMap.minOpacity) && isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) && isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to) && !isNullOrUndefined(colorMap.color)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n          var equalValue = colorValuePath.indexOf('.') > -1 ? getValueFromObject(data, colorValuePath) : data[colorValuePath];\n          for (var k = 0; k < outOfRangeValues.length; k++) {\n            if (equalValue === outOfRangeValues[k]) {\n              outOfRange.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, equalValue));\n            }\n          }\n        });\n        if (outOfRangeValues.length === 0) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var range_1 = false;\n          var outRange = [];\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n            range_1 = false;\n            var rangeValue = data[colorValuePath];\n            for (var z = 0; z < colorMapping.length; z++) {\n              if (!isNullOrUndefined(rangeValue) && !isNaN(rangeValue)) {\n                if (rangeValue >= colorMapping[z].from && rangeValue <= colorMapping[z].to) {\n                  range_1 = true;\n                }\n              } else if (!range_1) {\n                range_1 = false;\n              }\n            }\n            if (!range_1) {\n              outOfRange.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, rangeValue));\n            }\n          });\n        }\n        legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n        var outfill = Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n        var legendOutFill = outfill;\n        legendIndex++;\n        this_2.getOverallLegendItemsCollection(legendText, legendOutFill, outOfRange, colorMap.showLegend);\n      }\n    };\n    var this_2 = this;\n    for (var _i = 0, colorMapping_2 = colorMapping; _i < colorMapping_2.length; _i++) {\n      var colorMap = colorMapping_2[_i];\n      _loop_2(colorMap);\n    }\n  };\n  Legend.prototype.getDataLegendCollection = function (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n    var _this = this;\n    var legendText;\n    var fill = this.maps.legendSettings.fill;\n    var valuePath = this.maps.legendSettings.valuePath;\n    if (!isNullOrUndefined(colorValuePath) && !isNullOrUndefined(dataSource)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n        var showLegend = isNullOrUndefined(_this.maps.legendSettings.showLegendPath) ? true : isNullOrUndefined(data[_this.maps.legendSettings.showLegendPath]) ? false : data[_this.maps.legendSettings.showLegendPath];\n        var dataValue = colorValuePath.indexOf('.') > -1 ? getValueFromObject(data, colorValuePath) : data[colorValuePath];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newData = [];\n        var legendFill = isNullOrUndefined(fill) ? dataValue : fill;\n        if (!isNullOrUndefined(dataValue) && colorMapping.length === 0) {\n          legendText = !isNullOrUndefined(data[valuePath]) ? valuePath.indexOf('.') > -1 ? getValueFromObject(data, valuePath) : data[valuePath] : dataPath.indexOf('.') > -1 ? getValueFromObject(data, dataPath) : data[dataPath];\n          newData.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, dataValue));\n        }\n        _this.getOverallLegendItemsCollection(legendText, legendFill, newData, showLegend);\n      });\n    }\n  };\n  Legend.prototype.interactiveHandler = function (e) {\n    var target = e.target;\n    var legend = this.maps.legendSettings;\n    var id = this.maps.element.id + '_Interactive_Legend';\n    var hoverId = legend.type === 'Layers' ? '_shapeIndex_' : legend.type === 'Markers' ? '_MarkerIndex_' : '_BubbleIndex_';\n    if (target.id.indexOf(hoverId) > 1) {\n      var layerIndex = parseFloat(target.id.split('_LayerIndex_')[1].split('_')[0]);\n      var dataIndex = parseFloat(target.id.split(/_dataIndex_/i)[1].split('_')[0]);\n      var fill = void 0;\n      var stroke = void 0;\n      var strokeWidth = void 0;\n      if (!isNullOrUndefined(querySelector(id, this.maps.element.id))) {\n        remove(querySelector(id, this.maps.element.id));\n      }\n      var layer = this.maps.layersCollection[layerIndex];\n      var markerVisible = legend.type === 'Layers' ? layer.visible : legend.type === 'Markers' ? layer.markerSettings[parseFloat(target.id.split('_MarkerIndex_')[1].split('_')[0])].visible : this.maps.getBubbleVisible(this.maps.layersCollection[layerIndex]);\n      if (legend.visible && this.legendRenderingCollections.length > 0 && legend.mode === 'Interactive' && markerVisible) {\n        var svgRect = this.maps.svgObject.getBoundingClientRect();\n        for (var i = 0; i < this.legendCollection.length; i++) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var currentData = this.legendCollection[i];\n          var legendElement = querySelector(this.maps.element.id + '_Legend_Index_' + i, this.maps.element.id);\n          var legendRect = legendElement.getBoundingClientRect();\n          var rect = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n          fill = legendElement.getAttribute('fill');\n          stroke = legend.shapeBorder.color;\n          strokeWidth = legend.shapeBorder.width;\n          if (!isNullOrUndefined(currentData['data'])) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = currentData['data'];\n            for (var j = 0; j < data.length; j++) {\n              if (dataIndex === data[j]['dataIndex'] && layerIndex === data[j]['layerIndex']) {\n                this.renderInteractivePointer(legend, fill, stroke, id, strokeWidth, rect);\n                break;\n              }\n            }\n          }\n        }\n      }\n    } else {\n      if (!isNullOrUndefined(querySelector(id, this.maps.element.id))) {\n        remove(querySelector(id, this.maps.element.id));\n      }\n    }\n  };\n  Legend.prototype.renderInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n    var path;\n    var locX;\n    var locY;\n    var height = 10;\n    var width = 10;\n    var direction = legend.orientation === 'None' ? legend.position === 'Top' || legend.position === 'Bottom' ? 'Horizontal' : 'Vertical' : legend.orientation;\n    rect.y = legend.position === 'Float' && this.maps.isTileMap ? rect.y - this.maps.mapAreaRect.y : rect.y;\n    if (direction === 'Horizontal') {\n      if (!legend.invertedPointer) {\n        locX = rect.x + rect.width / 2 - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n        locY = rect.y;\n        path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) + ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n      } else {\n        locX = rect.x + rect.width / 2 - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n        locY = rect.y + rect.height;\n        path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) + ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n      }\n    } else {\n      if (!legend.invertedPointer) {\n        locX = rect.x + rect.width - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n        locY = rect.y + rect.height / 2;\n        path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) + ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n      } else {\n        locX = rect.x - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n        locY = rect.y + rect.height / 2;\n        path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) + ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n      }\n    }\n    var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, 1, '', path);\n    if (legend.position === 'Float' && this.maps.isTileMap) {\n      this.maps.mapLayerPanel.layerGroup.appendChild(this.maps.renderer.drawPath(pathOptions));\n    } else {\n      this.maps.svgObject.appendChild(this.maps.renderer.drawPath(pathOptions));\n    }\n  };\n  Legend.prototype.wireEvents = function (element) {\n    EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n  };\n  Legend.prototype.addEventListener = function () {\n    if (this.maps.isDestroyed) {\n      return;\n    }\n    this.maps.on(Browser.touchMoveEvent, this.interactiveHandler, this);\n    this.maps.on(Browser.touchEndEvent, this.interactiveHandler, this);\n    this.maps.on(click, this.legendClick, this);\n  };\n  Legend.prototype.markerToggleSelection = function (mapElement, layerIndex, markerIndex, legendIndex) {\n    mapElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n    mapElement.setAttribute('stroke', this.maps.layers[layerIndex].markerSettings[markerIndex].border.color);\n    mapElement.setAttribute('fill-opacity', this.maps.layers[layerIndex].markerSettings[markerIndex].opacity.toString());\n    mapElement.setAttribute('stroke-width', this.maps.layers[layerIndex].markerSettings[markerIndex].border.width.toString());\n    mapElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[layerIndex].markerSettings[markerIndex].border.opacity) ? this.maps.layers[layerIndex].markerSettings[markerIndex].opacity : this.maps.layers[layerIndex].markerSettings[markerIndex].border.opacity).toString());\n  };\n  Legend.prototype.bubbleToggleSelection = function (mapElement, layerIndex, bubbleIndex, legendIndex) {\n    mapElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n    mapElement.setAttribute('stroke', this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.color);\n    mapElement.setAttribute('fill-opacity', this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].opacity.toString());\n    mapElement.setAttribute('stroke-width', this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.width.toString());\n    mapElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.opacity) ? this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].opacity : this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.opacity).toString());\n  };\n  Legend.prototype.legendClick = function (targetEle) {\n    var legendShapeId;\n    var legendTextId;\n    var legendTextColor;\n    var legendToggleFill = this.maps.legendSettings.toggleLegendSettings.fill;\n    var legendToggleOpacity = this.maps.legendSettings.toggleLegendSettings.opacity;\n    var legendToggleBorderColor = this.maps.legendSettings.toggleLegendSettings.border.color;\n    var legendToggleBorderWidth = this.maps.legendSettings.toggleLegendSettings.border.width;\n    var legendToggleBorderOpacity = isNullOrUndefined(this.maps.legendSettings.toggleLegendSettings.border.opacity) ? this.maps.legendSettings.toggleLegendSettings.opacity : this.maps.legendSettings.toggleLegendSettings.border.opacity;\n    if (targetEle.parentNode['id'].indexOf(this.maps.element.id + '_Legend_Index_') > -1) {\n      var mapElement = void 0;\n      var legendIndex = parseFloat(targetEle.parentElement.id.substr((this.maps.element.id + '_Legend_Index_').length));\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var selectedItem = this.legendCollection[legendIndex]['data'];\n      var isVisible = selectedItem['_isVisible'];\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var shape = void 0;\n      if (this.maps.legendSettings.toggleLegendSettings.enable && (this.maps.legendSettings.type === 'Bubbles' || this.maps.legendSettings.type === 'Markers')) {\n        for (var k = 0; k < this.maps.layers.length; k++) {\n          for (var j = 0; j < (this.maps.legendSettings.type === 'Bubbles' ? this.maps.layers[k].bubbleSettings.length : this.maps.layers[k].markerSettings.length); j++) {\n            for (var i = 0; i < selectedItem.length; i++) {\n              shape = this.legendCollection[legendIndex]['data'][i];\n              mapElement = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] + '_BubbleIndex_' + j + '_dataIndex_' + shape['dataIndex'], this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] + '_MarkerIndex_' + shape['markerIndex'] + '_dataIndex_' + shape['dataIndex'], this.maps.element.id);\n              if (!isNullOrUndefined(shape['shape']) && shape['shape'] === 'Balloon') {\n                mapElement = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] + '_BubbleIndex_' + j + '_dataIndex_' + shape['dataIndex'] + '_Group', this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] + '_MarkerIndex_' + shape['markerIndex'] + '_dataIndex_' + shape['dataIndex'] + '_Group', this.maps.element.id);\n                mapElement = mapElement.children[0];\n              }\n              if (isVisible && mapElement !== null) {\n                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                  mapElement.setAttribute('fill', this.maps.layers[k].shapeSettings.fill);\n                  mapElement.setAttribute('stroke', this.maps.layers[k].shapeSettings.border.color);\n                  mapElement.setAttribute('fill-opacity', this.maps.layers[k].shapeSettings.opacity.toString());\n                  mapElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                  mapElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ? this.maps.layers[k].shapeSettings.opacity : this.maps.layers[k].shapeSettings.border.opacity).toString());\n                } else {\n                  mapElement.setAttribute('fill', legendToggleFill);\n                  mapElement.setAttribute('fill-opacity', legendToggleOpacity.toString());\n                  mapElement.setAttribute('stroke', legendToggleBorderColor);\n                  mapElement.setAttribute('stroke-width', legendToggleBorderWidth.toString());\n                  mapElement.setAttribute('stroke-opacity', legendToggleBorderOpacity.toString());\n                }\n                if (targetEle !== null) {\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', '#E5E5E5');\n                  if (this.maps.legendSettings.shape === 'HorizontalLine' || this.maps.legendSettings.shape === 'VerticalLine' || this.maps.legendSettings.shape === 'Cross') {\n                    legendShapeId.setAttribute('stroke', '#E5E5E5');\n                  }\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#E5E5E5');\n                }\n              } else {\n                if (this.maps.legendSettings.type === 'Markers') {\n                  this.markerToggleSelection(mapElement, k, j, legendIndex);\n                } else {\n                  this.bubbleToggleSelection(mapElement, k, j, legendIndex);\n                }\n                if (targetEle !== null) {\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                  if (this.maps.legendSettings.shape === 'HorizontalLine' || this.maps.legendSettings.shape === 'VerticalLine' || this.maps.legendSettings.shape === 'Cross') {\n                    legendShapeId.setAttribute('stroke', this.legendCollection[legendIndex]['fill']);\n                  }\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#757575');\n                }\n              }\n            }\n            selectedItem['_isVisible'] = isVisible ? false : true;\n          }\n        }\n      }\n      if (this.maps.legendSettings.type === 'Layers' && this.maps.legendSettings.toggleLegendSettings.enable) {\n        var layerElement = void 0;\n        this.removeCollections(targetEle, legendIndex);\n        var toggledLegendIdIndex = this.maps.toggledLegendId.indexOf(legendIndex);\n        if (toggledLegendIdIndex !== -1) {\n          isVisible = false;\n        }\n        for (var j = 0; j < this.maps.layers.length; j++) {\n          for (var i = 0; i < selectedItem.length; i++) {\n            shape = this.legendCollection[legendIndex]['data'][i];\n            layerElement = querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] + '_shapeIndex_' + shape['shapeIndex'] + '_dataIndex_' + shape['dataIndex'], this.maps.element.id);\n            if (layerElement !== null) {\n              var toggledShapeIdIndex = this.maps.toggledShapeElementId.indexOf(layerElement.id);\n              if (isVisible) {\n                if (i === 0) {\n                  this.maps.toggledLegendId.push(legendIndex);\n                }\n                if (toggledShapeIdIndex === -1) {\n                  this.maps.toggledShapeElementId.push(layerElement.id);\n                }\n                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                  layerElement.setAttribute('fill', this.maps.layers[j].shapeSettings.fill);\n                  layerElement.setAttribute('fill-opacity', this.maps.layers[j].shapeSettings.opacity.toString());\n                  layerElement.setAttribute('stroke', this.maps.layers[j].shapeSettings.border.color);\n                  layerElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.width) ? 0 : this.maps.layers[j].shapeSettings.border.width).toString());\n                  layerElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.opacity) ? this.maps.layers[j].shapeSettings.opacity : this.maps.layers[j].shapeSettings.border.opacity).toString());\n                } else {\n                  layerElement.setAttribute('fill', legendToggleFill);\n                  layerElement.setAttribute('fill-opacity', legendToggleOpacity.toString());\n                  layerElement.setAttribute('stroke', legendToggleBorderColor);\n                  layerElement.setAttribute('stroke-width', legendToggleBorderWidth.toString());\n                  layerElement.setAttribute('stroke-opacity', legendToggleBorderOpacity.toString());\n                }\n                if (targetEle !== null) {\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#E5E5E5');\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', '#E5E5E5');\n                }\n              } else {\n                if (toggledLegendIdIndex !== -1 && i === 0) {\n                  this.maps.toggledLegendId.splice(toggledLegendIdIndex, 1);\n                }\n                if (toggledShapeIdIndex !== -1) {\n                  this.maps.toggledShapeElementId.splice(toggledShapeIdIndex, 1);\n                }\n                layerElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                layerElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.opacity) ? this.maps.layers[j].shapeSettings.opacity : this.maps.layers[j].shapeSettings.border.opacity).toString());\n                layerElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.width) ? 0 : this.maps.layers[j].shapeSettings.border.width).toString());\n                layerElement.setAttribute('fill-opacity', this.maps.layers[j].shapeSettings.opacity.toString());\n                layerElement.setAttribute('stroke', this.maps.layers[j].shapeSettings.border.color);\n                if (targetEle !== null) {\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#757575');\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                }\n              }\n            }\n          }\n        }\n        selectedItem['_isVisible'] = isVisible ? false : true;\n      }\n    } else if (!isNullOrUndefined(targetEle.id) && (targetEle.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 || targetEle.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1) && this.maps.legendSettings.visible && targetEle.id.indexOf('_Text') === -1) {\n      var LegendInteractive = void 0;\n      var legendIndex = parseFloat(targetEle.id.split(this.maps.element.id + '_Legend_Index_')[1]);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var mapdata = void 0;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var selectedItem = this.legendCollection[legendIndex]['data'];\n      var isVisible = selectedItem['_isVisible'];\n      if ((this.maps.legendSettings.type === 'Bubbles' || this.maps.legendSettings.type === 'Markers') && this.maps.legendSettings.toggleLegendSettings.enable) {\n        for (var k = 0; k < this.maps.layers.length; k++) {\n          for (var j = 0; j < (this.maps.legendSettings.type === 'Bubbles' ? this.maps.layers[k].bubbleSettings.length : this.maps.layers[k].markerSettings.length); j++) {\n            for (var i = 0; i < selectedItem.length; i++) {\n              mapdata = this.legendCollection[legendIndex]['data'][i];\n              LegendInteractive = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] + '_BubbleIndex_' + j + '_dataIndex_' + mapdata['dataIndex'], this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] + '_MarkerIndex_' + j + '_dataIndex_' + mapdata['dataIndex'], this.maps.element.id);\n              if (!isNullOrUndefined(mapdata['shape']) && mapdata['shape'] === 'Balloon') {\n                LegendInteractive = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] + '_BubbleIndex_' + j + '_dataIndex_' + mapdata['dataIndex'] + '_Group', this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] + '_MarkerIndex_' + j + '_dataIndex_' + mapdata['dataIndex'] + '_Group', this.maps.element.id);\n                LegendInteractive = LegendInteractive.children[0];\n              }\n              if (isVisible && LegendInteractive !== null) {\n                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                  LegendInteractive.setAttribute('fill', this.maps.layers[k].shapeSettings.fill);\n                  LegendInteractive.setAttribute('stroke', this.maps.layers[k].shapeSettings.border.color);\n                  LegendInteractive.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                  LegendInteractive.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ? this.maps.layers[k].shapeSettings.opacity : this.maps.layers[k].shapeSettings.border.opacity).toString());\n                  LegendInteractive.setAttribute('fill-opacity', this.maps.layers[k].shapeSettings.opacity.toString());\n                } else {\n                  LegendInteractive.setAttribute('fill', legendToggleFill);\n                  LegendInteractive.setAttribute('fill-opacity', legendToggleOpacity.toString());\n                  LegendInteractive.setAttribute('stroke', legendToggleBorderColor);\n                  LegendInteractive.setAttribute('stroke-width', legendToggleBorderWidth.toString());\n                  LegendInteractive.setAttribute('stroke-opacity', legendToggleBorderOpacity.toString());\n                }\n                if (targetEle !== null) {\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#E5E5E5');\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', '#E5E5E5');\n                }\n              } else {\n                if (this.maps.legendSettings.type === 'Markers') {\n                  this.markerToggleSelection(LegendInteractive, k, j, legendIndex);\n                } else {\n                  this.bubbleToggleSelection(LegendInteractive, k, j, legendIndex);\n                }\n                if (targetEle !== null) {\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#757575');\n                }\n              }\n            }\n            selectedItem['_isVisible'] = isVisible ? false : true;\n          }\n        }\n      }\n      if (this.maps.legendSettings.type === 'Layers' && this.maps.legendSettings.toggleLegendSettings.enable) {\n        var mapLegendElement = void 0;\n        this.removeCollections(targetEle, legendIndex);\n        var toggleLegendIdIndex = this.maps.toggledLegendId.indexOf(legendIndex);\n        if (toggleLegendIdIndex !== -1) {\n          isVisible = false;\n        }\n        for (var k = 0; k < this.maps.layers.length; k++) {\n          for (var i = 0; i < selectedItem.length; i++) {\n            mapdata = this.legendCollection[legendIndex]['data'][i];\n            mapLegendElement = querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] + '_shapeIndex_' + mapdata['shapeIndex'] + '_dataIndex_' + mapdata['dataIndex'], this.maps.element.id);\n            if (mapLegendElement !== null) {\n              var toggledShapeIdIndex = this.maps.toggledShapeElementId.indexOf(mapLegendElement.id);\n              if (isVisible) {\n                if (i === 0) {\n                  this.maps.toggledLegendId.push(legendIndex);\n                }\n                if (toggledShapeIdIndex === -1) {\n                  this.maps.toggledShapeElementId.push(mapLegendElement.id);\n                }\n                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                  mapLegendElement.setAttribute('fill', this.maps.layers[0].shapeSettings.fill);\n                  mapLegendElement.setAttribute('stroke', this.maps.layers[0].shapeSettings.border.color);\n                  mapLegendElement.setAttribute('fill-opacity', this.maps.layers[k].shapeSettings.opacity.toString());\n                  mapLegendElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                  mapLegendElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ? this.maps.layers[k].shapeSettings.opacity : this.maps.layers[k].shapeSettings.border.opacity).toString());\n                } else {\n                  mapLegendElement.setAttribute('fill', legendToggleFill);\n                  mapLegendElement.setAttribute('fill-opacity', legendToggleOpacity.toString());\n                  mapLegendElement.setAttribute('stroke', legendToggleBorderColor);\n                  mapLegendElement.setAttribute('stroke-width', legendToggleBorderWidth.toString());\n                  mapLegendElement.setAttribute('stroke-opacity', legendToggleBorderOpacity.toString());\n                }\n                if (targetEle !== null) {\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', '#E5E5E5');\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#E5E5E5');\n                }\n              } else {\n                if (toggleLegendIdIndex !== -1 && i === 0) {\n                  this.maps.toggledLegendId.splice(toggleLegendIdIndex, 1);\n                }\n                if (toggledShapeIdIndex !== -1) {\n                  this.maps.toggledShapeElementId.splice(toggledShapeIdIndex, 1);\n                }\n                mapLegendElement.setAttribute('fill-opacity', this.maps.layers[k].shapeSettings.opacity.toString());\n                mapLegendElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                mapLegendElement.setAttribute('stroke', this.maps.layers[0].shapeSettings.border.color);\n                mapLegendElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ? this.maps.layers[k].shapeSettings.opacity : this.maps.layers[k].shapeSettings.border.opacity).toString());\n                mapLegendElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                if (targetEle !== null) {\n                  legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                  legendTextId.setAttribute('fill', '#757575');\n                  legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                  legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                }\n              }\n            }\n          }\n        }\n        selectedItem['_isVisible'] = isVisible ? false : true;\n      }\n    }\n  };\n  Legend.prototype.removeCollections = function (targetEle, legendIndex) {\n    this.removeLegendSelectionCollection(targetEle);\n    var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, targetEle);\n    if (legendSelectionIndex !== -1) {\n      this.maps.legendSelectionCollection.splice(legendSelectionIndex, 1);\n    }\n    var legendHighlightIndex = this.getIndexofLegend(this.legendHighlightCollection, targetEle);\n    if (legendHighlightIndex !== -1) {\n      this.legendHighlightCollection.splice(legendSelectionIndex, 1);\n    }\n    var shapeHighlightIndex = this.getIndexofLegend(this.shapeHighlightCollection, targetEle);\n    if (shapeHighlightIndex !== -1) {\n      this.shapeHighlightCollection.splice(shapeHighlightIndex, 1);\n    }\n    var selectedIndex = this.maps.selectedLegendElementId.indexOf(legendIndex);\n    if (selectedIndex !== -1) {\n      this.maps.selectedLegendElementId.splice(selectedIndex, 1);\n    }\n  };\n  Legend.prototype.removeEventListener = function () {\n    if (this.maps.isDestroyed) {\n      return;\n    }\n    this.maps.off(Browser.touchMoveEvent, this.interactiveHandler);\n    this.maps.off(Browser.touchEndEvent, this.interactiveHandler);\n    this.maps.off(click, this.legendClick);\n  };\n  Legend.prototype.getLegendData = function (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layerIndex, dataIndex, data, dataPath,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layerData, shapePropertyPath, value\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var legendData = [];\n    if (Object.prototype.toString.call(layerData) === '[object Array]') {\n      for (var i = 0; i < layerData.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var shapeData = layerData[i];\n        var dataPathValue = dataPath.indexOf('.') > -1 ? getValueFromObject(data, dataPath) : data[dataPath];\n        var shapePath = checkPropertyPath(data[dataPath], shapePropertyPath, shapeData['properties']);\n        var dataPathValueCase = !isNullOrUndefined(dataPathValue) && typeof dataPathValue === 'string' ? dataPathValue.toLowerCase() : dataPathValue;\n        var shapeDataValueCase = !isNullOrUndefined(shapeData['properties'][shapePath]) && isNaN(shapeData['properties'][shapePath]) ? shapeData['properties'][shapePath].toLowerCase() : shapeData['properties'][shapePath];\n        if (shapeDataValueCase === dataPathValueCase) {\n          if (shapeData['geometry']['type'] != 'MultiPoint') {\n            legendData.push({\n              layerIndex: layerIndex,\n              shapeIndex: i,\n              dataIndex: dataIndex,\n              name: data[dataPath],\n              value: value,\n              pointIndex: -1\n            });\n          } else {\n            for (var j = 0; j < shapeData['geometry'].coordinates.length; j++) {\n              legendData.push({\n                layerIndex: layerIndex,\n                shapeIndex: i,\n                dataIndex: dataIndex,\n                name: data[dataPath],\n                value: value,\n                pointIndex: j\n              });\n            }\n          }\n        }\n      }\n    }\n    return legendData;\n  };\n  Legend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n    var legendFillColor;\n    var xmlns = 'http://www.w3.org/2000/svg';\n    if (!isNullOrUndefined(colorMap.color) && typeof colorMap.color === 'object') {\n      var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n      var opacity = 1;\n      var position = this.maps.legendSettings.position;\n      var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n      var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n      linerGradientEle.setAttribute('id', 'linear_' + legendIndex + '_' + this.maps.element.id);\n      linerGradientEle.setAttribute('x1', 0 + '%');\n      linerGradientEle.setAttribute('y1', 0 + '%');\n      linerGradientEle.setAttribute('x2', x2 + '%');\n      linerGradientEle.setAttribute('y2', y2 + '%');\n      for (var b = 0; b < colorMap.color.length; b++) {\n        var offsetColor = 100 / (colorMap.color.length - 1);\n        var stopEle = document.createElementNS(xmlns, 'stop');\n        stopEle.setAttribute('offset', b * offsetColor + '%');\n        stopEle.setAttribute('stop-color', colorMap.color[b]);\n        stopEle.setAttribute('stop-opacity', opacity.toString());\n        linerGradientEle.appendChild(stopEle);\n      }\n      this.legendLinearGradient = linerGradientEle;\n      var color = 'url(' + '#linear_' + legendIndex + '_' + this.maps.element.id + ')';\n      this.defsElement.appendChild(linerGradientEle);\n      legendFillColor = color;\n    }\n    return legendFillColor;\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name\n   */\n  Legend.prototype.getModuleName = function () {\n    return 'Legend';\n  };\n  /**\n   * To destroy the legend.\n   *\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.destroy = function () {\n    this.legendCollection = [];\n    this.legendRenderingCollections = [];\n    this.translate = null;\n    this.legendBorderRect = null;\n    this.initialMapAreaRect = null;\n    this.legendTotalRect = null;\n    this.totalPages = [];\n    this.legendItemRect = null;\n    this.legendGroup = null;\n    this.shapeHighlightCollection = [];\n    this.legendHighlightCollection = [];\n    this.shapePreviousColor = [];\n    this.selectedNonLegendShapes = [];\n    this.legendLinearGradient = null;\n    this.currentLayer = null;\n    this.defsElement = null;\n    this.legendElement = [];\n    this.oldShapeElement = null;\n    this.removeEventListener();\n    this.maps = null;\n  };\n  return Legend;\n}();\nexport { Legend };","map":{"version":3,"names":["click","legendRendering","Rect","measureText","PathOption","textTrim","drawBalloon","removeClass","querySelector","getTemplateFunction","maintainStyleClass","getValueFromObject","RectOption","Size","TextOption","Point","renderTextElement","drawSymbol","checkPropertyPath","getElement","isNullOrUndefined","Browser","EventHandler","remove","extend","Legend","maps","legendBorderRect","initialMapAreaRect","legendTotalRect","totalPages","page","currentPage","legendItemRect","heightIncrement","widthIncrement","textMaxWidth","shapeHighlightCollection","legendHighlightCollection","shapePreviousColor","selectedNonLegendShapes","shapeToggled","legendElement","addEventListener","prototype","renderLegend","legendRenderingCollections","legendCollection","defsElement","renderer","createDefs","svgObject","appendChild","mapAreaRect","calculateLegendBounds","drawLegend","_this","map","legend","legendSettings","spacing","leftPadding","topPadding","y","Array","forEach","call","layersCollection","layer","layerIndex","shapeData","layerData","dataPath","shapeDataPath","propertyPath","shapePropertyPath","dataSource","colorValuePath","colorMapping","type","visible","shapeSettings","getLegends","_i","_a","bubbleSettings","length","bubble","getMarkersLegendCollections","markerSettings","i","legendItem","eventArgs","name","cancel","fill","shape","shapeBorder","text","toString","trigger","splice","defaultSize","legendTitle","title","titleTextStyle","titleStyle","legendMode","mode","shapeX","shapeY","textX","textY","shapePadding","textPadding","shapeHeight","shapeWidth","shapeLocation","textLocation","legendRectCollection","location_1","position","labelAction","labelDisplayMode","arrangement","orientation","legendWidth","width","indexOf","availableSize","parseInt","legendHeight","height","legendItemStartX_1","legendItemStartY_1","startX","startY","legendtitleSize","itemTextStyle","textStyle","legendLength","rectWidth","rectHeight","position_1","labelPosition","textX_1","textY_1","textPadding_1","itemStartX","itemStartY","maxTextHeight","maxTextWidth","legendText","itemTextSize","Math","max","abs","push","x","textWidth","textHeight","j","Page","Collection","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","padding","DisplayText","ImageSrc","Shape","Text","Fill","legendShape","idIndex","collection","legendObj","index","legendRect","getRangeLegendCollection","getEqualLegendCollection","getDataLegendCollection","legendTextTrim","maxWidth","font","legendRectSize","label","size","legendWithoutTextSize","textLength","substring","totalSize","render","textOptions","textFont","color","fontFamily","fontWeight","fontStyle","opacity","legendGroup","createGroup","id","element","itemId","textId","item","bounds","renderLegendBorder","themeStyle","legendTextColor","rectOptions","legendFontSize","drawRectangle","legendToggle","drawLegendItem","shapeSize","renderOptions","pagingArrowPadding","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","legendTextStyle","useMarkerShape","legendShapeData","data","marker","layers","trimmedText","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","pageTextX","locY","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","drawPath","leftRectPageOptions","pathEle","setAttribute","tabIndex","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","pagingTextElement","createText","legendHighLightAndSelection","targetElement","value","shapeIndex","dataIndex","pointIndex","textEle","document","getElementById","replace","legendModule","multiSelectEnable","selectionSettings","enableMultiSelect","selectLength","interactProcess","parseFloat","charAt","updateLegendElement","toggleLegendCheck","toggledLegendId","toggleLegendSettings","enable","collectionIndex","getIndexofLegend","removeLegendHighlightCollection","shapeSelections","removeAllSelections","legendSelectionCollection","k","removeLegendSelectionCollection","selectedLegendElementId","legendSelection","z","idIndex_1","split","textContent","module","highlightSettings","shapeElement","shapeMatch","i_1","pushCollection","legendHighlightColor","shapeItemCount","shapeOldFillColor","getAttribute","shapeOldColor","setColor","border","legendSelectionClass","legendSelectionColor","selectedElementId","removeLegend","borderColor","borderWidth","isLineStringShape","parentElement","Number","scale","oldElement","legendOldFill","legendOldOpacity","legendOldBorderColor","legendOldBorderWidth","shapeOpacity","shapeOldBorderColor","shapeOldBorderWidth","Elements","dataCount","shapeFillColor","shapeElements","shapesOfLegend","selectedElementIdIndex","removeShapeHighlightCollection","removeFill","shapeHighLightAndSelection","getValue","undefined","indexes","legendIndexOnShape","shapeDataOnLegend","checkSelection","selectionIndex","content","oldShapeElement","length_1","shapeMatched","selectionEle","isTargetSelected","selectedLegendIndex","multiSelection","legendSelectionIndex","addId","getElementsByClassName","target","selectEle","IsSelected","SelectionIndex","targetCollection","legendIndex","e","selectedElement","actualIndex","path","legendType","currentCollection","currentCollectionLength","dataValue","currentIndex","process","elements","currentElement","legendShapeElements","legendTextId","textElement","legendShapeId","trimTitle","textSize","legendBorder","background","getLegendAlignment","translate","legendTitleFontColor","changeNextPage","isTileMap","mapLayerPanel","layerGroup","style","pointerEvents","totalRect","areaX","areaY","areaHeight","areaWidth","totalWidth","totalHeight","locationX","location","locationY","alignment","markers","markerIndex","field","templateFn","isDuplicate","imageSrc","showLegend","showLegendPath","template","templateElement","markerEle","childElementCount","src","legendFill","newData","removeDuplicateLegend","getMarkerLegendData","getOverallLegendItemsCollection","shapeValuePath","legendData","markerData","rangeData","_loop_1","colorMap","from","to","colorMapProcess_1","colorValue","getLegendData","Object","this_1","legendGradientColor","colorMapping_1","newColllection","removeDuplicates","equalValues","equalData","outOfRangeValues","outOfRange","_loop_2","eqaulColorProcess_1","equalValue","equalIndex","this_2","minOpacity","maxOpacity","range_1","outRange","rangeValue","isNaN","outfill","legendOutFill","colorMapping_2","valuePath","interactiveHandler","hoverId","stroke","markerVisible","getBubbleVisible","svgRect","getBoundingClientRect","currentData","rect","left","top","renderInteractivePointer","locX","direction","invertedPointer","pathOptions","add","touchStartEvent","isDestroyed","on","touchMoveEvent","touchEndEvent","legendClick","markerToggleSelection","mapElement","bubbleToggleSelection","bubbleIndex","targetEle","legendToggleFill","legendToggleOpacity","legendToggleBorderColor","legendToggleBorderWidth","legendToggleBorderOpacity","parentNode","substr","selectedItem","isVisible","children","applyShapeSettings","layerElement","removeCollections","toggledLegendIdIndex","toggledShapeIdIndex","toggledShapeElementId","LegendInteractive","mapdata","mapLegendElement","toggleLegendIdIndex","legendHighlightIndex","shapeHighlightIndex","selectedIndex","removeEventListener","off","dataPathValue","shapePath","dataPathValueCase","toLowerCase","shapeDataValueCase","coordinates","legendFillColor","xmlns","linerGradientEle","createElementNS","x2","y2","b","offsetColor","stopEle","legendLinearGradient","getModuleName","destroy","currentLayer"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-maps/src/maps/layers/legend.js"],"sourcesContent":["import { click, legendRendering } from '../index';\nimport { Rect, measureText, PathOption, textTrim, drawBalloon, removeClass, querySelector, getTemplateFunction, maintainStyleClass, getValueFromObject } from '../utils/helper';\nimport { RectOption, Size, TextOption, Point, renderTextElement, drawSymbol, checkPropertyPath, getElement } from '../utils/helper';\nimport { isNullOrUndefined, Browser, EventHandler, remove, extend } from '@syncfusion/ej2-base';\n/**\n * Legend module is used to render legend for the maps\n */\nvar Legend = /** @class */ (function () {\n    function Legend(maps) {\n        /**\n         * @private\n         */\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        /**\n         * @private\n         */\n        this.initialMapAreaRect = new Rect(0, 0, 0, 0);\n        /**\n         * @private\n         */\n        this.legendTotalRect = new Rect(0, 0, 0, 0);\n        /**\n         * @private\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.totalPages = [];\n        this.page = 0;\n        /**\n         * @private\n         */\n        this.currentPage = 0;\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeHighlightCollection = [];\n        /**\n         * @private\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendHighlightCollection = [];\n        /**\n         * @private\n         */\n        this.shapePreviousColor = [];\n        /**\n         * @private\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.selectedNonLegendShapes = [];\n        /**\n         * @private\n         */\n        this.shapeToggled = true;\n        /**\n         * @private\n         */\n        this.legendElement = null;\n        this.maps = maps;\n        this.addEventListener();\n    }\n    /**\n     * To calculate legend bounds and draw the legend shape and text.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollection = [];\n        this.totalPages = [];\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.maps.renderer.createDefs();\n        this.maps.svgObject.appendChild(this.defsElement);\n        this.initialMapAreaRect = this.maps.mapAreaRect;\n        this.calculateLegendBounds();\n        this.drawLegend();\n    };\n    Legend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var map = this.maps;\n        var legend = map.legendSettings;\n        this.legendCollection = [];\n        var spacing = 10;\n        var leftPadding = 10;\n        var topPadding = map.mapAreaRect.y;\n        this.legendRenderingCollections = [];\n        Array.prototype.forEach.call(map.layersCollection, function (layer, layerIndex) {\n            if (!isNullOrUndefined(layer.shapeData)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var layerData = layer.shapeData['features'];\n                var dataPath = layer.shapeDataPath;\n                var propertyPath = layer.shapePropertyPath;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var dataSource = layer.dataSource;\n                var colorValuePath = void 0;\n                var colorMapping = void 0;\n                if (legend.type === 'Layers' && layer.visible) {\n                    colorValuePath = layer.shapeSettings.colorValuePath;\n                    colorMapping = layer.shapeSettings.colorMapping;\n                    _this.getLegends(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n                }\n                else if (legend.type === 'Bubbles') {\n                    for (var _i = 0, _a = layer.bubbleSettings; _i < _a.length; _i++) {\n                        var bubble = _a[_i];\n                        if (bubble.visible) {\n                            colorValuePath = bubble.colorValuePath;\n                            colorMapping = bubble.colorMapping;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            dataSource = bubble.dataSource;\n                            _this.getLegends(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n                        }\n                    }\n                }\n            }\n            if (legend.type === 'Markers') {\n                _this.getMarkersLegendCollections(layerIndex, layer.markerSettings);\n            }\n        });\n        if (this.legendCollection.length > 0) {\n            for (var i = 0; i < this.legendCollection.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var legendItem = this.legendCollection[i];\n                var eventArgs = {\n                    name: legendRendering, cancel: false, fill: legendItem['fill'], shape: legend.shape,\n                    shapeBorder: legend.shapeBorder,\n                    text: typeof legendItem['text'] === 'number' ? legendItem['text'].toString() : legendItem['text']\n                };\n                map.trigger('legendRendering', eventArgs);\n                legendItem['fill'] = eventArgs.fill;\n                legendItem['shape'] = eventArgs.shape;\n                legendItem['shapeBorder'] = eventArgs.shapeBorder;\n                legendItem['text'] = eventArgs.text;\n                if (eventArgs.cancel) {\n                    this.legendCollection.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        var defaultSize = 25;\n        var legendTitle = map.legendSettings.title.text;\n        var titleTextStyle = map.legendSettings.titleStyle;\n        if (this.legendCollection.length > 0) {\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapePadding = legend.shapePadding;\n            var textPadding = 10;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var legendRectCollection = [];\n            var location_1;\n            var position = legend.position;\n            var labelAction = legend.labelDisplayMode;\n            var arrangement = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom')\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (map.availableSize.width / 100)\n                * parseInt(legend.width, 10) : parseInt(legend.width, 10) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ? (map.availableSize.height / 100) *\n                parseInt(legend.height, 10) : parseInt(legend.height, 10) : null;\n            var legendItemStartX_1;\n            var legendItemStartY_1;\n            var startX = 0;\n            var startY = 0;\n            var legendtitleSize = measureText(legendTitle, titleTextStyle);\n            if (legendMode === 'Interactive') {\n                var itemTextStyle = legend.textStyle;\n                var legendLength = this.legendCollection.length;\n                var rectWidth = (arrangement === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (map.mapAreaRect.width / legendLength) :\n                    (legendWidth / legendLength) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                var rectHeight = (arrangement === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (map.mapAreaRect.height / legendLength) : (legendHeight / legendLength);\n                startX = 0;\n                startY = legendtitleSize.height + spacing;\n                var position_1 = legend.labelPosition;\n                var textX_1 = 0;\n                var textY_1 = 0;\n                var textPadding_1 = 10;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollection.length; i++) {\n                    startX = (arrangement === 'Horizontal') ? (startX + rectWidth) : startX;\n                    startY = (arrangement === 'Horizontal') ? startY : (startY + rectHeight);\n                    var legendText = this.legendCollection[i]['text'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((arrangement === 'Horizontal' ? rectWidth : rectHeight), legendText, itemTextStyle);\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (arrangement === 'Horizontal') {\n                            textX_1 = startX + (rectWidth / 2);\n                            textY_1 = (position_1 === 'After') ? (startY + rectHeight + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY - textPadding_1);\n                        }\n                        else {\n                            textX_1 = (position_1 === 'After') ? startX - (itemTextSize.width / 2) - textPadding_1\n                                : (startX + rectWidth + itemTextSize.width / 2) + textPadding_1;\n                            textY_1 = startY + (rectHeight / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (arrangement === 'Horizontal') ? startX : (position_1 === 'After') ?\n                            textX_1 - (itemTextSize.width / 2) : startX;\n                        itemStartY = (arrangement === 'Horizontal') ? (position_1 === 'After') ? startY :\n                            textY_1 - (itemTextSize.height / 2) : startY;\n                        if (this.legendCollection.length === 1) {\n                            legendWidth = (arrangement === 'Horizontal') ? Math.abs((startX + rectWidth) - itemStartX) :\n                                (rectWidth + maxTextWidth + textPadding_1);\n                            legendHeight = (arrangement === 'Horizontal') ? (rectHeight + (maxTextHeight / 2) + textPadding_1) :\n                                Math.abs((startY + rectHeight) - itemStartY);\n                        }\n                    }\n                    else if (i === this.legendCollection.length - 1) {\n                        legendWidth = (arrangement === 'Horizontal') ? Math.abs((startX + rectWidth) - itemStartX) :\n                            (rectWidth + maxTextWidth + textPadding_1);\n                        legendHeight = (arrangement === 'Horizontal') ? (rectHeight + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY + rectHeight) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollection[i]['fill'], x: startX, y: startY,\n                        width: rectWidth, height: rectHeight,\n                        text: legendText, textX: textX_1, textY: textY_1,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        shapeBorder: this.legendCollection[i]['shapeBorder']\n                    });\n                }\n                if (this.legendCollection.length === 1) {\n                    legendHeight = rectHeight;\n                    legendWidth = rectWidth;\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n            else {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? map.mapAreaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? map.mapAreaRect.height : legendHeight;\n                var j = 0;\n                this.page = 0;\n                for (var i = 0; i < this.legendCollection.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var legendItem = this.legendCollection[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['text'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY = shapeY = topPadding + legendtitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (arrangement === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    legendRectCollection = [];\n                                    shapeX = startX;\n                                    shapeY = startY;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX;\n                                    shapeY = startY;\n                                    legendRectCollection = [];\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                var padding = 10;\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + padding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['text'],\n                        ImageSrc: legendItem['imageSrc'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['fill'],\n                        legendShape: legendItem['shape'],\n                        shapeBorder: legendItem['shapeBorder'],\n                        idIndex: i,\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[0]['Collection'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                Array.prototype.forEach.call(collection, function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        legendItemStartX_1 = legendRect.x;\n                        legendItemStartY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(legendItemStartX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(legendItemStartY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n        }\n    };\n    /**\n     * Get the legend collections\n     *\n     * @param {number} layerIndex - Specifies the layer index\n     * @param {object[]} layerData - Specifies the layer data\n     * @param {ColorMappingSettings[]} colorMapping - Specifies the color mapping\n     * @param {object[]} dataSource - Specifies the data source\n     * @param {string} dataPath - Specifies the data path\n     * @param {string} colorValuePath - Specifies the color value path\n     * @param {string | string[]} propertyPath - Specifies the property path\n     * @returns {void}\n     */\n    Legend.prototype.getLegends = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n        this.getRangeLegendCollection(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n        this.getEqualLegendCollection(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n        this.getDataLegendCollection(layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath);\n    };\n    Legend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    Legend.prototype.legendTextTrim = function (maxWidth, text, font, legendRectSize) {\n        var label = text;\n        var size = measureText(text, font).width;\n        var legendWithoutTextSize = legendRectSize - size;\n        if (legendRectSize > maxWidth) {\n            var textLength = text.length;\n            for (var i = textLength - 1; i >= 0; --i) {\n                label = text.substring(0, i) + '...';\n                size = measureText(label, font).width;\n                var totalSize = legendWithoutTextSize + size;\n                if (totalSize <= maxWidth || label.length < 4) {\n                    if (label.length < 4) {\n                        label = ' ';\n                    }\n                    return label;\n                }\n            }\n        }\n        return label;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To draw the legend shape and text.\n     */\n    Legend.prototype.drawLegend = function () {\n        var map = this.maps;\n        var legend = map.legendSettings;\n        var render = map.renderer;\n        var textOptions;\n        var textFont = {\n            size: legend.textStyle.size,\n            color: legend.textStyle.color,\n            fontFamily: legend.textStyle.fontFamily,\n            fontWeight: legend.textStyle.fontWeight,\n            fontStyle: legend.textStyle.fontStyle,\n            opacity: legend.textStyle.opacity\n        };\n        this.legendGroup = render.createGroup({ id: map.element.id + '_Legend_Group' });\n        if (legend.mode === 'Interactive') {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = map.element.id + '_Legend_Index_' + i;\n                var textId = map.element.id + '_Legend_Index_' + i + '_Text';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.legendRenderingCollections[i];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                if (i === 0) {\n                    this.renderLegendBorder();\n                }\n                var textLocation = new Point(item['textX'], item['textY']);\n                textFont.color = (textFont.color !== null) ? textFont.color : this.maps.themeStyle.legendTextColor;\n                var rectOptions = new RectOption(itemId, item['fill'], item['shapeBorder'], legend.opacity, bounds);\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                textFont.fontFamily = !isNullOrUndefined(textFont.fontFamily) ? textFont.fontFamily : this.maps.themeStyle.fontFamily;\n                textFont.size = map.themeStyle.legendFontSize || textFont.size;\n                renderTextElement(textOptions, textFont, textFont.color, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n                this.legendToggle();\n            }\n        }\n        else {\n            this.drawLegendItem(this.currentPage);\n        }\n    };\n    /**\n     * @param {string} page - Specifies the legend page.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.drawLegendItem = function (page) {\n        var map = this.maps;\n        var legend = map.legendSettings;\n        var spacing = 10;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var renderOptions;\n        var render = map.renderer;\n        var legendShape = legend.shape;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (querySelector(this.legendGroup.id, this.maps.element.id)) {\n                remove(querySelector(this.legendGroup.id, this.maps.element.id));\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[page]['Collection'][i];\n                var shapeBorder = collection['shapeBorder'];\n                var legendElement = render.createGroup({ id: map.element.id + '_Legend_Index_' + collection['idIndex'] });\n                var legendText = collection['DisplayText'];\n                var pagingArrowPadding = 4;\n                var shape = ((legend.type === 'Markers') ? ((isNullOrUndefined(collection['ImageSrc'])) ?\n                    legend.shape : 'Image') : collection['legendShape']);\n                var strokeColor = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine'\n                    || legend.shape === 'Cross') ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n                var strokeWidth = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine'\n                    || legend.shape === 'Cross') ? (shapeBorder.width === 0) ?\n                    1 : shapeBorder.width : shapeBorder.width;\n                var shapeId = map.element.id + '_Legend_Shape_Index_' + collection['idIndex'];\n                var textId = map.element.id + '_Legend_Text_Index_' + collection['idIndex'];\n                var shapeLocation = new Point(collection['Shape']['x'], (collection['Shape']['y'] - pagingArrowPadding));\n                var textLocation = new Point(collection['Text']['x'], (collection['Text']['y'] - pagingArrowPadding));\n                var imageUrl = ((isNullOrUndefined(collection['ImageSrc'])) ? legend.shape : collection['ImageSrc']);\n                var renderOptions_1 = new PathOption(shapeId, collection['Fill'], strokeWidth, strokeColor, legend.opacity, isNullOrUndefined(shapeBorder.opacity) ? legend.opacity : shapeBorder.opacity, '');\n                var legendTextStyle = {\n                    fontFamily: legend.textStyle.fontFamily, fontStyle: legend.textStyle.fontStyle,\n                    fontWeight: legend.textStyle.fontWeight, size: legend.textStyle.size, color: legend.textStyle.color, opacity: legend.textStyle.opacity\n                };\n                legendTextStyle.color = (legendTextStyle.color !== null) ? legendTextStyle.color :\n                    this.maps.themeStyle.legendTextColor;\n                legendTextStyle.fontFamily = !isNullOrUndefined(legendTextStyle.fontFamily) ? legendTextStyle.fontFamily : this.maps.themeStyle.fontFamily;\n                legendTextStyle.size = map.themeStyle.legendFontSize || legendTextStyle.size;\n                if (i === 0) {\n                    this.renderLegendBorder();\n                }\n                if (legend.type === 'Markers' && legend.useMarkerShape) {\n                    var legendShapeData = this.legendCollection[collection['idIndex']].data[0];\n                    var marker = map.layers[legendShapeData['layerIndex']].markerSettings[legendShapeData['markerIndex']];\n                    legendShape = !isNullOrUndefined(marker.dataSource[legendShapeData['dataIndex']][marker['shapeValuePath']]) && marker.dataSource[legendShapeData['dataIndex']][marker['shapeValuePath']] !== '' ? marker.dataSource[legendShapeData['dataIndex']][marker['shapeValuePath']] : marker.shape;\n                }\n                if (legendShape === \"Balloon\") {\n                    legendElement.appendChild(drawBalloon(map, renderOptions_1, shapeSize, { x: shapeLocation.x, y: (shapeLocation.y + 5) }, 'Legend'));\n                }\n                else {\n                    legendElement.appendChild(drawSymbol(shapeLocation, legendShape, shapeSize, collection['ImageSrc'], renderOptions_1));\n                }\n                var legendRectSize = collection['Rect']['x'] + collection['Rect']['width'];\n                if (legendRectSize > this.legendBorderRect.width) {\n                    var trimmedText = this.legendTextTrim(this.legendBorderRect.width, legendText, legendTextStyle, legendRectSize);\n                    legendText = trimmedText;\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legendTextStyle, legendTextStyle.color, legendElement);\n                this.legendGroup.appendChild(legendElement);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (i === (this.totalPages[page]['Collection'].length - 1)) {\n                    var pagingGroup = void 0;\n                    var width = spacing;\n                    var height = (spacing / 2);\n                    if (this.page !== 0) {\n                        var pagingText = (page + 1) + '/' + this.totalPages.length;\n                        var pagingFont = legend.textStyle;\n                        var pagingTextSize = measureText(pagingText, pagingFont);\n                        var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                            (width * 2) - (spacing * 2) + (pagingArrowPadding / 2);\n                        var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                        var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2) - pagingArrowPadding;\n                        var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                        pagingGroup = render.createGroup({ id: map.element.id + '_Legend_Paging_Group' });\n                        var leftPageElement = render.createGroup({ id: map.element.id + '_Legend_Left_Paging_Group' });\n                        var rightPageElement = render.createGroup({ id: map.element.id + '_Legend_Right_Paging_Group' });\n                        var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                            ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                        var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                            ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                        var leftPageOptions = new PathOption(map.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', ((page + 1) === 1 ? 0.5 : 1), 1, '', leftPath);\n                        leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                        var leftRectPageOptions = new RectOption(map.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), null, null, '', '');\n                        var pathEle = render.drawRectangle(leftRectPageOptions);\n                        pathEle.setAttribute('tabindex', ((page + 1) === 1 ? -1 : map.tabIndex + 1).toString());\n                        leftPageElement.appendChild(pathEle);\n                        this.wireEvents(leftPageElement);\n                        var rightPageOptions = new PathOption(map.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', ((page + 1) === this.totalPages.length ? 0.5 : 1), 1, '', rightPath);\n                        rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                        var rightRectPageOptions = new RectOption(map.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect(rightPageX - spacing - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), null, null, '', '');\n                        pathEle = render.drawRectangle(rightRectPageOptions);\n                        pathEle.setAttribute('tabindex', ((page + 1) === this.totalPages.length ? -1 : map.tabIndex + 2).toString());\n                        rightPageElement.appendChild(pathEle);\n                        this.wireEvents(rightPageElement);\n                        pagingGroup.appendChild(leftPageElement);\n                        pagingGroup.appendChild(rightPageElement);\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var pageTextOptions = {\n                            'id': map.element.id + '_Paging_Text',\n                            'x': pageTextX,\n                            'y': locY + (pagingTextSize.height / 4),\n                            'fill': '#a6a6a6',\n                            'font-size': '14px',\n                            'font-style': pagingFont.fontStyle,\n                            'font-family': pagingFont.fontFamily,\n                            'font-weight': pagingFont.fontWeight,\n                            'text-anchor': 'middle',\n                            'transform': '',\n                            'opacity': 1,\n                            'dominant-baseline': ''\n                        };\n                        var pagingTextElement = render.createText(pageTextOptions, pagingText);\n                        pagingTextElement.setAttribute('style', 'user-select: none;');\n                        pagingGroup.appendChild(pagingTextElement);\n                        this.legendGroup.appendChild(pagingGroup);\n                    }\n                    this.legendToggle();\n                }\n            }\n        }\n    };\n    Legend.prototype.legendHighLightAndSelection = function (targetElement, value) {\n        var shapeIndex;\n        var layerIndex;\n        var dataIndex;\n        var pointIndex;\n        var legend = this.maps.legendSettings;\n        var textEle = legend.mode === 'Default' ? document.getElementById(targetElement.id.replace('Shape', 'Text')) :\n            document.getElementById(targetElement.id + '_Text');\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var collection = this.maps.legendModule.legendCollection;\n        var length;\n        var multiSelectEnable = !isNullOrUndefined(collection[0]['data'][0]['layerIndex']) ? this.maps.layers[collection[0]['data'][0]['layerIndex']].selectionSettings.enableMultiSelect : false;\n        var selectLength = 0;\n        var interactProcess = true;\n        var idIndex = parseFloat(targetElement.id.charAt(targetElement.id.length - 1));\n        this.updateLegendElement();\n        var toggleLegendCheck = this.maps.toggledLegendId.indexOf(idIndex);\n        if (this.maps.legendSettings.toggleLegendSettings.enable && value === 'highlight' && toggleLegendCheck !== -1) {\n            var collectionIndex = this.getIndexofLegend(this.legendHighlightCollection, targetElement);\n            if (collectionIndex !== -1) {\n                this.legendHighlightCollection.splice(collectionIndex, 1);\n            }\n            this.removeLegendHighlightCollection();\n            return null;\n        }\n        if (value === 'selection') {\n            this.shapeHighlightCollection = [];\n            if (!this.maps.shapeSelections && !multiSelectEnable) {\n                this.removeAllSelections();\n                this.maps.shapeSelections = true;\n            }\n            if (this.maps.legendSelectionCollection.length > 0 && (!multiSelectEnable ? this.maps.shapeSelections : true)) {\n                for (var k = 0; k < this.maps.legendSelectionCollection.length; k++) {\n                    if (targetElement === this.maps.legendSelectionCollection[k]['legendElement']) {\n                        this.maps.legendSelectionCollection[k]['legendElement'] = targetElement;\n                        interactProcess = false;\n                        this.removeLegendSelectionCollection(this.maps.legendSelectionCollection[k]['legendElement']);\n                        this.maps.selectedLegendElementId.splice(this.maps.selectedLegendElementId.indexOf(idIndex), 1);\n                        this.maps.legendSelectionCollection.splice(k, 1);\n                        this.maps.legendSelection = this.maps.legendSelectionCollection.length > 0 ? false : true;\n                        break;\n                    }\n                    else if (!multiSelectEnable) {\n                        if (this.maps.legendSelectionCollection.length > 1) {\n                            for (var z = 0; z < this.maps.legendSelectionCollection.length; z++) {\n                                this.removeLegendSelectionCollection(this.maps.legendSelectionCollection[z]['legendElement']);\n                            }\n                            this.maps.legendSelectionCollection = [];\n                        }\n                        else {\n                            this.removeLegendSelectionCollection(this.maps.legendSelectionCollection[k]['legendElement']);\n                            this.maps.legendSelectionCollection.splice(k, 1);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (this.maps.legendSelectionCollection.length > 0) {\n                for (var k = 0; k < this.maps.legendSelectionCollection.length; k++) {\n                    if ((targetElement.id.indexOf('_Legend_Shape') > -1 || targetElement.id.indexOf('_Legend_Index')) &&\n                        targetElement === this.maps.legendSelectionCollection[k]['legendElement']) {\n                        interactProcess = false;\n                        break;\n                    }\n                    else {\n                        this.removeLegendHighlightCollection();\n                    }\n                }\n            }\n            this.removeLegendHighlightCollection();\n        }\n        if (interactProcess) {\n            for (var i = 0; i < collection.length; i++) {\n                var idIndex_1 = this.maps.legendSettings.mode === 'Interactive' ?\n                    parseFloat(targetElement.id.split('_Legend_Index_')[1]) :\n                    parseFloat(targetElement.id.split('_Legend_Shape_Index_')[1]);\n                if (textEle.textContent === collection[i]['text'] && collection[i]['data'].length > 0\n                    && idIndex_1 === i) {\n                    var layer = this.maps.layers[collection[i]['data'][0]['layerIndex']];\n                    var enable = void 0;\n                    var module = void 0;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var data = void 0;\n                    if (!isNullOrUndefined(layer)) {\n                        enable = (value === 'selection') ? layer.selectionSettings.enable : layer.highlightSettings.enable;\n                        module = void 0;\n                        module = (value === 'selection') ? layer.selectionSettings : layer.highlightSettings;\n                        data = collection[i]['data'];\n                    }\n                    if (enable) {\n                        for (var j = 0; j < data.length; j++) {\n                            var shapeElement = void 0;\n                            shapeIndex = data[j]['shapeIndex'];\n                            layerIndex = data[j]['layerIndex'];\n                            dataIndex = data[j]['dataIndex'];\n                            pointIndex = data[j]['pointIndex'];\n                            if (pointIndex === -1) {\n                                shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' +\n                                    layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex);\n                            }\n                            else {\n                                shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' +\n                                    layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex + '_multiLine_' + pointIndex);\n                            }\n                            if (shapeElement !== null) {\n                                var shapeMatch = true;\n                                if (this.maps.legendSelectionCollection !== null) {\n                                    for (var i_1 = 0; i_1 < this.maps.legendSelectionCollection.length; i_1++) {\n                                        if (this.maps.legendSelectionCollection[i_1]['legendElement'] === targetElement) {\n                                            shapeMatch = false;\n                                            break;\n                                        }\n                                    }\n                                }\n                                if (value === 'highlight' && shapeMatch) {\n                                    if (j === 0) {\n                                        this.legendHighlightCollection = [];\n                                        this.pushCollection(targetElement, this.legendHighlightCollection, collection[i], layer.shapeSettings);\n                                    }\n                                    length = this.legendHighlightCollection.length;\n                                    var legendHighlightColor = this.legendHighlightCollection[length - 1]['legendOldFill'];\n                                    this.legendHighlightCollection[length - 1]['MapShapeCollection']['Elements'].push(shapeElement);\n                                    var shapeItemCount = this.legendHighlightCollection[length - 1]['MapShapeCollection']['Elements'].length - 1;\n                                    var shapeOldFillColor = shapeElement.getAttribute('fill');\n                                    this.legendHighlightCollection[length - 1]['shapeOldFillColor'].push(shapeOldFillColor);\n                                    var shapeOldColor = this.legendHighlightCollection[length - 1]['shapeOldFillColor'][shapeItemCount];\n                                    this.shapePreviousColor = this.legendHighlightCollection[length - 1]['shapeOldFillColor'];\n                                    this.setColor(shapeElement, !isNullOrUndefined(module.fill) ? module.fill : shapeOldColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n                                    this.setColor(targetElement, !isNullOrUndefined(module.fill) ? module.fill : legendHighlightColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n                                }\n                                else if (value === 'selection') {\n                                    this.legendHighlightCollection = [];\n                                    this.maps.legendSelectionClass = module;\n                                    if (j === 0) {\n                                        this.pushCollection(targetElement, this.maps.legendSelectionCollection, collection[i], layer.shapeSettings);\n                                        if (multiSelectEnable) {\n                                            this.maps.selectedLegendElementId.push(i);\n                                        }\n                                        else {\n                                            if (this.maps.selectedLegendElementId.length === 0) {\n                                                this.maps.selectedLegendElementId.push(i);\n                                            }\n                                            else {\n                                                this.maps.selectedLegendElementId = [];\n                                                this.maps.selectedLegendElementId.push(i);\n                                            }\n                                        }\n                                    }\n                                    selectLength = this.maps.legendSelectionCollection.length;\n                                    var legendSelectionColor = this.maps.legendSelectionCollection[selectLength - 1]['legendOldFill'];\n                                    this.maps.legendSelectionCollection[selectLength - 1]['MapShapeCollection']['Elements'].push(shapeElement);\n                                    this.maps.legendSelectionCollection[selectLength - 1]['shapeOldFillColor'] = this.shapePreviousColor;\n                                    this.setColor(targetElement, !isNullOrUndefined(module.fill) ? module.fill : legendSelectionColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'selection');\n                                    this.setColor(shapeElement, !isNullOrUndefined(module.fill) ? module.fill : legendSelectionColor, module.opacity.toString(), module.border.color, module.border.width.toString(), 'selection');\n                                    if (this.maps.selectedElementId.indexOf(shapeElement.getAttribute('id')) === -1) {\n                                        this.maps.selectedElementId.push(shapeElement.getAttribute('id'));\n                                    }\n                                    if (j === data.length - 1) {\n                                        this.maps.legendSelection = false;\n                                        this.removeLegend(this.maps.legendSelectionCollection);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Legend.prototype.setColor = function (element, fill, opacity, borderColor, borderWidth, type) {\n        var isLineStringShape = (element.parentElement.id.indexOf('LineString') > -1);\n        if (type === 'selection') {\n            maintainStyleClass((isLineStringShape ? 'LineselectionMap' : 'ShapeselectionMap'), (isLineStringShape ? 'LineselectionMapStyle' : 'ShapeselectionMapStyle'), (isLineStringShape ? 'transparent' : fill), opacity, (isLineStringShape ? fill : borderColor), borderWidth, this.maps);\n            element.setAttribute('class', isLineStringShape ? 'LineselectionMapStyle' : 'ShapeselectionMapStyle');\n        }\n        else {\n            element.setAttribute('fill', isLineStringShape ? 'transparent' : fill);\n            element.setAttribute('fill-opacity', opacity);\n            element.setAttribute('stroke', isLineStringShape ? fill : borderColor);\n            element.setAttribute('stroke-width', (Number(borderWidth) / this.maps.scale).toString());\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.pushCollection = function (targetElement, collection, oldElement, shapeSettings) {\n        collection.push({\n            legendElement: targetElement, legendOldFill: oldElement['fill'], legendOldOpacity: oldElement['opacity'],\n            legendOldBorderColor: oldElement['borderColor'], legendOldBorderWidth: oldElement['borderWidth'],\n            shapeOpacity: shapeSettings.opacity, shapeOldBorderColor: shapeSettings.border.color,\n            shapeOldBorderWidth: shapeSettings.border.width\n        });\n        var length = collection.length;\n        collection[length - 1]['MapShapeCollection'] = { Elements: [] };\n        collection[length - 1]['shapeOldFillColor'] = [];\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.removeLegend = function (collection) {\n        for (var i = 0; i < collection.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = collection[i];\n            this.setColor(item['legendElement'], item['legendOldFill'], item['legendOldOpacity'], item['legendOldBorderColor'], item['legendOldBorderWidth'], 'highlight');\n            var dataCount = item['MapShapeCollection']['Elements'].length;\n            for (var j = 0; j < dataCount; j++) {\n                var shapeFillColor = item['legendOldFill'].indexOf('url') !== -1\n                    ? item['shapeOldFillColor'][j] : item['legendOldFill'];\n                this.setColor(item['MapShapeCollection']['Elements'][j], shapeFillColor, item['shapeOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth'], 'highlight');\n            }\n        }\n    };\n    Legend.prototype.removeLegendHighlightCollection = function () {\n        if (this.legendHighlightCollection.length > 0) {\n            this.removeLegend(this.legendHighlightCollection);\n            this.legendHighlightCollection = [];\n        }\n    };\n    Legend.prototype.removeLegendSelectionCollection = function (targetElement) {\n        if (this.maps.legendSelectionCollection.length > 0) {\n            removeClass(targetElement);\n            var shapeElements = this.shapesOfLegend(targetElement);\n            var dataCount = shapeElements.length;\n            for (var j = 0; j < dataCount; j++) {\n                var shapeElement = getElement(shapeElements[j]);\n                if (shapeElement.getAttribute('class') === 'ShapeselectionMapStyle' ||\n                    shapeElement.getAttribute('class') === 'LineselectionMapStyle') {\n                    removeClass(shapeElement);\n                    var selectedElementIdIndex = this.maps.selectedElementId.indexOf(shapeElement.id);\n                    if (selectedElementIdIndex !== -1) {\n                        this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n                    }\n                }\n            }\n        }\n    };\n    Legend.prototype.removeShapeHighlightCollection = function () {\n        if (this.shapeHighlightCollection.length > 0) {\n            for (var i = 0; i < this.shapeHighlightCollection.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.shapeHighlightCollection[i];\n                var removeFill = true;\n                for (var j = 0; j < this.maps.legendSelectionCollection.length; j++) {\n                    if (this.maps.legendSelectionCollection[j]['legendElement'] === item['legendElement']) {\n                        removeFill = false;\n                    }\n                }\n                if (removeFill) {\n                    this.setColor(item['legendElement'], item['legendOldFill'], item['legendOldOpacity'], item['legendOldBorderColor'], item['legendOldBorderWidth'], 'highlight');\n                }\n            }\n        }\n    };\n    Legend.prototype.shapeHighLightAndSelection = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    targetElement, data, module, getValue, layerIndex) {\n        if (data !== undefined) {\n            this.updateLegendElement();\n            this.shapeToggled = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var collection = this.maps.legendModule.legendCollection;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var indexes = this.legendIndexOnShape(data, layerIndex);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var shapeElement = this.shapeDataOnLegend(targetElement);\n            var toggleLegendCheck = this.maps.toggledLegendId.indexOf(indexes['actualIndex']);\n            if (this.maps.legendSettings.toggleLegendSettings.enable && toggleLegendCheck !== -1) {\n                this.shapeToggled = false;\n                this.legendHighlightCollection = [];\n                var collectionIndex = this.getIndexofLegend(this.shapeHighlightCollection, shapeElement['LegendEle']);\n                if (collectionIndex !== -1) {\n                    this.shapeHighlightCollection.splice(collectionIndex, 1);\n                }\n                this.removeShapeHighlightCollection();\n                return null;\n            }\n            if (indexes['currentIndex'] === undefined && indexes['actualIndex'] === undefined) {\n                this.removeShapeHighlightCollection();\n                return null;\n            }\n            if (indexes['currentIndex'] === undefined && getValue === 'selection'\n                && !this.maps.layers[layerIndex].selectionSettings.enableMultiSelect &&\n                targetElement.getAttribute('class') !== 'ShapeselectionMapStyle') {\n                this.maps.legendSelection = false;\n            }\n            if (getValue === 'selection' && !this.maps.layers[layerIndex].selectionSettings.enableMultiSelect &&\n                !this.maps.legendSelection) {\n                this.removeAllSelections();\n                this.maps.legendSelection = true;\n            }\n            if (indexes['currentIndex'] === undefined) {\n                if (getValue === 'selection' && indexes['actualIndex'] !== undefined) {\n                    var checkSelection = 0;\n                    for (var i = 0; i < shapeElement['Elements'].length; i++) {\n                        if (shapeElement['Elements'][i].getAttribute('class') === 'ShapeselectionMapStyle') {\n                            checkSelection++;\n                        }\n                    }\n                    var selectionIndex = this.maps.selectedLegendElementId.indexOf(indexes['actualIndex']);\n                    if (selectionIndex === -1) {\n                        this.maps.selectedLegendElementId.push(indexes['actualIndex']);\n                        this.maps.legendSelectionClass = module;\n                    }\n                    else {\n                        if ((checkSelection <= 1) && (targetElement.getAttribute('class') === 'ShapeselectionMapStyle'\n                            || targetElement.getAttribute('class') === 'LineselectionMapStyle')) {\n                            if (!this.maps.layers[layerIndex].selectionSettings.enableMultiSelect) {\n                                this.maps.selectedLegendElementId.splice(selectionIndex, 1);\n                            }\n                            else {\n                                if (checkSelection <= 1 && (targetElement.getAttribute('class') === 'ShapeselectionMapStyle'\n                                    || targetElement.getAttribute('class') === 'LineselectionMapStyle')) {\n                                    this.maps.selectedLegendElementId.splice(selectionIndex, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n                this.removeShapeHighlightCollection();\n                return null;\n            }\n            var text = collection[indexes['actualIndex']]['text'];\n            var content = void 0;\n            var legendShape = void 0;\n            if (this.maps.legendSettings.mode === 'Default') {\n                if (indexes['currentIndex'] !== undefined) {\n                    content = document.getElementById(this.maps.element.id + '_Legend_Text_Index_' + indexes['actualIndex']).textContent;\n                    legendShape = document.getElementById(this.maps.element.id + '_Legend_Shape_Index_' + indexes['actualIndex']);\n                }\n            }\n            else {\n                content = document.getElementById(this.maps.element.id + '_Legend_Index_' + indexes['actualIndex']\n                    + '_Text').textContent;\n                legendShape = document.getElementById(this.maps.element.id + '_Legend_Index_' + indexes['actualIndex']);\n            }\n            this.oldShapeElement = shapeElement['LegendEle'];\n            var length_1 = this.maps.legendSelectionCollection.length;\n            if (text === content) {\n                var shapeMatched = true;\n                if (this.maps.legendSelectionCollection) {\n                    for (var i = 0; i < this.maps.legendSelectionCollection.length; i++) {\n                        if (this.maps.legendSelectionCollection[i]['legendElement'] === shapeElement['LegendEle']) {\n                            shapeMatched = false;\n                            break;\n                        }\n                    }\n                }\n                if (getValue === 'highlight' && shapeMatched) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var selectionEle = this.isTargetSelected(shapeElement, this.shapeHighlightCollection);\n                    if (selectionEle === undefined || (selectionEle && !selectionEle['IsSelected'])) {\n                        this.pushCollection(legendShape, this.shapeHighlightCollection, collection[indexes['actualIndex']], this.maps.layers[layerIndex].shapeSettings);\n                    }\n                    for (var j = 0; j < this.shapeHighlightCollection.length; j++) {\n                        if (shapeElement['LegendEle'].id === this.shapeHighlightCollection[j]['legendElement'].id) {\n                            this.shapeHighlightCollection[j]['legendElement'] = shapeElement['LegendEle'];\n                        }\n                    }\n                    if (length_1 > 0) {\n                        for (var j = 0; j < length_1; j++) {\n                            if (shapeElement['LegendEle'] === this.maps.legendSelectionCollection[j]['legendElement']) {\n                                this.maps.legendSelectionCollection[j]['legendElement'] = shapeElement['LegendEle'];\n                                this.removeShapeHighlightCollection();\n                                break;\n                            }\n                            else if (j === length_1 - 1) {\n                                this.removeShapeHighlightCollection();\n                                this.setColor(legendShape, !isNullOrUndefined(module.fill) ? module.fill : legendShape.getAttribute('fill'), module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n                            }\n                        }\n                    }\n                    else {\n                        this.removeShapeHighlightCollection();\n                        this.setColor(legendShape, !isNullOrUndefined(module.fill) ? module.fill : legendShape.getAttribute('fill'), module.opacity.toString(), module.border.color, module.border.width.toString(), 'highlight');\n                    }\n                }\n                else if (getValue === 'selection') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var selectionEle = this.isTargetSelected(shapeElement, this.maps.legendSelectionCollection);\n                    if (length_1 > 0) {\n                        var j = 0;\n                        while (j < this.maps.legendSelectionCollection.length) {\n                            if (shapeElement['LegendEle'] !== this.maps.legendSelectionCollection[j]['legendElement'] &&\n                                !module.enableMultiSelect) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                var element = this.maps.legendSelectionCollection[j];\n                                var selectedLegendIndex = this.maps.selectedLegendElementId.indexOf(indexes['actualIndex']);\n                                this.maps.selectedLegendElementId.splice(selectedLegendIndex, 1);\n                                this.maps.legendSelectionCollection.splice(j, 1);\n                                removeClass(element['legendElement']);\n                                this.maps.shapeSelections = true;\n                                j = 0;\n                            }\n                            else {\n                                j++;\n                            }\n                        }\n                    }\n                    if (selectionEle && (selectionEle['IsSelected'] && (targetElement.getAttribute('class') === 'ShapeselectionMapStyle'\n                        || targetElement.getAttribute('class') === 'LineselectionMapStyle'))) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var element = this.maps.legendSelectionCollection[selectionEle['SelectionIndex']];\n                        var multiSelection = 0;\n                        if (module.enableMultiSelect) {\n                            for (var i = 0; i < shapeElement['Elements'].length; i++) {\n                                if (targetElement.getAttribute('class') === shapeElement['Elements'][i].getAttribute('class')) {\n                                    multiSelection++;\n                                }\n                            }\n                        }\n                        if (multiSelection <= 1 && (!module.enableMultiSelect ?\n                            this.maps.legendSelection : true)) {\n                            this.maps.selectedLegendElementId.splice(this.maps.selectedLegendElementId.indexOf(indexes['actualIndex']), 1);\n                            if (!isNullOrUndefined(shapeElement['LegendEle'])) {\n                                removeClass(shapeElement['LegendEle']);\n                            }\n                            this.maps.legendSelectionCollection.splice(selectionEle['SelectionIndex'], 1);\n                            this.maps.shapeSelections = true;\n                        }\n                    }\n                    else {\n                        if ((selectionEle === undefined || (selectionEle && !selectionEle['IsSelected'])) &&\n                            !isNullOrUndefined(legendShape)) {\n                            var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, legendShape);\n                            if (legendSelectionIndex === -1) {\n                                this.pushCollection(legendShape, this.maps.legendSelectionCollection, collection[indexes['actualIndex']], this.maps.layers[layerIndex].shapeSettings);\n                            }\n                        }\n                        var addId = true;\n                        for (var i = 0; i < this.maps.selectedLegendElementId.length; i++) {\n                            if (indexes['actualIndex'] === this.maps.selectedLegendElementId[i]) {\n                                addId = false;\n                            }\n                        }\n                        if (addId) {\n                            this.maps.selectedLegendElementId.push(indexes['actualIndex']);\n                        }\n                        this.maps.legendSelectionClass = module;\n                        this.removeLegend(this.shapeHighlightCollection);\n                        if (!isNullOrUndefined(legendShape)) {\n                            this.setColor(legendShape, !isNullOrUndefined(module.fill) ? module.fill : legendShape.getAttribute('fill'), module.opacity.toString(), module.border.color, module.border.width.toString(), 'selection');\n                            var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, legendShape);\n                            this.maps.legendSelectionCollection[legendSelectionIndex]['MapShapeCollection']['Elements'].push(targetElement);\n                        }\n                        this.maps.shapeSelections = false;\n                    }\n                }\n                else if (document.getElementsByClassName('highlightMapStyle').length > 0) {\n                    this.removeShapeHighlightCollection();\n                    removeClass(document.getElementsByClassName('highlightMapStyle')[0]);\n                }\n            }\n        }\n        else {\n            this.removeShapeHighlightCollection();\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.isTargetSelected = function (target, collection) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var selectEle;\n        for (var i = 0; i < collection.length; i++) {\n            if (!isNullOrUndefined(target['LegendEle'].getAttribute('id')) &&\n                (target['LegendEle'].getAttribute('id') === collection[i]['legendElement'].getAttribute('id'))) {\n                selectEle = { IsSelected: true, SelectionIndex: i };\n            }\n        }\n        return selectEle;\n    };\n    Legend.prototype.updateLegendElement = function () {\n        for (var i = 0; i < this.maps.legendSelectionCollection.length; i++) {\n            if (document.getElementById(this.maps.legendSelectionCollection[i]['legendElement'].id)) {\n                this.maps.legendSelectionCollection[i]['legendElement'] =\n                    document.getElementById(this.maps.legendSelectionCollection[i]['legendElement'].id);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.getIndexofLegend = function (targetCollection, targetElement) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var legendIndex = targetCollection.map(function (e) { return e['legendElement']; }).indexOf(targetElement);\n        return legendIndex;\n    };\n    Legend.prototype.removeAllSelections = function () {\n        for (var i = 0; i < this.maps.selectedElementId.length; i++) {\n            var selectedElement = document.getElementById(this.maps.selectedElementId[i]);\n            removeClass(selectedElement);\n        }\n        for (var j = 0; j < this.maps.selectedLegendElementId.length; j++) {\n            var idIndex = this.maps.legendSettings.mode === 'Interactive' ?\n                this.maps.element.id + '_Legend_Index_' : this.maps.element.id + '_Legend_Shape_Index_';\n            var selectedElement = idIndex + this.maps.selectedLegendElementId[j];\n            var legendElement = document.getElementById(selectedElement);\n            if (!isNullOrUndefined(legendElement)) {\n                removeClass(document.getElementById(selectedElement));\n            }\n        }\n        this.maps.legendSelectionCollection = [];\n        this.maps.selectedLegendElementId = [];\n        this.maps.selectedElementId = [];\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.legendIndexOnShape = function (data, index) {\n        var legendIndex;\n        var actualIndex;\n        var path = this.maps.layers[index].shapeDataPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var value = data[path];\n        var legendType = this.maps.legendSettings.mode;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var collection = this.maps.legendModule.legendCollection;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentCollection;\n        if (legendType === 'Default' && !isNullOrUndefined(this.maps.legendModule.totalPages)) {\n            currentCollection = this.maps.legendModule.totalPages[this.maps.legendModule.currentPage]['Collection'];\n        }\n        var currentCollectionLength = legendType === 'Default' ? currentCollection['length'] : 1;\n        for (var i = 0; i < collection.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataValue = collection[i]['data'];\n            for (var k = 0; k < currentCollectionLength; k++) {\n                if (legendType !== 'Default' || collection[i]['text'] === currentCollection[k]['DisplayText']) {\n                    for (var j = 0; j < dataValue.length; j++) {\n                        if (value === dataValue[j]['name']) {\n                            legendIndex = k;\n                        }\n                    }\n                }\n            }\n            for (var j = 0; j < dataValue.length; j++) {\n                if (value === dataValue[j]['name']) {\n                    actualIndex = i;\n                }\n            }\n        }\n        return { currentIndex: legendIndex, actualIndex: actualIndex };\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.shapeDataOnLegend = function (targetElement) {\n        var shapeIndex;\n        var layerIndex;\n        var dataIndex;\n        var pointIndex;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var collection = this.maps.legendModule.legendCollection;\n        var legend = this.maps.legendSettings;\n        for (var i = 0; i < collection.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = collection[i]['data'];\n            var process = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var elements = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentElement = { Elements: [] };\n            for (var j = 0; j < data.length; j++) {\n                var shapeElement = void 0;\n                shapeIndex = data[j]['shapeIndex'];\n                layerIndex = data[j]['layerIndex'];\n                dataIndex = data[j]['dataIndex'];\n                pointIndex = data[j]['pointIndex'];\n                if (pointIndex === -1) {\n                    shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' +\n                        layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex);\n                }\n                else {\n                    shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' +\n                        layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex + '_multiLine_' + pointIndex);\n                }\n                if (targetElement === shapeElement) {\n                    process = true;\n                }\n                elements.push(shapeElement);\n            }\n            if (process) {\n                if (isNullOrUndefined(currentElement['LegendEle'])) {\n                    currentElement['LegendEle'] = legend.mode === 'Default' ?\n                        document.getElementById(this.maps.element.id + '_Legend_Shape_Index_' + i) :\n                        document.getElementById(this.maps.element.id + '_Legend_Index_' + i);\n                }\n                currentElement['Elements'] = elements;\n                return currentElement;\n            }\n        }\n        return null;\n    };\n    Legend.prototype.shapesOfLegend = function (targetElement) {\n        var shapeIndex;\n        var layerIndex;\n        var dataIndex;\n        var pointIndex;\n        var idIndex = parseFloat(targetElement.id.charAt(targetElement.id.length - 1));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data = this.maps.legendModule.legendCollection[idIndex]['data'];\n        var legendShapeElements = [];\n        for (var i = 0; i < data.length; i++) {\n            var shapeElement = void 0;\n            shapeIndex = data[i]['shapeIndex'];\n            layerIndex = data[i]['layerIndex'];\n            dataIndex = data[i]['dataIndex'];\n            pointIndex = data[i]['pointIndex'];\n            if (pointIndex === -1) {\n                shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' +\n                    layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex);\n            }\n            else {\n                shapeElement = document.getElementById(this.maps.element.id + '_LayerIndex_' +\n                    layerIndex + '_shapeIndex_' + shapeIndex + '_dataIndex_' + dataIndex + '_multiLine_' + pointIndex);\n            }\n            if (!isNullOrUndefined(shapeElement)) {\n                legendShapeElements.push(shapeElement.id);\n            }\n        }\n        return legendShapeElements;\n    };\n    Legend.prototype.legendToggle = function () {\n        var map = this.maps;\n        var legend = map.legendSettings;\n        if (this.maps.selectedLegendElementId) {\n            // To maintain the state of legend selection during page resize.\n            for (var j = 0; j < this.maps.selectedLegendElementId.length; j++) {\n                var idIndex = legend.mode === 'Interactive' ? this.maps.element.id + '_Legend_Index_' : this.maps.element.id + '_Legend_Shape_Index_';\n                var selectedElement = map.svgObject.querySelector('#' + idIndex + this.maps.selectedLegendElementId[j]);\n                if (!isNullOrUndefined(selectedElement)) {\n                    var fill = !isNullOrUndefined(this.maps.legendSelectionClass.fill) ?\n                        this.maps.legendSelectionClass.fill : selectedElement.getAttribute('fill');\n                    this.setColor(selectedElement, fill, this.maps.legendSelectionClass.opacity.toString(), this.maps.legendSelectionClass.border.color, this.maps.legendSelectionClass.border.width.toString(), 'selection');\n                    for (var i = 0; i < this.maps.legendSelectionCollection.length; i++) {\n                        if (this.maps.legendSelectionCollection[i]['legendElement'].id === selectedElement.id) {\n                            this.maps.legendSelectionCollection[i]['legendElement'] = selectedElement;\n                        }\n                    }\n                    var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, selectedElement);\n                    if (legendSelectionIndex === -1) {\n                        var layerIndex = this.maps.legendModule.legendCollection[this.maps.selectedLegendElementId[j]]['data'][j]['layerIndex'];\n                        this.pushCollection(selectedElement, this.maps.legendSelectionCollection, this.maps.legendModule.legendCollection[this.maps.selectedLegendElementId[j]], this.maps.layers[layerIndex].shapeSettings);\n                    }\n                }\n            }\n        }\n        if (this.maps.toggledLegendId) {\n            for (var j = 0; j < this.maps.toggledLegendId.length; j++) {\n                var legendTextId = legend.mode === 'Interactive' ? ('#' + this.maps.element.id + '_Legend_Index_' + this.maps.toggledLegendId[j] + '_Text') : ('#' + this.maps.element.id + '_Legend_Text_Index_' + this.maps.toggledLegendId[j]);\n                var textElement = map.svgObject.querySelector(legendTextId);\n                if (!isNullOrUndefined(textElement)) {\n                    textElement.setAttribute('fill', '#E5E5E5');\n                }\n                var legendShapeId = legend.mode === 'Interactive' ? ('#' + this.maps.element.id + '_Legend_Index_' + this.maps.toggledLegendId[j]) : ('#' + this.maps.element.id + '_Legend_Shape_Index_' + this.maps.toggledLegendId[j]);\n                var legendElement = map.svgObject.querySelector(legendShapeId);\n                if (!isNullOrUndefined(legendElement)) {\n                    legendElement.setAttribute('fill', '#E5E5E5');\n                }\n            }\n        }\n    };\n    Legend.prototype.renderLegendBorder = function () {\n        var map = this.maps;\n        var legend = map.legendSettings;\n        var legendTitle = legend.title.text;\n        var textStyle = {\n            fontFamily: legend.titleStyle.fontFamily, fontStyle: legend.titleStyle.fontStyle,\n            fontWeight: legend.titleStyle.fontWeight, size: legend.titleStyle.size, color: legend.titleStyle.color, opacity: legend.titleStyle.opacity\n        };\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var legendBorder = {\n            color: legend.border.color, width: legend.border.width, opacity: legend.border.opacity\n        };\n        legendBorder.opacity = isNullOrUndefined(legendBorder.opacity) ? 1 : legendBorder.opacity;\n        var renderOptions = new RectOption(map.element.id + '_Legend_Border', legend.background, legendBorder, 1, this.legendBorderRect, null, null, '', '');\n        this.legendGroup.appendChild(map.renderer.drawRectangle(renderOptions));\n        this.getLegendAlignment(map, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-this.legendBorderRect.x)) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        if (legend.position !== 'Float') {\n            map.svgObject.appendChild(this.legendGroup);\n        }\n        if (legendTitle) {\n            textStyle.color = (textStyle.color !== null) ? textStyle.color : this.maps.themeStyle.legendTitleFontColor;\n            textStyle.fontFamily = !isNullOrUndefined(textStyle.fontFamily) ? textStyle.fontFamily : this.maps.themeStyle.fontFamily;\n            textOptions = new TextOption(map.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - spacing / 2, 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color, this.legendGroup);\n        }\n    };\n    Legend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.legendGroup = this.maps.renderer.createGroup({ id: this.maps.element.id + '_Legend_Group' });\n        this.maps.mapAreaRect = this.initialMapAreaRect;\n        this.drawLegendItem(this.currentPage);\n        if (!isNullOrUndefined(this.maps.legendModule) && this.maps.legendSettings.position === 'Float') {\n            if (this.maps.isTileMap) {\n                this.maps.mapLayerPanel.layerGroup.appendChild(this.maps.legendModule.legendGroup);\n            }\n            else {\n                this.maps.svgObject.appendChild(this.maps.legendModule.legendGroup);\n            }\n        }\n        if (querySelector(this.maps.element.id + '_Legend_Border', this.maps.element.id)) {\n            querySelector(this.maps.element.id + '_Legend_Border', this.maps.element.id).style.pointerEvents = 'none';\n        }\n    };\n    Legend.prototype.getLegendAlignment = function (map, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        // eslint-disable-next-line prefer-const\n        totalRect = extend({}, map.mapAreaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = map.availableSize.width;\n        var totalHeight = map.availableSize.height;\n        var locationX = !isNullOrUndefined(legend.location.x) ? legend.location.x : 0;\n        var locationY = !isNullOrUndefined(legend.location.y) ? legend.location.y : 0;\n        if (legend.position === 'Float') {\n            this.translate = map.isTileMap ? new Point(locationX, locationY + (spacing / 4)) : new Point(locationX + map.mapAreaRect.x, locationY + map.mapAreaRect.y);\n            this.legendTotalRect = map.mapAreaRect;\n        }\n        else {\n            switch (legend.position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (legend.position === 'Top') ? (areaHeight - height) : (areaHeight - height - (spacing * 2));\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (legend.position === 'Top') ? areaY : (areaY + totalRect.height);\n                    totalRect.y = (legend.position === 'Top') ? areaY + height + (map.isTileMap ? (spacing / 2) : spacing) : areaY - (spacing / 2);\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width - map.mapAreaRect.x);\n                    x = (legend.position === 'Left') ? areaX + (spacing / 2) : (areaX + totalRect.width + spacing);\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (legend.position === 'Left') ? areaX + width + spacing : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalRect.x - (legend.mode === 'Interactive' ? spacing : 0);\n                    }\n                    else {\n                        y = totalRect.y - (!(legend.height && legend.width) && legend.mode === 'Interactive' ? map.mapAreaRect.x : 0);\n                    }\n                    break;\n                case 'Far':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = (totalWidth - width) - (legend.mode === 'Interactive' ? 0 : spacing);\n                    }\n                    else {\n                        y = totalHeight - height - (legend.mode === 'Default' ? spacing : 0);\n                    }\n                    break;\n            }\n            if ((legend.height || legend.width) && legend.mode !== 'Interactive') {\n                this.legendTotalRect = map.mapAreaRect = map.totalRect = totalRect;\n            }\n            else {\n                map.totalRect = null;\n                if ((legend.height || legend.width) && legend.mode === 'Interactive') {\n                    map.totalRect = totalRect;\n                }\n                this.legendTotalRect = map.mapAreaRect = totalRect;\n            }\n            if (legend.position === 'Left') {\n                map.mapAreaRect.width = totalRect.width;\n            }\n            this.translate = new Point(x, y);\n        }\n    };\n    Legend.prototype.getMarkersLegendCollections = function (layerIndex, markers) {\n        var _this = this;\n        Array.prototype.forEach.call(markers, function (marker, markerIndex) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataSource = marker.dataSource;\n            var field = marker.legendText;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var isDuplicate;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n                var imageSrc = null;\n                var showLegend = isNullOrUndefined(data[_this.maps.legendSettings.showLegendPath]) ? true :\n                    data[_this.maps.legendSettings.showLegendPath];\n                if (marker.visible && showLegend && (!isNullOrUndefined(data['latitude'])) && (!isNullOrUndefined(data['longitude']))) {\n                    if (marker.template) {\n                        templateFn = getTemplateFunction(marker.template, _this.maps);\n                        var templateElement = templateFn(_this.maps);\n                        var markerEle = isNullOrUndefined(templateElement.childElementCount) ? templateElement[0] :\n                            templateElement;\n                        imageSrc = markerEle.querySelector('img').src;\n                    }\n                    var text = isNullOrUndefined(data[field]) ? '' : data[field];\n                    var legendFill = !isNullOrUndefined(marker.colorValuePath) ? data[marker.colorValuePath] : marker.fill;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var newData = [];\n                    if (_this.maps.legendSettings.removeDuplicateLegend) {\n                        newData.push(_this.getMarkerLegendData(layerIndex, text, legendFill));\n                        _this.getOverallLegendItemsCollection(text, legendFill, newData, showLegend);\n                    }\n                    else {\n                        newData.push({ layerIndex: layerIndex, markerIndex: markerIndex, dataIndex: dataIndex, value: legendFill, name: text,\n                            shape: (!isNullOrUndefined(marker.shapeValuePath) && !isNullOrUndefined(data[marker.shapeValuePath]) && data[marker.shapeValuePath] !== '') ? data[marker.shapeValuePath] : (_this.maps.legendSettings.useMarkerShape ? marker.shape : _this.maps.legendSettings.shape) });\n                        _this.getOverallLegendItemsCollection(text, legendFill, newData, showLegend);\n                    }\n                }\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.getMarkerLegendData = function (layerIndex, text, legendFill) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var legendData = [];\n        this.maps.layers[layerIndex].markerSettings.map(function (markerSettings, markerIndex) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var markerData = markerSettings.dataSource;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            Array.prototype.forEach.call(markerData, function (data, dataIndex) {\n                var marker = _this.maps.layers[layerIndex].markerSettings[markerIndex];\n                if ((text === data[marker.legendText] || text === '') && legendFill === data[marker.colorValuePath]) {\n                    legendData.push({ layerIndex: layerIndex, markerIndex: markerIndex, dataIndex: dataIndex, value: legendFill, name: text,\n                        shape: !isNullOrUndefined(marker.shapeValuePath) ? data[marker.shapeValuePath] : marker.shape });\n                }\n            });\n        });\n        return legendData;\n    };\n    Legend.prototype.getRangeLegendCollection = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n        var _this = this;\n        var legendText;\n        var legendIndex = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fill = this.maps.legendSettings.fill;\n        var rangeData = [];\n        var _loop_1 = function (colorMap) {\n            if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to)) {\n                legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                rangeData = [];\n                var colorMapProcess_1 = false;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n                    var colorValue = (colorValuePath.indexOf('.') > -1) ? Number(getValueFromObject(data, colorValuePath)) :\n                        parseFloat(data[colorValuePath]);\n                    if (colorValue >= colorMap.from && colorValue <= colorMap.to) {\n                        colorMapProcess_1 = true;\n                        rangeData.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, colorValue));\n                    }\n                });\n                if (!colorMapProcess_1) {\n                    rangeData.push({\n                        layerIndex: layerIndex, shapeIndex: null, dataIndex: null,\n                        name: null, value: null\n                    });\n                }\n                var legendFill = (isNullOrUndefined(fill)) ? Object.prototype.toString.call(colorMap.color) === '[object Array]' ?\n                    !isNullOrUndefined(colorMap.value) ? colorMap.color[0] : this_1.legendGradientColor(colorMap, legendIndex) :\n                    colorMap.color : fill;\n                legendIndex++;\n                this_1.getOverallLegendItemsCollection(legendText, legendFill, rangeData, colorMap.showLegend);\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n            var colorMap = colorMapping_1[_i];\n            _loop_1(colorMap);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.getOverallLegendItemsCollection = function (legendText, legendFill, legendData, showLegend) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newColllection = [];\n        var legend = this.maps.legendSettings;\n        if (legendData.length > 0 && showLegend) {\n            for (var i = 0; i < legendData.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = legendData[i];\n                if (collection.length > 0) {\n                    for (var j = 0; j < collection.length; j++) {\n                        newColllection.push(collection[j]);\n                    }\n                }\n                else {\n                    newColllection.push(legendData[i]);\n                }\n                newColllection['_isVisible'] = true;\n            }\n            var isDuplicate = this.maps.legendSettings.removeDuplicateLegend ?\n                this.removeDuplicates(this.legendCollection, legendText, legendFill) : false;\n            if (!isDuplicate) {\n                this.legendCollection.push({\n                    text: legendText, fill: legendFill, data: newColllection, opacity: legend.opacity,\n                    borderColor: legend.shapeBorder.color, borderWidth: legend.shapeBorder.width\n                });\n            }\n            else {\n                for (var i = 0; i < this.legendCollection.length; i++) {\n                    if (this.legendCollection[i]['text'] === legendText && this.legendCollection[i]['fill'] === legendFill) {\n                        this.legendCollection[i].data.push(newColllection[0]);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Legend.prototype.removeDuplicates = function (legendCollection, text, legendFill) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if ((legendCollection[i]['text'] === text || legendCollection[i]['text'] === '') && legendCollection[i]['fill'] === legendFill) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    Legend.prototype.getEqualLegendCollection = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fill = this.maps.legendSettings.fill;\n        var equalValues = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var legendText;\n        var legendIndex = 0;\n        var equalData = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var outOfRangeValues = [];\n        var outOfRange = [];\n        var _loop_2 = function (colorMap) {\n            if (!isNullOrUndefined(colorMap.value)) {\n                legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value;\n                equalData = [];\n                var eqaulColorProcess_1 = false;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n                    var equalValue = ((colorValuePath.indexOf('.') > -1) ? (getValueFromObject(data, colorValuePath)) :\n                        (data[colorValuePath]));\n                    if (equalValue === colorMap.value) {\n                        eqaulColorProcess_1 = true;\n                        if (equalValues.indexOf(equalValue) === -1) {\n                            equalValues.push(equalValue);\n                        }\n                        equalData.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, equalValue));\n                    }\n                    else {\n                        if (outOfRangeValues.indexOf(equalValue) === -1) {\n                            outOfRangeValues.push(equalValue);\n                        }\n                    }\n                });\n                for (var x = 0; x < equalValues.length; x++) {\n                    for (var y = 0; y < outOfRangeValues.length; y++) {\n                        if (equalValues[x] === outOfRangeValues[y]) {\n                            var equalIndex = outOfRangeValues.indexOf(equalValues[x]);\n                            outOfRangeValues.splice(equalIndex, 1);\n                        }\n                    }\n                }\n                if (!eqaulColorProcess_1) {\n                    equalData.push({\n                        layerIndex: layerIndex, shapeIndex: null, dataIndex: null,\n                        name: null, value: null\n                    });\n                }\n                var legendFill = (isNullOrUndefined(fill)) ? Object.prototype.toString.call(colorMap.color) === '[object Array]'\n                    ? colorMap.color[0] : colorMap.color : fill;\n                legendIndex++;\n                this_2.getOverallLegendItemsCollection(legendText, legendFill, equalData, colorMap.showLegend);\n            }\n            else if (isNullOrUndefined(colorMap.minOpacity) && isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value)\n                && isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to) && !isNullOrUndefined(colorMap.color)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n                    var equalValue = ((colorValuePath.indexOf('.') > -1) ? (getValueFromObject(data, colorValuePath)) :\n                        (data[colorValuePath]));\n                    for (var k = 0; k < outOfRangeValues.length; k++) {\n                        if (equalValue === outOfRangeValues[k]) {\n                            outOfRange.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, equalValue));\n                        }\n                    }\n                });\n                if (outOfRangeValues.length === 0) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var range_1 = false;\n                    var outRange = [];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n                        range_1 = false;\n                        var rangeValue = data[colorValuePath];\n                        for (var z = 0; z < colorMapping.length; z++) {\n                            if (!isNullOrUndefined(rangeValue) && !isNaN(rangeValue)) {\n                                if (rangeValue >= colorMapping[z].from && rangeValue <= colorMapping[z].to) {\n                                    range_1 = true;\n                                }\n                            }\n                            else if (!range_1) {\n                                range_1 = false;\n                            }\n                        }\n                        if (!range_1) {\n                            outOfRange.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, rangeValue));\n                        }\n                    });\n                }\n                legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                var outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                    ? colorMap.color[0] : colorMap.color;\n                var legendOutFill = outfill;\n                legendIndex++;\n                this_2.getOverallLegendItemsCollection(legendText, legendOutFill, outOfRange, colorMap.showLegend);\n            }\n        };\n        var this_2 = this;\n        for (var _i = 0, colorMapping_2 = colorMapping; _i < colorMapping_2.length; _i++) {\n            var colorMap = colorMapping_2[_i];\n            _loop_2(colorMap);\n        }\n    };\n    Legend.prototype.getDataLegendCollection = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layerIndex, layerData, colorMapping, dataSource, dataPath, colorValuePath, propertyPath) {\n        var _this = this;\n        var legendText;\n        var fill = this.maps.legendSettings.fill;\n        var valuePath = this.maps.legendSettings.valuePath;\n        if (!isNullOrUndefined(colorValuePath) && !isNullOrUndefined(dataSource)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            Array.prototype.forEach.call(dataSource, function (data, dataIndex) {\n                var showLegend = isNullOrUndefined(_this.maps.legendSettings.showLegendPath) ?\n                    true : isNullOrUndefined(data[_this.maps.legendSettings.showLegendPath]) ?\n                    false : data[_this.maps.legendSettings.showLegendPath];\n                var dataValue = ((colorValuePath.indexOf('.') > -1) ? (getValueFromObject(data, colorValuePath)) :\n                    (data[colorValuePath]));\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var newData = [];\n                var legendFill = (isNullOrUndefined(fill)) ? dataValue : fill;\n                if (!isNullOrUndefined(dataValue) && colorMapping.length === 0) {\n                    legendText = !isNullOrUndefined(data[valuePath]) ? ((valuePath.indexOf('.') > -1) ?\n                        getValueFromObject(data, valuePath) : data[valuePath]) : ((dataPath.indexOf('.') > -1) ?\n                        getValueFromObject(data, dataPath) : data[dataPath]);\n                    newData.push(_this.getLegendData(layerIndex, dataIndex, data, dataPath, layerData, propertyPath, dataValue));\n                }\n                _this.getOverallLegendItemsCollection(legendText, legendFill, newData, showLegend);\n            });\n        }\n    };\n    Legend.prototype.interactiveHandler = function (e) {\n        var target = e.target;\n        var legend = this.maps.legendSettings;\n        var id = this.maps.element.id + '_Interactive_Legend';\n        var hoverId = legend.type === 'Layers' ? '_shapeIndex_' : (legend.type === 'Markers') ? '_MarkerIndex_' :\n            '_BubbleIndex_';\n        if (target.id.indexOf(hoverId) > 1) {\n            var layerIndex = parseFloat(target.id.split('_LayerIndex_')[1].split('_')[0]);\n            var dataIndex = parseFloat(target.id.split(/_dataIndex_/i)[1].split('_')[0]);\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            if (!(isNullOrUndefined(querySelector(id, this.maps.element.id)))) {\n                remove(querySelector(id, this.maps.element.id));\n            }\n            var layer = this.maps.layersCollection[layerIndex];\n            var markerVisible = (legend.type === 'Layers' ? layer.visible :\n                legend.type === 'Markers' ? layer.markerSettings[parseFloat(target.id.split('_MarkerIndex_')[1].split('_')[0])].visible :\n                    (this.maps.getBubbleVisible(this.maps.layersCollection[layerIndex])));\n            if (legend.visible && this.legendRenderingCollections.length > 0\n                && legend.mode === 'Interactive' && markerVisible) {\n                var svgRect = this.maps.svgObject.getBoundingClientRect();\n                for (var i = 0; i < this.legendCollection.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var currentData = this.legendCollection[i];\n                    var legendElement = querySelector(this.maps.element.id + '_Legend_Index_' + i, this.maps.element.id);\n                    var legendRect = legendElement.getBoundingClientRect();\n                    var rect = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                    fill = legendElement.getAttribute('fill');\n                    stroke = legend.shapeBorder.color;\n                    strokeWidth = legend.shapeBorder.width;\n                    if (!isNullOrUndefined(currentData['data'])) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var data = currentData['data'];\n                        for (var j = 0; j < data.length; j++) {\n                            if (dataIndex === data[j]['dataIndex'] && layerIndex === data[j]['layerIndex']) {\n                                this.renderInteractivePointer(legend, fill, stroke, id, strokeWidth, rect);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (!(isNullOrUndefined(querySelector(id, this.maps.element.id)))) {\n                remove(querySelector(id, this.maps.element.id));\n            }\n        }\n    };\n    Legend.prototype.renderInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        rect.y = legend.position === 'Float' && this.maps.isTileMap ? rect.y - this.maps.mapAreaRect.y : rect.y;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2) - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2) - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + rect.width - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x - (legend.position === 'Float' && this.maps.isTileMap ? this.maps.mapAreaRect.x : 0);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, 1, '', path);\n        if (legend.position === 'Float' && this.maps.isTileMap) {\n            this.maps.mapLayerPanel.layerGroup.appendChild(this.maps.renderer.drawPath(pathOptions));\n        }\n        else {\n            this.maps.svgObject.appendChild(this.maps.renderer.drawPath(pathOptions));\n        }\n    };\n    Legend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    Legend.prototype.addEventListener = function () {\n        if (this.maps.isDestroyed) {\n            return;\n        }\n        this.maps.on(Browser.touchMoveEvent, this.interactiveHandler, this);\n        this.maps.on(Browser.touchEndEvent, this.interactiveHandler, this);\n        this.maps.on(click, this.legendClick, this);\n    };\n    Legend.prototype.markerToggleSelection = function (mapElement, layerIndex, markerIndex, legendIndex) {\n        mapElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n        mapElement.setAttribute('stroke', this.maps.layers[layerIndex].markerSettings[markerIndex].border.color);\n        mapElement.setAttribute('fill-opacity', (this.maps.layers[layerIndex].markerSettings[markerIndex].opacity).toString());\n        mapElement.setAttribute('stroke-width', (this.maps.layers[layerIndex].markerSettings[markerIndex].border.width).toString());\n        mapElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[layerIndex].markerSettings[markerIndex].border.opacity) ?\n            this.maps.layers[layerIndex].markerSettings[markerIndex].opacity :\n            this.maps.layers[layerIndex].markerSettings[markerIndex].border.opacity).toString());\n    };\n    Legend.prototype.bubbleToggleSelection = function (mapElement, layerIndex, bubbleIndex, legendIndex) {\n        mapElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n        mapElement.setAttribute('stroke', this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.color);\n        mapElement.setAttribute('fill-opacity', (this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].opacity).toString());\n        mapElement.setAttribute('stroke-width', (this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.width).toString());\n        mapElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.opacity) ?\n            this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].opacity :\n            this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].border.opacity).toString());\n    };\n    Legend.prototype.legendClick = function (targetEle) {\n        var legendShapeId;\n        var legendTextId;\n        var legendTextColor;\n        var legendToggleFill = this.maps.legendSettings.toggleLegendSettings.fill;\n        var legendToggleOpacity = this.maps.legendSettings.toggleLegendSettings.opacity;\n        var legendToggleBorderColor = this.maps.legendSettings.toggleLegendSettings.border.color;\n        var legendToggleBorderWidth = this.maps.legendSettings.toggleLegendSettings.border.width;\n        var legendToggleBorderOpacity = isNullOrUndefined(this.maps.legendSettings.toggleLegendSettings.border.opacity) ?\n            this.maps.legendSettings.toggleLegendSettings.opacity : this.maps.legendSettings.toggleLegendSettings.border.opacity;\n        if (targetEle.parentNode['id'].indexOf(this.maps.element.id + '_Legend_Index_') > -1) {\n            var mapElement = void 0;\n            var legendIndex = parseFloat(targetEle.parentElement.id.substr((this.maps.element.id + '_Legend_Index_').length));\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var selectedItem = this.legendCollection[legendIndex]['data'];\n            var isVisible = selectedItem['_isVisible'];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var shape = void 0;\n            if (this.maps.legendSettings.toggleLegendSettings.enable && (this.maps.legendSettings.type === 'Bubbles' || this.maps.legendSettings.type === 'Markers')) {\n                for (var k = 0; k < this.maps.layers.length; k++) {\n                    for (var j = 0; j < (this.maps.legendSettings.type === 'Bubbles' ? this.maps.layers[k].bubbleSettings.length : this.maps.layers[k].markerSettings.length); j++) {\n                        for (var i = 0; i < selectedItem.length; i++) {\n                            shape = this.legendCollection[legendIndex]['data'][i];\n                            mapElement = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] +\n                                '_BubbleIndex_' + j + '_dataIndex_' + shape['dataIndex'], this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] +\n                                '_MarkerIndex_' + shape['markerIndex'] + '_dataIndex_' + shape['dataIndex'], this.maps.element.id);\n                            if (!isNullOrUndefined(shape['shape']) && shape['shape'] === 'Balloon') {\n                                mapElement = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] +\n                                    '_BubbleIndex_' + j + '_dataIndex_' + shape['dataIndex'] + '_Group', this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] +\n                                    '_MarkerIndex_' + shape['markerIndex'] + '_dataIndex_' + shape['dataIndex'] + '_Group', this.maps.element.id);\n                                mapElement = mapElement.children[0];\n                            }\n                            if (isVisible && mapElement !== null) {\n                                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                                    mapElement.setAttribute('fill', this.maps.layers[k].shapeSettings.fill);\n                                    mapElement.setAttribute('stroke', this.maps.layers[k].shapeSettings.border.color);\n                                    mapElement.setAttribute('fill-opacity', (this.maps.layers[k].shapeSettings.opacity).toString());\n                                    mapElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                                    mapElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ?\n                                        this.maps.layers[k].shapeSettings.opacity :\n                                        this.maps.layers[k].shapeSettings.border.opacity).toString());\n                                }\n                                else {\n                                    mapElement.setAttribute('fill', legendToggleFill);\n                                    mapElement.setAttribute('fill-opacity', (legendToggleOpacity).toString());\n                                    mapElement.setAttribute('stroke', legendToggleBorderColor);\n                                    mapElement.setAttribute('stroke-width', (legendToggleBorderWidth).toString());\n                                    mapElement.setAttribute('stroke-opacity', (legendToggleBorderOpacity).toString());\n                                }\n                                if (targetEle !== null) {\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', '#E5E5E5');\n                                    if (this.maps.legendSettings.shape === 'HorizontalLine' || this.maps.legendSettings.shape === 'VerticalLine' || this.maps.legendSettings.shape === 'Cross') {\n                                        legendShapeId.setAttribute('stroke', '#E5E5E5');\n                                    }\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#E5E5E5');\n                                }\n                            }\n                            else {\n                                if (this.maps.legendSettings.type === 'Markers') {\n                                    this.markerToggleSelection(mapElement, k, j, legendIndex);\n                                }\n                                else {\n                                    this.bubbleToggleSelection(mapElement, k, j, legendIndex);\n                                }\n                                if (targetEle !== null) {\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                                    if (this.maps.legendSettings.shape === 'HorizontalLine' || this.maps.legendSettings.shape === 'VerticalLine' || this.maps.legendSettings.shape === 'Cross') {\n                                        legendShapeId.setAttribute('stroke', this.legendCollection[legendIndex]['fill']);\n                                    }\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#757575');\n                                }\n                            }\n                        }\n                        selectedItem['_isVisible'] = isVisible ? false : true;\n                    }\n                }\n            }\n            if (this.maps.legendSettings.type === 'Layers' && this.maps.legendSettings.toggleLegendSettings.enable) {\n                var layerElement = void 0;\n                this.removeCollections(targetEle, legendIndex);\n                var toggledLegendIdIndex = this.maps.toggledLegendId.indexOf(legendIndex);\n                if (toggledLegendIdIndex !== -1) {\n                    isVisible = false;\n                }\n                for (var j = 0; j < this.maps.layers.length; j++) {\n                    for (var i = 0; i < selectedItem.length; i++) {\n                        shape = this.legendCollection[legendIndex]['data'][i];\n                        layerElement = querySelector(this.maps.element.id + '_LayerIndex_' + shape['layerIndex'] +\n                            '_shapeIndex_' + shape['shapeIndex'] + '_dataIndex_' + shape['dataIndex'], this.maps.element.id);\n                        if (layerElement !== null) {\n                            var toggledShapeIdIndex = this.maps.toggledShapeElementId.indexOf(layerElement.id);\n                            if (isVisible) {\n                                if (i === 0) {\n                                    this.maps.toggledLegendId.push(legendIndex);\n                                }\n                                if (toggledShapeIdIndex === -1) {\n                                    this.maps.toggledShapeElementId.push(layerElement.id);\n                                }\n                                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                                    layerElement.setAttribute('fill', this.maps.layers[j].shapeSettings.fill);\n                                    layerElement.setAttribute('fill-opacity', (this.maps.layers[j].shapeSettings.opacity).toString());\n                                    layerElement.setAttribute('stroke', this.maps.layers[j].shapeSettings.border.color);\n                                    layerElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.width) ? 0 : this.maps.layers[j].shapeSettings.border.width).toString());\n                                    layerElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.opacity) ?\n                                        this.maps.layers[j].shapeSettings.opacity :\n                                        this.maps.layers[j].shapeSettings.border.opacity).toString());\n                                }\n                                else {\n                                    layerElement.setAttribute('fill', legendToggleFill);\n                                    layerElement.setAttribute('fill-opacity', (legendToggleOpacity).toString());\n                                    layerElement.setAttribute('stroke', legendToggleBorderColor);\n                                    layerElement.setAttribute('stroke-width', (legendToggleBorderWidth).toString());\n                                    layerElement.setAttribute('stroke-opacity', (legendToggleBorderOpacity).toString());\n                                }\n                                if (targetEle !== null) {\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#E5E5E5');\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', '#E5E5E5');\n                                }\n                            }\n                            else {\n                                if (toggledLegendIdIndex !== -1 && i === 0) {\n                                    this.maps.toggledLegendId.splice(toggledLegendIdIndex, 1);\n                                }\n                                if (toggledShapeIdIndex !== -1) {\n                                    this.maps.toggledShapeElementId.splice(toggledShapeIdIndex, 1);\n                                }\n                                layerElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                                layerElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.opacity) ?\n                                    this.maps.layers[j].shapeSettings.opacity :\n                                    this.maps.layers[j].shapeSettings.border.opacity).toString());\n                                layerElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[j].shapeSettings.border.width) ? 0 : this.maps.layers[j].shapeSettings.border.width).toString());\n                                layerElement.setAttribute('fill-opacity', (this.maps.layers[j].shapeSettings.opacity).toString());\n                                layerElement.setAttribute('stroke', this.maps.layers[j].shapeSettings.border.color);\n                                if (targetEle !== null) {\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Text_Index_' + legendIndex, this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#757575');\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Shape_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                                }\n                            }\n                        }\n                    }\n                }\n                selectedItem['_isVisible'] = isVisible ? false : true;\n            }\n        }\n        else if (!isNullOrUndefined(targetEle.id) && (targetEle.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 ||\n            targetEle.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1) && this.maps.legendSettings.visible &&\n            targetEle.id.indexOf('_Text') === -1) {\n            var LegendInteractive = void 0;\n            var legendIndex = parseFloat(targetEle.id.split(this.maps.element.id + '_Legend_Index_')[1]);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mapdata = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var selectedItem = this.legendCollection[legendIndex]['data'];\n            var isVisible = selectedItem['_isVisible'];\n            if ((this.maps.legendSettings.type === 'Bubbles' || this.maps.legendSettings.type === 'Markers') && this.maps.legendSettings.toggleLegendSettings.enable) {\n                for (var k = 0; k < this.maps.layers.length; k++) {\n                    for (var j = 0; j < (this.maps.legendSettings.type === 'Bubbles' ? this.maps.layers[k].bubbleSettings.length : this.maps.layers[k].markerSettings.length); j++) {\n                        for (var i = 0; i < selectedItem.length; i++) {\n                            mapdata = this.legendCollection[legendIndex]['data'][i];\n                            LegendInteractive = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] +\n                                '_BubbleIndex_' + j + '_dataIndex_' + mapdata['dataIndex'], this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] +\n                                '_MarkerIndex_' + j + '_dataIndex_' + mapdata['dataIndex'], this.maps.element.id);\n                            if (!isNullOrUndefined(mapdata['shape']) && mapdata['shape'] === 'Balloon') {\n                                LegendInteractive = this.maps.legendSettings.type === 'Bubbles' ? querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] +\n                                    '_BubbleIndex_' + j + '_dataIndex_' + mapdata['dataIndex'] + '_Group', this.maps.element.id) : querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] +\n                                    '_MarkerIndex_' + j + '_dataIndex_' + mapdata['dataIndex'] + '_Group', this.maps.element.id);\n                                LegendInteractive = LegendInteractive.children[0];\n                            }\n                            if (isVisible && LegendInteractive !== null) {\n                                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                                    LegendInteractive.setAttribute('fill', this.maps.layers[k].shapeSettings.fill);\n                                    LegendInteractive.setAttribute('stroke', this.maps.layers[k].shapeSettings.border.color);\n                                    LegendInteractive.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                                    LegendInteractive.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ?\n                                        this.maps.layers[k].shapeSettings.opacity :\n                                        this.maps.layers[k].shapeSettings.border.opacity).toString());\n                                    LegendInteractive.setAttribute('fill-opacity', (this.maps.layers[k].shapeSettings.opacity).toString());\n                                }\n                                else {\n                                    LegendInteractive.setAttribute('fill', legendToggleFill);\n                                    LegendInteractive.setAttribute('fill-opacity', (legendToggleOpacity).toString());\n                                    LegendInteractive.setAttribute('stroke', legendToggleBorderColor);\n                                    LegendInteractive.setAttribute('stroke-width', (legendToggleBorderWidth).toString());\n                                    LegendInteractive.setAttribute('stroke-opacity', (legendToggleBorderOpacity).toString());\n                                }\n                                if (targetEle !== null) {\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#E5E5E5');\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', '#E5E5E5');\n                                }\n                            }\n                            else {\n                                if (this.maps.legendSettings.type === 'Markers') {\n                                    this.markerToggleSelection(LegendInteractive, k, j, legendIndex);\n                                }\n                                else {\n                                    this.bubbleToggleSelection(LegendInteractive, k, j, legendIndex);\n                                }\n                                if (targetEle !== null) {\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#757575');\n                                }\n                            }\n                        }\n                        selectedItem['_isVisible'] = isVisible ? false : true;\n                    }\n                }\n            }\n            if (this.maps.legendSettings.type === 'Layers' && this.maps.legendSettings.toggleLegendSettings.enable) {\n                var mapLegendElement = void 0;\n                this.removeCollections(targetEle, legendIndex);\n                var toggleLegendIdIndex = this.maps.toggledLegendId.indexOf(legendIndex);\n                if (toggleLegendIdIndex !== -1) {\n                    isVisible = false;\n                }\n                for (var k = 0; k < this.maps.layers.length; k++) {\n                    for (var i = 0; i < selectedItem.length; i++) {\n                        mapdata = this.legendCollection[legendIndex]['data'][i];\n                        mapLegendElement = querySelector(this.maps.element.id + '_LayerIndex_' + mapdata['layerIndex'] +\n                            '_shapeIndex_' + mapdata['shapeIndex'] + '_dataIndex_' + mapdata['dataIndex'], this.maps.element.id);\n                        if (mapLegendElement !== null) {\n                            var toggledShapeIdIndex = this.maps.toggledShapeElementId.indexOf(mapLegendElement.id);\n                            if (isVisible) {\n                                if (i === 0) {\n                                    this.maps.toggledLegendId.push(legendIndex);\n                                }\n                                if (toggledShapeIdIndex === -1) {\n                                    this.maps.toggledShapeElementId.push(mapLegendElement.id);\n                                }\n                                if (this.maps.legendSettings.toggleLegendSettings.applyShapeSettings) {\n                                    mapLegendElement.setAttribute('fill', this.maps.layers[0].shapeSettings.fill);\n                                    mapLegendElement.setAttribute('stroke', this.maps.layers[0].shapeSettings.border.color);\n                                    mapLegendElement.setAttribute('fill-opacity', (this.maps.layers[k].shapeSettings.opacity).toString());\n                                    mapLegendElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                                    mapLegendElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ?\n                                        this.maps.layers[k].shapeSettings.opacity :\n                                        this.maps.layers[k].shapeSettings.border.opacity).toString());\n                                }\n                                else {\n                                    mapLegendElement.setAttribute('fill', legendToggleFill);\n                                    mapLegendElement.setAttribute('fill-opacity', (legendToggleOpacity).toString());\n                                    mapLegendElement.setAttribute('stroke', legendToggleBorderColor);\n                                    mapLegendElement.setAttribute('stroke-width', (legendToggleBorderWidth).toString());\n                                    mapLegendElement.setAttribute('stroke-opacity', (legendToggleBorderOpacity).toString());\n                                }\n                                if (targetEle !== null) {\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', '#E5E5E5');\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#E5E5E5');\n                                }\n                            }\n                            else {\n                                if (toggleLegendIdIndex !== -1 && i === 0) {\n                                    this.maps.toggledLegendId.splice(toggleLegendIdIndex, 1);\n                                }\n                                if (toggledShapeIdIndex !== -1) {\n                                    this.maps.toggledShapeElementId.splice(toggledShapeIdIndex, 1);\n                                }\n                                mapLegendElement.setAttribute('fill-opacity', (this.maps.layers[k].shapeSettings.opacity).toString());\n                                mapLegendElement.setAttribute('stroke-width', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.width) ? 0 : this.maps.layers[k].shapeSettings.border.width).toString());\n                                mapLegendElement.setAttribute('stroke', this.maps.layers[0].shapeSettings.border.color);\n                                mapLegendElement.setAttribute('stroke-opacity', (isNullOrUndefined(this.maps.layers[k].shapeSettings.border.opacity) ?\n                                    this.maps.layers[k].shapeSettings.opacity : this.maps.layers[k].shapeSettings.border.opacity).toString());\n                                mapLegendElement.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                                if (targetEle !== null) {\n                                    legendTextId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex + '_Text', this.maps.element.id);\n                                    legendTextId.setAttribute('fill', '#757575');\n                                    legendShapeId = querySelector(this.maps.element.id + '_Legend_Index_' + legendIndex, this.maps.element.id);\n                                    legendShapeId.setAttribute('fill', this.legendCollection[legendIndex]['fill']);\n                                }\n                            }\n                        }\n                    }\n                }\n                selectedItem['_isVisible'] = isVisible ? false : true;\n            }\n        }\n    };\n    Legend.prototype.removeCollections = function (targetEle, legendIndex) {\n        this.removeLegendSelectionCollection(targetEle);\n        var legendSelectionIndex = this.getIndexofLegend(this.maps.legendSelectionCollection, targetEle);\n        if (legendSelectionIndex !== -1) {\n            this.maps.legendSelectionCollection.splice(legendSelectionIndex, 1);\n        }\n        var legendHighlightIndex = this.getIndexofLegend(this.legendHighlightCollection, targetEle);\n        if (legendHighlightIndex !== -1) {\n            this.legendHighlightCollection.splice(legendSelectionIndex, 1);\n        }\n        var shapeHighlightIndex = this.getIndexofLegend(this.shapeHighlightCollection, targetEle);\n        if (shapeHighlightIndex !== -1) {\n            this.shapeHighlightCollection.splice(shapeHighlightIndex, 1);\n        }\n        var selectedIndex = this.maps.selectedLegendElementId.indexOf(legendIndex);\n        if (selectedIndex !== -1) {\n            this.maps.selectedLegendElementId.splice(selectedIndex, 1);\n        }\n    };\n    Legend.prototype.removeEventListener = function () {\n        if (this.maps.isDestroyed) {\n            return;\n        }\n        this.maps.off(Browser.touchMoveEvent, this.interactiveHandler);\n        this.maps.off(Browser.touchEndEvent, this.interactiveHandler);\n        this.maps.off(click, this.legendClick);\n    };\n    Legend.prototype.getLegendData = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layerIndex, dataIndex, data, dataPath, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layerData, shapePropertyPath, value\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var legendData = [];\n        if (Object.prototype.toString.call(layerData) === '[object Array]') {\n            for (var i = 0; i < layerData.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var shapeData = layerData[i];\n                var dataPathValue = (dataPath.indexOf('.') > -1) ? getValueFromObject(data, dataPath) : data[dataPath];\n                var shapePath = checkPropertyPath(data[dataPath], shapePropertyPath, shapeData['properties']);\n                var dataPathValueCase = !isNullOrUndefined(dataPathValue) &&\n                    typeof dataPathValue === 'string' ? dataPathValue.toLowerCase() : dataPathValue;\n                var shapeDataValueCase = !isNullOrUndefined(shapeData['properties'][shapePath])\n                    && isNaN(shapeData['properties'][shapePath]) ?\n                    shapeData['properties'][shapePath].toLowerCase() : shapeData['properties'][shapePath];\n                if (shapeDataValueCase === dataPathValueCase) {\n                    if (shapeData['geometry']['type'] != 'MultiPoint') {\n                        legendData.push({\n                            layerIndex: layerIndex, shapeIndex: i, dataIndex: dataIndex,\n                            name: data[dataPath], value: value, pointIndex: -1\n                        });\n                    }\n                    else {\n                        for (var j = 0; j < shapeData['geometry'].coordinates.length; j++) {\n                            legendData.push({\n                                layerIndex: layerIndex, shapeIndex: i, dataIndex: dataIndex,\n                                name: data[dataPath], value: value, pointIndex: j\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return legendData;\n    };\n    Legend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && typeof (colorMap.color) === 'object') {\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.maps.legendSettings.position;\n            var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex + '_' + this.maps.element.id);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + '_' + this.maps.element.id + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.translate = null;\n        this.legendBorderRect = null;\n        this.initialMapAreaRect = null;\n        this.legendTotalRect = null;\n        this.totalPages = [];\n        this.legendItemRect = null;\n        this.legendGroup = null;\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.shapePreviousColor = [];\n        this.selectedNonLegendShapes = [];\n        this.legendLinearGradient = null;\n        this.currentLayer = null;\n        this.defsElement = null;\n        this.legendElement = [];\n        this.oldShapeElement = null;\n        this.removeEventListener();\n        this.maps = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}