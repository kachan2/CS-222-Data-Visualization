{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */function (_super) {\n  __extends(PdfPageCountField, _super);\n  function PdfPageCountField(font, arg2) {\n    var _this = _super.call(this) || this;\n    // Fields\n    /**\n     * Stores the number style of the field.\n     * @private\n     */\n    _this.internalNumberStyle = PdfNumberStyle.Numeric;\n    if (typeof arg2 === 'undefined') {\n      _this.font = font;\n    } else if (arg2 instanceof PdfBrush) {\n      _this.font = font;\n      _this.brush = arg2;\n    } else {\n      _this.font = font;\n      _this.bounds = arg2;\n    }\n    return _this;\n  }\n  Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n    // Properties\n    /**\n     * Gets and sets the number style of the field.\n     * @public\n     */\n    get: function () {\n      return this.internalNumberStyle;\n    },\n    set: function (value) {\n      this.internalNumberStyle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // Implementation\n  /**\n   * Return the actual value of the content to drawn.\n   * @public\n   */\n  PdfPageCountField.prototype.getValue = function (graphics) {\n    var result = null;\n    var page = this.getPageFromGraphics(graphics);\n    var document = page.section.parent.document;\n    var count = document.pages.count;\n    result = PdfNumbersConvertor.convert(count, this.numberStyle);\n    return result;\n  };\n  return PdfPageCountField;\n}(PdfSingleValueField);\nexport { PdfPageCountField };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfSingleValueField","PdfNumberStyle","PdfBrush","PdfNumbersConvertor","PdfPageCountField","_super","font","arg2","_this","call","internalNumberStyle","Numeric","brush","bounds","defineProperty","get","set","value","enumerable","configurable","getValue","graphics","result","page","getPageFromGraphics","document","section","parent","count","pages","convert","numberStyle"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/page-count-field.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ;AACA;AACA;AACA,SAASI,mBAAmB,QAAQ,sBAAsB;AAC1D,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,QAAQ,QAAQ,oCAAoC;AAC7D,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,aAAe,UAAUC,MAAM,EAAE;EACrDnB,SAAS,CAACkB,iBAAiB,EAAEC,MAAM,CAAC;EACpC,SAASD,iBAAiB,CAACE,IAAI,EAAEC,IAAI,EAAE;IACnC,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrC;IACA;AACR;AACA;AACA;IACQD,KAAK,CAACE,mBAAmB,GAAGT,cAAc,CAACU,OAAO;IAClD,IAAI,OAAOJ,IAAI,KAAK,WAAW,EAAE;MAC7BC,KAAK,CAACF,IAAI,GAAGA,IAAI;IACrB,CAAC,MACI,IAAIC,IAAI,YAAYL,QAAQ,EAAE;MAC/BM,KAAK,CAACF,IAAI,GAAGA,IAAI;MACjBE,KAAK,CAACI,KAAK,GAAGL,IAAI;IACtB,CAAC,MACI;MACDC,KAAK,CAACF,IAAI,GAAGA,IAAI;MACjBE,KAAK,CAACK,MAAM,GAAGN,IAAI;IACvB;IACA,OAAOC,KAAK;EAChB;EACAlB,MAAM,CAACwB,cAAc,CAACV,iBAAiB,CAACN,SAAS,EAAE,aAAa,EAAE;IAC9D;IACA;AACR;AACA;AACA;IACQiB,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACL,mBAAmB;IACnC,CAAC;IACDM,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAACP,mBAAmB,GAAGO,KAAK;IACpC,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;EACA;AACJ;AACA;AACA;EACIf,iBAAiB,CAACN,SAAS,CAACsB,QAAQ,GAAG,UAAUC,QAAQ,EAAE;IACvD,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIC,IAAI,GAAG,IAAI,CAACC,mBAAmB,CAACH,QAAQ,CAAC;IAC7C,IAAII,QAAQ,GAAGF,IAAI,CAACG,OAAO,CAACC,MAAM,CAACF,QAAQ;IAC3C,IAAIG,KAAK,GAAGH,QAAQ,CAACI,KAAK,CAACD,KAAK;IAChCN,MAAM,GAAGnB,mBAAmB,CAAC2B,OAAO,CAACF,KAAK,EAAE,IAAI,CAACG,WAAW,CAAC;IAC7D,OAAOT,MAAM;EACjB,CAAC;EACD,OAAOlB,iBAAiB;AAC5B,CAAC,CAACJ,mBAAmB,CAAE;AACvB,SAASI,iBAAiB"},"metadata":{},"sourceType":"module"}