{"ast":null,"code":"/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */function () {\n  //constructors\n  /**\n   * Initializes a new instance of the `UnitConvertor` class with DPI value.\n   * @private\n   */\n  function PdfUnitConverter(dpi) {\n    this.updateProportionsHelper(dpi);\n  }\n  /**\n   * `Converts` the value, from one graphics unit to another graphics unit.\n   * @private\n   */\n  PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n    return this.convertFromPixels(this.convertToPixels(value, from), to);\n  };\n  /**\n   * Converts the value `to pixel` from specified graphics unit.\n   * @private\n   */\n  PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n    var index = from;\n    var result = value * this.proportions[index];\n    return result;\n  };\n  /**\n   * Converts value, to specified graphics unit `from Pixel`.\n   * @private\n   */\n  PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n    var index = to;\n    var result = value / this.proportions[index];\n    return result;\n  };\n  /**\n   * `Update proportions` matrix according to Graphics settings.\n   * @private\n   */\n  PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n    this.proportions = [pixelPerInch / 2.54, pixelPerInch / 6.0, 1, pixelPerInch / 72.0, pixelPerInch, pixelPerInch / 300.0, pixelPerInch / 25.4 // Millimeter\n    ];\n  };\n  //Fields\n  /**\n   * Indicates default `horizontal resolution`.\n   * @default 96\n   * @private\n   */\n  PdfUnitConverter.horizontalResolution = 96;\n  /**\n   * Indicates default `vertical resolution`.\n   * @default 96\n   * @private\n   */\n  PdfUnitConverter.verticalResolution = 96;\n  return PdfUnitConverter;\n}();\nexport { PdfUnitConverter };","map":{"version":3,"names":["PdfUnitConverter","dpi","updateProportionsHelper","prototype","convertUnits","value","from","to","convertFromPixels","convertToPixels","index","result","proportions","pixelPerInch","horizontalResolution","verticalResolution"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/unit-convertor.js"],"sourcesContent":["/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,gBAAgB,GAAG,aAAe,YAAY;EAC9C;EACA;AACJ;AACA;AACA;EACI,SAASA,gBAAgB,CAACC,GAAG,EAAE;IAC3B,IAAI,CAACC,uBAAuB,CAACD,GAAG,CAAC;EACrC;EACA;AACJ;AACA;AACA;EACID,gBAAgB,CAACG,SAAS,CAACC,YAAY,GAAG,UAAUC,KAAK,EAAEC,IAAI,EAAEC,EAAE,EAAE;IACjE,OAAO,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACC,eAAe,CAACJ,KAAK,EAAEC,IAAI,CAAC,EAAEC,EAAE,CAAC;EACxE,CAAC;EACD;AACJ;AACA;AACA;EACIP,gBAAgB,CAACG,SAAS,CAACM,eAAe,GAAG,UAAUJ,KAAK,EAAEC,IAAI,EAAE;IAChE,IAAII,KAAK,GAAGJ,IAAI;IAChB,IAAIK,MAAM,GAAIN,KAAK,GAAG,IAAI,CAACO,WAAW,CAACF,KAAK,CAAE;IAC9C,OAAOC,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;EACIX,gBAAgB,CAACG,SAAS,CAACK,iBAAiB,GAAG,UAAUH,KAAK,EAAEE,EAAE,EAAE;IAChE,IAAIG,KAAK,GAAGH,EAAE;IACd,IAAII,MAAM,GAAIN,KAAK,GAAG,IAAI,CAACO,WAAW,CAACF,KAAK,CAAE;IAC9C,OAAOC,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;EACIX,gBAAgB,CAACG,SAAS,CAACD,uBAAuB,GAAG,UAAUW,YAAY,EAAE;IACzE,IAAI,CAACD,WAAW,GAAG,CACfC,YAAY,GAAG,IAAI,EACnBA,YAAY,GAAG,GAAG,EAClB,CAAC,EACDA,YAAY,GAAG,IAAI,EACnBA,YAAY,EACZA,YAAY,GAAG,KAAK,EACpBA,YAAY,GAAG,IAAI,CAAC;IAAA,CACvB;EACL,CAAC;EACD;EACA;AACJ;AACA;AACA;AACA;EACIb,gBAAgB,CAACc,oBAAoB,GAAG,EAAE;EAC1C;AACJ;AACA;AACA;AACA;EACId,gBAAgB,CAACe,kBAAkB,GAAG,EAAE;EACxC,OAAOf,gBAAgB;AAC3B,CAAC,EAAG;AACJ,SAASA,gBAAgB"},"metadata":{},"sourceType":"module"}