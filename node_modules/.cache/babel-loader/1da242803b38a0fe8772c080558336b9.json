{"ast":null,"code":"import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */function () {\n  function PdfAnnotationCollection(page) {\n    // Constants\n    /**\n     * `Error` constant message.\n     * @private\n     */\n    this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n    /**\n     * `Error` constant message.\n     * @private\n     */\n    this.missingAnnotationException = 'Annotation is not contained in collection.';\n    /**\n     * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n     * @private\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\n     * Array of the `annotations`.\n     * @private\n     */\n    this.internalAnnotations = new PdfArray();\n    /**\n     * privte `list` for the annotations.\n     * @private\n     */\n    this.lists = [];\n    if (typeof page !== 'undefined') {\n      this.page = page;\n    }\n  }\n  Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n    /**\n     * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n     * @private\n     */\n    get: function () {\n      return this.internalAnnotations;\n    },\n    set: function (value) {\n      this.internalAnnotations = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // Public methods\n  /**\n   * `Adds` a new annotation to the collection.\n   * @private\n   */\n  PdfAnnotationCollection.prototype.add = function (annotation) {\n    // this.SetPrint(annotation);\n    this.doAdd(annotation);\n  };\n  /**\n   * `Adds` a Annotation to collection.\n   * @private\n   */\n  /* tslint:disable */\n  PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n    if (typeof annotation.destination !== 'undefined') {\n      var layout = new PdfStringLayouter();\n      var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF(annotation.bounds.width, 0), false, new SizeF(0, 0));\n      var lastPosition = annotation.bounds.y;\n      if (layoutResult.lines.length === 1) {\n        var size = annotation.font.measureString(layoutResult.lines[0].text);\n        annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n        annotation.text = layoutResult.lines[0].text;\n        //Draw Annotation Text.\n        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n        //Add annotation to dictionary.\n        annotation.setPage(this.page);\n        this.setColor(annotation);\n        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n        this.lists.push(annotation);\n      } else {\n        for (var i = 0; i < layoutResult.lines.length; i++) {\n          var size = annotation.font.measureString(layoutResult.lines[i].text);\n          if (i === 0) {\n            annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n            annotation.text = layoutResult.lines[i].text;\n            //Draw Annotation Text.\n            this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n            //Add annotation to dictionary.\n            annotation.setPage(this.page);\n            this.setColor(annotation);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            this.lists.push(annotation);\n            //Update y for drawing next line of the text.\n            lastPosition += annotation.bounds.height;\n          } else {\n            var annot = annotation.clone();\n            annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n            annot.text = layoutResult.lines[i].text;\n            //Draw Annotation Text.\n            this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n            //Add annotation to dictionary.\n            annot.setPage(this.page);\n            this.setColor(annot);\n            this.internalAnnotations.add(new PdfReferenceHolder(annot));\n            this.lists.push(annot);\n            //Update y for drawing next line of the text.\n            lastPosition += annot.bounds.height;\n          }\n        }\n      }\n    } else {\n      annotation.setPage(this.page);\n      this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n      return this.lists.push(annotation);\n    }\n  };\n  /* tslint:enable */\n  /**\n   * `Set a color of an annotation`.\n   * @private\n   */\n  PdfAnnotationCollection.prototype.setColor = function (annotation) {\n    var cs = PdfColorSpace.Rgb;\n    var colours = annotation.color.toArray(cs);\n    annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n  };\n  Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n    // IPdfWrapper Members\n    /**\n     * Gets the `Element` representing this object.\n     * @private\n     */\n    get: function () {\n      return this.internalAnnotations;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotationCollection;\n}();\nexport { PdfAnnotationCollection };","map":{"version":3,"names":["PdfArray","PdfReferenceHolder","DictionaryProperties","SizeF","RectangleF","PointF","PdfStringLayouter","PdfColorSpace","PdfAnnotationCollection","page","alreadyExistsAnnotationError","missingAnnotationException","dictionaryProperties","internalAnnotations","lists","Object","defineProperty","prototype","get","set","value","enumerable","configurable","add","annotation","doAdd","destination","layout","layoutResult","text","font","stringFormat","bounds","width","lastPosition","y","lines","length","size","measureString","x","graphics","drawString","brush","height","setPage","setColor","push","i","annot","clone","cs","Rgb","colours","color","toArray","dictionary","items","setValue","c"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation-collection.js"],"sourcesContent":["import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}