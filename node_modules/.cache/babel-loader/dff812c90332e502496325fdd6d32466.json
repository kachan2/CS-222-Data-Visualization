{"ast":null,"code":"import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\nfunction getObject(instance, curKey, defaultValue, type) {\n  // eslint-disable-next-line\n  if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n    instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n  }\n  return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n  var result = [];\n  var len = defaultValue ? defaultValue.length : 0;\n  for (var i = 0; i < len; i++) {\n    var curType = type;\n    if (isFactory) {\n      curType = type(defaultValue[i], instance);\n    }\n    if (isSetter) {\n      var inst = createInstance(curType, [instance, curKey, {}, true]);\n      inst.setProperties(defaultValue[i], true);\n      result.push(inst);\n    } else {\n      result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n    }\n  }\n  return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertyGetter(defaultValue, curKey) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      this.properties[curKey] = defaultValue;\n    }\n    return this.properties[curKey];\n  };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertySetter(defaultValue, curKey) {\n  return function (newValue) {\n    if (this.properties[curKey] !== newValue) {\n      // eslint-disable-next-line\n      var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n      this.saveChanges(curKey, newValue, oldVal);\n      this.properties[curKey] = newValue;\n    }\n  };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexGetter(defaultValue, curKey, type) {\n  return function () {\n    return getObject(this, curKey, defaultValue, type);\n  };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexSetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    getObject(this, curKey, defaultValue, type).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({});\n    // eslint-disable-next-line\n    if (this.properties.hasOwnProperty(curKey)) {\n      return this.properties[curKey];\n    } else {\n      return getObject(this, curKey, defaultValue, curType);\n    }\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    var curType = type(newValue, this);\n    getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayGetter(defaultValue, curKey, type) {\n  return function () {\n    var _this = this;\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n      this.properties[curKey] = defCollection;\n    }\n    var ignore = this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch || this.ignoreCollectionWatch;\n    // eslint-disable-next-line\n    if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n      ['push', 'pop'].forEach(function (extendFunc) {\n        var descriptor = {\n          value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[curKey]).bind(_this),\n          configurable: true\n        };\n        Object.defineProperty(_this.properties[curKey], extendFunc, descriptor);\n      });\n    }\n    // eslint-disable-next-line\n    if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n      Object.defineProperty(this.properties[curKey], 'isComplexArray', {\n        value: true\n      });\n    }\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArraySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    this.isComplexArraySetter = true;\n    var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n    this.isComplexArraySetter = false;\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    // eslint-disable-next-line\n    var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({});\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n      this.properties[curKey] = defCollection;\n    }\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n  /* tslint:disable no-function-expression */\n  return function () {\n    var newValue = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newValue[_i] = arguments[_i];\n    }\n    var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n    switch (dFunc) {\n      case 'push':\n        for (var i = 0; i < newValue.length; i++) {\n          Array.prototype[dFunc].apply(prop, [newValue[i]]);\n          var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n          this.serverDataBind(model_1, newValue[i], false, dFunc);\n        }\n        break;\n      case 'pop':\n        Array.prototype[dFunc].apply(prop);\n        // eslint-disable-next-line\n        var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n        this.serverDataBind(model, {\n          ejsAction: 'pop'\n        }, false, dFunc);\n        break;\n    }\n    return prop;\n  };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n  var modelObject = keyString;\n  if (isControlParent) {\n    modelObject = {};\n    modelObject[keyString] = value;\n    if (value && typeof value === 'object') {\n      var action = 'ejsAction';\n      modelObject[keyString][action] = arrayFunction;\n    }\n  }\n  return modelObject;\n}\n// eslint-disable-next-line\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Property(defaultValue) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: propertySetter(defaultValue, key),\n      get: propertyGetter(defaultValue, key),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'prop', defaultValue);\n  };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Complex(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexSetter(defaultValue, key, type),\n      get: complexGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\nexport function ComplexFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexFactorySetter({}, key, type),\n      get: complexFactoryGetter({}, key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', {}, type);\n  };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Collection(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArraySetter(defaultValue, key, type),\n      get: complexArrayGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function CollectionFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArrayFactorySetter([], key, type),\n      get: complexArrayFactoryGetter([], key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', {}, type);\n  };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\nexport function Event() {\n  return function (target, key) {\n    var eventDescriptor = {\n      set: function (newValue) {\n        var oldValue = this.properties[key];\n        if (oldValue !== newValue) {\n          var finalContext = getParentContext(this, key);\n          if (isUndefined(oldValue) === false) {\n            finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n          }\n          finalContext.context.addEventListener(finalContext.prefix, newValue);\n          this.properties[key] = newValue;\n        }\n      },\n      get: propertyGetter(undefined, key),\n      enumerable: true,\n      configurable: true\n    };\n    Object.defineProperty(target, key, eventDescriptor);\n    addPropertyCollection(target, key, 'event');\n  };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\nexport function NotifyPropertyChanges(classConstructor) {\n  /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n  if (isUndefined(target.propList)) {\n    target.propList = {\n      props: [],\n      complexProps: [],\n      colProps: [],\n      events: [],\n      propNames: [],\n      complexPropNames: [],\n      colPropNames: [],\n      eventNames: []\n    };\n  }\n  // eslint-disable-next-line\n  target.propList[propertyType + 's'].push({\n    propertyName: key,\n    defaultValue: defaultValue,\n    type: type\n  });\n  // eslint-disable-next-line\n  target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\nfunction getBuilderProperties(component) {\n  if (isUndefined(component.prototype.builderObject)) {\n    component.prototype.builderObject = {\n      properties: {},\n      propCollections: [],\n      add: function () {\n        this.isPropertyArray = true;\n        this.propCollections.push(extend({}, this.properties, {}));\n      }\n    };\n    var rex = /complex/;\n    for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var _loop_1 = function (prop) {\n        if (rex.test(key)) {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            var childType = {};\n            merge(childType, getBuilderProperties(prop.type));\n            value(childType);\n            var tempValue;\n            if (!childType.isPropertyArray) {\n              tempValue = extend({}, childType.properties, {});\n            } else {\n              tempValue = childType.propCollections;\n            }\n            this.properties[prop.propertyName] = tempValue;\n            childType.properties = {};\n            childType.propCollections = [];\n            childType.isPropertyArray = false;\n            return this;\n          };\n        } else {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            this.properties[prop.propertyName] = value;\n            return this;\n          };\n        }\n      };\n      for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {\n        var prop = _c[_b];\n        _loop_1(prop);\n      }\n    }\n  }\n  return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\nexport function CreateBuilder(component) {\n  var builderFunction = function (element) {\n    this.element = element;\n    return this;\n  };\n  var instanceFunction = function (element) {\n    // eslint-disable-next-line\n    if (!builderFunction.prototype.hasOwnProperty('create')) {\n      builderFunction.prototype = getBuilderProperties(component);\n      builderFunction.prototype.create = function () {\n        var temp = extend({}, {}, this.properties);\n        this.properties = {};\n        return new component(temp, this.element);\n      };\n    }\n    return new builderFunction(element);\n  };\n  return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\nfunction getParentContext(context, prefix) {\n  // eslint-disable-next-line\n  if (context.hasOwnProperty('parentObj') === false) {\n    return {\n      context: context,\n      prefix: prefix\n    };\n  } else {\n    var curText = getValue('propName', context);\n    if (curText) {\n      prefix = curText + '-' + prefix;\n    }\n    return getParentContext(getValue('parentObj', context), prefix);\n  }\n}","map":{"version":3,"names":["createInstance","isUndefined","merge","extend","getValue","getObject","instance","curKey","defaultValue","type","properties","hasOwnProperty","getObjectArray","isSetter","isFactory","result","len","length","i","curType","inst","setProperties","push","propertyGetter","propertySetter","newValue","oldVal","saveChanges","complexGetter","complexSetter","complexFactoryGetter","complexFactorySetter","complexArrayGetter","_this","defCollection","ignore","controlParent","undefined","ignoreCollectionWatch","forEach","extendFunc","descriptor","value","complexArrayDefinedCallback","bind","configurable","Object","defineProperty","complexArraySetter","isComplexArraySetter","oldValueCollection","newValCollection","complexArrayFactorySetter","complexArrayFactoryGetter","dFunc","prop","_i","arguments","keyString","propName","getParentKey","Array","prototype","apply","model_1","getArrayModel","serverDataBind","model","ejsAction","isControlParent","arrayFunction","modelObject","action","Property","target","key","propertyDescriptor","set","get","enumerable","addPropertyCollection","Complex","ComplexFactory","Collection","CollectionFactory","Event","eventDescriptor","oldValue","finalContext","getParentContext","context","removeEventListener","prefix","addEventListener","NotifyPropertyChanges","classConstructor","propertyType","propList","props","complexProps","colProps","events","propNames","complexPropNames","colPropNames","eventNames","propertyName","getBuilderProperties","component","builderObject","propCollections","add","isPropertyArray","rex","_a","keys","_loop_1","test","childType","tempValue","_b","_c","CreateBuilder","builderFunction","element","instanceFunction","create","temp","curText"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-base/src/notify-property-change.js"],"sourcesContent":["import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\nfunction getObject(instance, curKey, defaultValue, type) {\n    // eslint-disable-next-line\n    if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n        instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n    }\n    return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n    var result = [];\n    var len = defaultValue ? defaultValue.length : 0;\n    for (var i = 0; i < len; i++) {\n        var curType = type;\n        if (isFactory) {\n            curType = type(defaultValue[i], instance);\n        }\n        if (isSetter) {\n            var inst = createInstance(curType, [instance, curKey, {}, true]);\n            inst.setProperties(defaultValue[i], true);\n            result.push(inst);\n        }\n        else {\n            result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n        }\n    }\n    return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertyGetter(defaultValue, curKey) {\n    return function () {\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            this.properties[curKey] = defaultValue;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertySetter(defaultValue, curKey) {\n    return function (newValue) {\n        if (this.properties[curKey] !== newValue) {\n            // eslint-disable-next-line\n            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n            this.saveChanges(curKey, newValue, oldVal);\n            this.properties[curKey] = newValue;\n        }\n    };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexGetter(defaultValue, curKey, type) {\n    return function () {\n        return getObject(this, curKey, defaultValue, type);\n    };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexSetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        getObject(this, curKey, defaultValue, type).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        // eslint-disable-next-line\n        if (this.properties.hasOwnProperty(curKey)) {\n            return this.properties[curKey];\n        }\n        else {\n            return getObject(this, curKey, defaultValue, curType);\n        }\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        var curType = type(newValue, this);\n        getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayGetter(defaultValue, curKey, type) {\n    return function () {\n        var _this = this;\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n            this.properties[curKey] = defCollection;\n        }\n        var ignore = ((this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch)\n            || this.ignoreCollectionWatch);\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n            ['push', 'pop'].forEach(function (extendFunc) {\n                var descriptor = {\n                    value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[curKey]).bind(_this),\n                    configurable: true\n                };\n                Object.defineProperty(_this.properties[curKey], extendFunc, descriptor);\n            });\n        }\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n            Object.defineProperty(this.properties[curKey], 'isComplexArray', { value: true });\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArraySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        this.isComplexArraySetter = true;\n        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n        this.isComplexArraySetter = false;\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        // eslint-disable-next-line\n        var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n            this.properties[curKey] = defCollection;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n    /* tslint:disable no-function-expression */\n    return function () {\n        var newValue = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newValue[_i] = arguments[_i];\n        }\n        var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n        switch (dFunc) {\n            case 'push':\n                for (var i = 0; i < newValue.length; i++) {\n                    Array.prototype[dFunc].apply(prop, [newValue[i]]);\n                    var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n                    this.serverDataBind(model_1, newValue[i], false, dFunc);\n                }\n                break;\n            case 'pop':\n                Array.prototype[dFunc].apply(prop);\n                // eslint-disable-next-line\n                var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n                this.serverDataBind(model, { ejsAction: 'pop' }, false, dFunc);\n                break;\n        }\n        return prop;\n    };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n    var modelObject = keyString;\n    if (isControlParent) {\n        modelObject = {};\n        modelObject[keyString] = value;\n        if (value && typeof value === 'object') {\n            var action = 'ejsAction';\n            modelObject[keyString][action] = arrayFunction;\n        }\n    }\n    return modelObject;\n}\n// eslint-disable-next-line\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Property(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: propertySetter(defaultValue, key),\n            get: propertyGetter(defaultValue, key),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'prop', defaultValue);\n    };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Complex(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexSetter(defaultValue, key, type),\n            get: complexGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\nexport function ComplexFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexFactorySetter({}, key, type),\n            get: complexFactoryGetter({}, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', {}, type);\n    };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Collection(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArraySetter(defaultValue, key, type),\n            get: complexArrayGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function CollectionFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArrayFactorySetter([], key, type),\n            get: complexArrayFactoryGetter([], key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', {}, type);\n    };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\nexport function Event() {\n    return function (target, key) {\n        var eventDescriptor = {\n            set: function (newValue) {\n                var oldValue = this.properties[key];\n                if (oldValue !== newValue) {\n                    var finalContext = getParentContext(this, key);\n                    if (isUndefined(oldValue) === false) {\n                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n                    }\n                    finalContext.context.addEventListener(finalContext.prefix, newValue);\n                    this.properties[key] = newValue;\n                }\n            },\n            get: propertyGetter(undefined, key),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, eventDescriptor);\n        addPropertyCollection(target, key, 'event');\n    };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\nexport function NotifyPropertyChanges(classConstructor) {\n    /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n    if (isUndefined(target.propList)) {\n        target.propList = {\n            props: [],\n            complexProps: [],\n            colProps: [],\n            events: [],\n            propNames: [],\n            complexPropNames: [],\n            colPropNames: [],\n            eventNames: []\n        };\n    }\n    // eslint-disable-next-line\n    target.propList[propertyType + 's'].push({\n        propertyName: key,\n        defaultValue: defaultValue,\n        type: type\n    });\n    // eslint-disable-next-line\n    target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\nfunction getBuilderProperties(component) {\n    if (isUndefined(component.prototype.builderObject)) {\n        component.prototype.builderObject = {\n            properties: {}, propCollections: [], add: function () {\n                this.isPropertyArray = true;\n                this.propCollections.push(extend({}, this.properties, {}));\n            }\n        };\n        var rex = /complex/;\n        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var _loop_1 = function (prop) {\n                if (rex.test(key)) {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        var childType = {};\n                        merge(childType, getBuilderProperties(prop.type));\n                        value(childType);\n                        var tempValue;\n                        if (!childType.isPropertyArray) {\n                            tempValue = extend({}, childType.properties, {});\n                        }\n                        else {\n                            tempValue = childType.propCollections;\n                        }\n                        this.properties[prop.propertyName] = tempValue;\n                        childType.properties = {};\n                        childType.propCollections = [];\n                        childType.isPropertyArray = false;\n                        return this;\n                    };\n                }\n                else {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        this.properties[prop.propertyName] = value;\n                        return this;\n                    };\n                }\n            };\n            for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {\n                var prop = _c[_b];\n                _loop_1(prop);\n            }\n        }\n    }\n    return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\nexport function CreateBuilder(component) {\n    var builderFunction = function (element) {\n        this.element = element;\n        return this;\n    };\n    var instanceFunction = function (element) {\n        // eslint-disable-next-line\n        if (!builderFunction.prototype.hasOwnProperty('create')) {\n            builderFunction.prototype = getBuilderProperties(component);\n            builderFunction.prototype.create = function () {\n                var temp = extend({}, {}, this.properties);\n                this.properties = {};\n                return new component(temp, this.element);\n            };\n        }\n        return new builderFunction(element);\n    };\n    return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\nfunction getParentContext(context, prefix) {\n    // eslint-disable-next-line\n    if (context.hasOwnProperty('parentObj') === false) {\n        return { context: context, prefix: prefix };\n    }\n    else {\n        var curText = getValue('propName', context);\n        if (curText) {\n            prefix = curText + '-' + prefix;\n        }\n        return getParentContext(getValue('parentObj', context), prefix);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}