{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */function (_super) {\n  __extends(PdfTextElement, _super);\n  function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n    var _this = _super.call(this) || this;\n    // Fields\n    /**\n     * `Text` data.\n     * @private\n     */\n    _this.content = '';\n    /**\n     * `Value` of text data.\n     * @private\n     */\n    _this.elementValue = '';\n    /**\n     * indicate whether the drawText with PointF overload is called or not.\n     * @default false\n     * @private\n     */\n    _this.hasPointOverload = false;\n    /**\n     * indicate whether the PdfGridCell value is `PdfTextElement`\n     * @default false\n     * @private\n     */\n    _this.isPdfTextElement = false;\n    if (typeof arg1 === 'undefined') {\n      //\n    } else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n    } else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n    } else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n      _this.pdfPen = arg3;\n    } else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n      _this.pdfBrush = arg3;\n    } else {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n      _this.pdfPen = arg3;\n      _this.pdfBrush = arg4;\n      _this.format = arg5;\n    }\n    return _this;\n  }\n  Object.defineProperty(PdfTextElement.prototype, \"text\", {\n    // Properties\n    /**\n     * Gets or sets a value indicating the `text` that should be printed.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // create the font\n     * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n     * // create the Text Web Link\n     * let textLink : PdfTextWebLink = new PdfTextWebLink();\n     * // set the hyperlink\n     * textLink.url = 'http://www.google.com';\n     * //\n     * // set the link text\n     * textLink.text = 'Google';\n     * //\n     * // set the font\n     * textLink.font = font;\n     * // draw the hyperlink in PDF page\n     * textLink.draw(page1, new PointF(10, 40));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this.content;\n    },\n    set: function (value) {\n      this.elementValue = value;\n      this.content = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"value\", {\n    //get value\n    /**\n     * Gets or sets a `value` indicating the text that should be printed.\n     * @private\n     */\n    get: function () {\n      return this.elementValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n    //get pen\n    /**\n     * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n     * @private\n     */\n    get: function () {\n      return this.pdfPen;\n    },\n    //Set pen value\n    set: function (value) {\n      this.pdfPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n    //get brush\n    /**\n     * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n     * @private\n     */\n    get: function () {\n      return this.pdfBrush;\n    },\n    //Set brush value\n    set: function (value) {\n      this.pdfBrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"font\", {\n    //get font\n    /**\n     * Gets or sets a `PdfFont` that defines the text format.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // create the font\n     * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n     * // create the Text Web Link\n     * let textLink : PdfTextWebLink = new PdfTextWebLink();\n     * // set the hyperlink\n     * textLink.url = 'http://www.google.com';\n     * // set the link text\n     * textLink.text = 'Google';\n     * //\n     * // set the font\n     * textLink.font = font;\n     * //\n     * // draw the hyperlink in PDF page\n     * textLink.draw(page1, new PointF(10, 40));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this.pdfFont;\n    },\n    set: function (value) {\n      this.pdfFont = value;\n      if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n        this.elementValue = PdfStandardFont.convert(this.content);\n      } else {\n        this.elementValue = this.content;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n    /**\n     * Gets or sets the `PdfStringFormat` that will be used to set the string format\n     * @private\n     */\n    get: function () {\n      return this.format;\n    },\n    set: function (value) {\n      this.format = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // Implementation\n  /**\n   * Gets a `brush` for drawing.\n   * @private\n   */\n  PdfTextElement.prototype.getBrush = function () {\n    return this.pdfBrush == null || typeof this.pdfBrush === 'undefined' ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n  };\n  // /**\n  //  * `Draws` an element on the Graphics.\n  //  * @private\n  //  */\n  // public drawInternal(graphics : PdfGraphics) : void {\n  //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n  // }\n  /**\n   * `Layouts` the element.\n   * @private\n   */\n  PdfTextElement.prototype.layout = function (param) {\n    var layouter = new TextLayouter(this);\n    var result = layouter.layout(param);\n    return result;\n  };\n  PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n    if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n      this.hasPointOverload = true;\n      return this.drawText(arg2, arg3.x, arg3.y);\n    } else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n      this.hasPointOverload = true;\n      return this.drawText(arg2, arg3, arg4, null);\n    } else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n      return this.drawText(arg2, arg3, null);\n    } else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n      this.hasPointOverload = true;\n      return this.drawText(arg2, arg3.x, arg3.y, arg4);\n    } else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n      this.hasPointOverload = true;\n      var width = arg2.graphics.clientSize.width - arg3;\n      var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n      return this.drawText(arg2, layoutRectangle, arg5);\n    } else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n      return this.drawText(arg2, arg3, null);\n    } else {\n      var layout = new PdfStringLayouter();\n      if (this.hasPointOverload) {\n        var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.graphics.clientSize.width - arg3.x, 0), true, arg2.graphics.clientSize);\n        var layoutResult = void 0;\n        var param = new PdfLayoutParams();\n        var temparg3 = arg3;\n        var temparg4 = arg4;\n        param.page = arg2;\n        var previousPage = arg2;\n        param.bounds = temparg3;\n        param.format = temparg4 != null ? temparg4 : new PdfLayoutFormat();\n        if (stringLayoutResult.lines.length > 1) {\n          this.text = stringLayoutResult.layoutLines[0].text;\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n            layoutResult = this.layout(param);\n            var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n            var isPaginate = false;\n            for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n              param.page = layoutResult.page;\n              param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n              this.text = stringLayoutResult.layoutLines[i].text;\n              if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                isPaginate = true;\n                param.page = param.page.graphics.getNextPage();\n                if (previousPosition.y > layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height) {\n                  bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                } else {\n                  bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                }\n                param.bounds = bounds;\n              }\n              layoutResult = this.layout(param);\n              if (i !== stringLayoutResult.lines.length - 1) {\n                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n              } else {\n                var lineWidth = this.font.measureString(this.text, this.format).width;\n                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n              }\n            }\n          }\n          return layoutResult;\n        } else {\n          var lineSize = this.font.measureString(this.text, this.format);\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            layoutResult = this.layout(param);\n            layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n          }\n          return layoutResult;\n        }\n      } else {\n        var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n        var result = void 0;\n        var param = new PdfLayoutParams();\n        var temparg3 = arg3;\n        var temparg4 = arg4;\n        param.page = arg2;\n        param.bounds = temparg3;\n        param.format = temparg4 != null ? temparg4 : new PdfLayoutFormat();\n        if (layoutResult.lines.length > 1) {\n          this.text = layoutResult.layoutLines[0].text;\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n            result = this.layout(param);\n            var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n            var isPaginate = false;\n            for (var i = 1; i < layoutResult.lines.length; i++) {\n              param.page = result.page;\n              param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n              this.text = layoutResult.layoutLines[i].text;\n              if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                isPaginate = true;\n                param.page = param.page.graphics.getNextPage();\n                if (previousPosition.y > result.page.graphics.clientSize.height - result.bounds.height) {\n                  bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                } else {\n                  bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                }\n                param.bounds = bounds;\n              }\n              result = this.layout(param);\n              if (i !== layoutResult.lines.length - 1) {\n                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n              } else {\n                var lineWidth = this.font.measureString(this.text, this.format).width;\n                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n              }\n            }\n          }\n          return result;\n        } else {\n          var lineSize = this.font.measureString(this.text, this.format);\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            result = this.layout(param);\n            result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n          }\n          return result;\n        }\n      }\n    }\n  };\n  PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n    var shift = 0;\n    if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n      result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n      result.bounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n      result.bounds.x = startPosition + (maximumWidth - lineWidth);\n      result.bounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n      result.bounds.x = startPosition;\n      result.bounds.width = maximumWidth;\n    } else {\n      result.bounds.width = startPosition;\n      result.bounds.width = lineWidth;\n    }\n    return result;\n  };\n  return PdfTextElement;\n}(PdfLayoutElement);\nexport { PdfTextElement };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfLayoutElement","PdfBrush","PdfFont","PdfStandardFont","PdfPen","PdfLayoutParams","TextLayouter","PdfSolidBrush","PdfColor","RectangleF","SizeF","PointF","PdfLayoutFormat","PdfStringLayouter","PdfTextAlignment","PdfTextElement","_super","arg1","arg2","arg3","arg4","arg5","_this","call","content","elementValue","hasPointOverload","isPdfTextElement","pdfFont","pdfPen","pdfBrush","format","defineProperty","get","set","value","enumerable","configurable","convert","getBrush","layout","param","layouter","result","drawText","width","x","y","graphics","clientSize","layoutRectangle","stringLayoutResult","font","stringFormat","layoutResult","temparg3","temparg4","page","previousPage","bounds","lines","length","text","layoutLines","height","previousPosition","lineHeight","isPaginate","i","getNextPage","lineWidth","measureString","calculateResultBounds","lineSize","maximumWidth","startPosition","shift","alignment","Center","Right","Justify"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/text-element.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}