{"ast":null,"code":"/**\n * Template Engine\n */\nvar LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nvar QUOTES = new RegExp(/'|\"/g);\nvar IF_STMT = new RegExp('if ?\\\\(');\nvar ELSEIF_STMT = new RegExp('else if ?\\\\(');\nvar ELSE_STMT = new RegExp('else');\nvar FOR_STMT = new RegExp('for ?\\\\(');\nvar IF_OR_FOR = new RegExp('(/if|/for)');\nvar CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nvar NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nvar WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nvar DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nvar WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nvar exp = new RegExp('\\\\${([^}]*)}', 'g');\n// let cachedTemplate: Object = {};\nvar ARR_OBJ = /^\\..*/gm;\nvar SINGLE_SLASH = /\\\\/gi;\nvar DOUBLE_SLASH = /\\\\\\\\/gi;\nvar WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nvar WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\nexport function expression(value) {\n  if (value) {\n    exp = value;\n  }\n  return exp;\n}\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n/**\n * Compile the template string into template function.\n *\n * @param {string} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\nexport function compile(template, helper, ignorePrefix) {\n  var argName = 'data';\n  var evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n  var condtion = \"var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-\\u25A0\\\\s]+)['])/g);\\n    var hrefRegex = (/(?:href)([\\\\s='\\\"./]+)([\\\\w-./?=&\\\\\\\\#\\\"]+)((.)([\\\\w)(!-;/?-\\u25A0\\\\s]+)['])/g);\\n    if(str.match(valueRegEx)){\\n        var check = str.match(valueRegEx);\\n        var str1 = str;\\n        for (var i=0; i < check.length; i++) {\\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n            str1 = str1.replace(check1, change);\\n        }\\n        str = str.replace(str, str1);\\n    }\\n    else if (str.match(/(?:href='')/) === null) {\\n        if(str.match(hrefRegex)) {\\n            var check = str.match(hrefRegex);\\n            var str1 = str;\\n            for (var i=0; i < check.length; i++) {\\n                var check1 = str.match(hrefRegex)[i].split('href=')[1];\\n                if (check1) {\\n                    var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n                    change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n                    str1 = str1.replace(check1, change);\\n                }\\n            }\\n            str = str.replace(str, str1);\\n        }\\n    }\\n    \";\n  var fnCode = \"var str=\\\"\" + evalExpResult + \"\\\";\" + condtion + \" return str;\";\n  var fn = new Function(argName, fnCode);\n  return fn.bind(helper);\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n  var varCOunt = 0;\n  /**\n   * Variable containing Local Keys\n   */\n  var localKeys = [];\n  var isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n  var singleSpace = '';\n  if (isClass) {\n    isClass.forEach(function (value) {\n      singleSpace = value.replace(/\\s\\s+/g, ' ');\n      str = str.replace(value, singleSpace);\n    });\n  }\n  return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp,\n  // eslint-disable-next-line\n  function (match, cnt, offset, matchStr) {\n    var SPECIAL_CHAR = /@|#|\\$/gm;\n    var matches = cnt.match(CALL_FUNCTION);\n    // matches to detect any function calls\n    if (matches) {\n      var rlStr = matches[1];\n      if (ELSEIF_STMT.test(cnt)) {\n        //handling else-if condition\n        cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {\n          str = str.trim();\n          return addNameSpace(str, !QUOTES.test(str) && localKeys.indexOf(str) === -1, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (IF_STMT.test(cnt)) {\n        //handling if condition\n        cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, function (strs) {\n          return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (FOR_STMT.test(cnt)) {\n        //handling for condition\n        var rlStr_1 = matches[1].split(' of ');\n        // replace for each into actual JavaScript\n        // eslint-disable-next-line\n        cnt = '\"; ' + cnt.replace(matches[1], function (mtc) {\n          localKeys.push(rlStr_1[0]);\n          localKeys.push(rlStr_1[0] + 'Index');\n          varCOunt = varCOunt + 1;\n          // tslint:disable-next-line\n          return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n        }) + '{ \\n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '[i' + varCOunt + ']; \\n var ' + rlStr_1[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n      } else {\n        //helper function handling\n        var fnStr = cnt.split('(');\n        // eslint-disable-next-line\n        var fNameSpace = helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global';\n        fNameSpace = /\\./.test(fnStr[0]) ? '' : fNameSpace;\n        var ftArray = matches[1].split(',');\n        if (matches[1].length !== 0 && !/data/.test(ftArray[0]) && !/window./.test(ftArray[0])) {\n          matches[1] = fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1];\n        }\n        var splRegexp = /@|\\$|#/gm;\n        var arrObj = /\\]\\./gm;\n        if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n          var splArrRegexp = /@|\\$|#|\\]\\./gm;\n          if (splArrRegexp.test(cnt)) {\n            // tslint:disable-next-line\n            cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, function (strs) {\n              return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n            })) + '+ \"';\n          }\n        } else {\n          cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), fNameSpace === 'global' ? false : true, nameSpace, localKeys, ignorePrefix)) + '+\"';\n        }\n      }\n    } else if (ELSE_STMT.test(cnt)) {\n      // handling else condition\n      cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"');\n      // eslint-disable-next-line\n    } else if (!!cnt.match(IF_OR_FOR)) {\n      // close condition\n      cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n    } else if (SPECIAL_CHAR.test(cnt)) {\n      // template string with double slash with special character\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n      }\n      cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n    } else {\n      // template string with double slash\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n        cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n      } else {\n        // evaluate normal expression\n        cnt = '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), localKeys.indexOf(cnt) === -1, nameSpace, localKeys, ignorePrefix) + '+\"';\n      }\n    }\n    return cnt;\n  });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix ? nameSpace + '.' + str : str;\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n  var arrObjReg = /^\\..*/gm;\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !arrObjReg.test(str) ? nameSpace + '.' + str : str;\n}\n// // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 ? nameSpace + '[\"' + str : str;\n}\n// eslint-disable-next-line\nfunction SlashReplace(tempStr) {\n  var double = '\\\\\\\\';\n  if (tempStr.match(DOUBLE_SLASH)) {\n    // eslint-disable-next-line\n    tempStr = tempStr;\n  } else {\n    tempStr = tempStr.replace(SINGLE_SLASH, double);\n  }\n  return tempStr;\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n  str = str.trim();\n  var windowFunc = /\\window\\./gm;\n  if (!windowFunc.test(str)) {\n    var quotes = /'|\"/gm;\n    var splRegexp = /@|\\$|#/gm;\n    if (splRegexp.test(str)) {\n      str = NameSpaceForspecialChar(str, keys.indexOf(str) === -1, nameSpaceNew, keys) + '\"]';\n    }\n    if (ARR_OBJ.test(str)) {\n      return NameSpaceArrObj(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys);\n    } else {\n      return addNameSpace(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys, ignorePrefix);\n    }\n  } else {\n    return str;\n  }\n}","map":{"version":3,"names":["LINES","RegExp","QUOTES","IF_STMT","ELSEIF_STMT","ELSE_STMT","FOR_STMT","IF_OR_FOR","CALL_FUNCTION","NOT_NUMBER","WORD","DBL_QUOTED_STR","WORDIF","exp","ARR_OBJ","SINGLE_SLASH","DOUBLE_SLASH","WORDFUNC","WINDOWFUNC","expression","value","compile","template","helper","ignorePrefix","argName","evalExpResult","evalExp","condtion","fnCode","fn","Function","bind","str","nameSpace","varCOunt","localKeys","isClass","match","singleSpace","forEach","replace","cnt","offset","matchStr","SPECIAL_CHAR","matches","rlStr","test","trim","addNameSpace","indexOf","strs","HandleSpecialCharArrObj","rlStr_1","split","mtc","push","fnStr","fNameSpace","hasOwnProperty","ftArray","length","splRegexp","arrObj","splArrRegexp","SlashReplace","NameSpaceForspecialChar","addNS","ignoreList","NameSpaceArrObj","arrObjReg","tempStr","double","nameSpaceNew","keys","windowFunc","quotes"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-base/src/template.js"],"sourcesContent":["/**\n * Template Engine\n */\nvar LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nvar QUOTES = new RegExp(/'|\"/g);\nvar IF_STMT = new RegExp('if ?\\\\(');\nvar ELSEIF_STMT = new RegExp('else if ?\\\\(');\nvar ELSE_STMT = new RegExp('else');\nvar FOR_STMT = new RegExp('for ?\\\\(');\nvar IF_OR_FOR = new RegExp('(/if|/for)');\nvar CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nvar NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nvar WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nvar DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nvar WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nvar exp = new RegExp('\\\\${([^}]*)}', 'g');\n// let cachedTemplate: Object = {};\nvar ARR_OBJ = /^\\..*/gm;\nvar SINGLE_SLASH = /\\\\/gi;\nvar DOUBLE_SLASH = /\\\\\\\\/gi;\nvar WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nvar WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\nexport function expression(value) {\n    if (value) {\n        exp = value;\n    }\n    return exp;\n}\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n/**\n * Compile the template string into template function.\n *\n * @param {string} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\nexport function compile(template, helper, ignorePrefix) {\n    var argName = 'data';\n    var evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n    var condtion = \"var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-\\u25A0\\\\s]+)['])/g);\\n    var hrefRegex = (/(?:href)([\\\\s='\\\"./]+)([\\\\w-./?=&\\\\\\\\#\\\"]+)((.)([\\\\w)(!-;/?-\\u25A0\\\\s]+)['])/g);\\n    if(str.match(valueRegEx)){\\n        var check = str.match(valueRegEx);\\n        var str1 = str;\\n        for (var i=0; i < check.length; i++) {\\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n            str1 = str1.replace(check1, change);\\n        }\\n        str = str.replace(str, str1);\\n    }\\n    else if (str.match(/(?:href='')/) === null) {\\n        if(str.match(hrefRegex)) {\\n            var check = str.match(hrefRegex);\\n            var str1 = str;\\n            for (var i=0; i < check.length; i++) {\\n                var check1 = str.match(hrefRegex)[i].split('href=')[1];\\n                if (check1) {\\n                    var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n                    change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n                    str1 = str1.replace(check1, change);\\n                }\\n            }\\n            str = str.replace(str, str1);\\n        }\\n    }\\n    \";\n    var fnCode = \"var str=\\\"\" + evalExpResult + \"\\\";\" + condtion + \" return str;\";\n    var fn = new Function(argName, fnCode);\n    return fn.bind(helper);\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n    var varCOunt = 0;\n    /**\n     * Variable containing Local Keys\n     */\n    var localKeys = [];\n    var isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n    var singleSpace = '';\n    if (isClass) {\n        isClass.forEach(function (value) {\n            singleSpace = value.replace(/\\s\\s+/g, ' ');\n            str = str.replace(value, singleSpace);\n        });\n    }\n    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, \n    // eslint-disable-next-line\n    function (match, cnt, offset, matchStr) {\n        var SPECIAL_CHAR = /@|#|\\$/gm;\n        var matches = cnt.match(CALL_FUNCTION);\n        // matches to detect any function calls\n        if (matches) {\n            var rlStr = matches[1];\n            if (ELSEIF_STMT.test(cnt)) {\n                //handling else-if condition\n                cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {\n                    str = str.trim();\n                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (IF_STMT.test(cnt)) {\n                //handling if condition\n                cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, function (strs) {\n                    return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (FOR_STMT.test(cnt)) {\n                //handling for condition\n                var rlStr_1 = matches[1].split(' of ');\n                // replace for each into actual JavaScript\n                // eslint-disable-next-line\n                cnt = '\"; ' + cnt.replace(matches[1], function (mtc) {\n                    localKeys.push(rlStr_1[0]);\n                    localKeys.push(rlStr_1[0] + 'Index');\n                    varCOunt = varCOunt + 1;\n                    // tslint:disable-next-line\n                    return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n                }) + '{ \\n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix)\n                    + '[i' + varCOunt + ']; \\n var ' + rlStr_1[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n            }\n            else {\n                //helper function handling\n                var fnStr = cnt.split('(');\n                // eslint-disable-next-line\n                var fNameSpace = (helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global');\n                fNameSpace = (/\\./.test(fnStr[0]) ? '' : fNameSpace);\n                var ftArray = matches[1].split(',');\n                if (matches[1].length !== 0 && !(/data/).test(ftArray[0]) && !(/window./).test(ftArray[0])) {\n                    matches[1] = (fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1]);\n                }\n                var splRegexp = /@|\\$|#/gm;\n                var arrObj = /\\]\\./gm;\n                if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n                    var splArrRegexp = /@|\\$|#|\\]\\./gm;\n                    if (splArrRegexp.test(cnt)) {\n                        // tslint:disable-next-line\n                        cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, function (strs) {\n                            return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                        })) + '+ \"';\n                    }\n                }\n                else {\n                    cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +\n                        cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys, ignorePrefix)) +\n                        '+\"';\n                }\n            }\n        }\n        else if (ELSE_STMT.test(cnt)) {\n            // handling else condition\n            cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"');\n            // eslint-disable-next-line\n        }\n        else if (!!cnt.match(IF_OR_FOR)) {\n            // close condition\n            cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n        }\n        else if (SPECIAL_CHAR.test(cnt)) {\n            // template string with double slash with special character\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n            }\n            cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n        }\n        else {\n            // template string with double slash\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n                cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n            }\n            else {\n                // evaluate normal expression\n                cnt = '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), (localKeys.indexOf(cnt) === -1), nameSpace, localKeys, ignorePrefix) + '+\"';\n            }\n        }\n        return cnt;\n    });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix) ? nameSpace + '.' + str : str);\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n    var arrObjReg = /^\\..*/gm;\n    return ((addNS && !(NOT_NUMBER.test(str)) &&\n        ignoreList.indexOf(str.split('.')[0]) === -1 && !(arrObjReg.test(str))) ? nameSpace + '.' + str : str);\n}\n// // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '[\"' + str : str);\n}\n// eslint-disable-next-line\nfunction SlashReplace(tempStr) {\n    var double = '\\\\\\\\';\n    if (tempStr.match(DOUBLE_SLASH)) {\n        // eslint-disable-next-line\n        tempStr = tempStr;\n    }\n    else {\n        tempStr = tempStr.replace(SINGLE_SLASH, double);\n    }\n    return tempStr;\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n    str = str.trim();\n    var windowFunc = /\\window\\./gm;\n    if (!windowFunc.test(str)) {\n        var quotes = /'|\"/gm;\n        var splRegexp = /@|\\$|#/gm;\n        if (splRegexp.test(str)) {\n            str = NameSpaceForspecialChar(str, (keys.indexOf(str) === -1), nameSpaceNew, keys) + '\"]';\n        }\n        if (ARR_OBJ.test(str)) {\n            return NameSpaceArrObj(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys);\n        }\n        else {\n            return addNameSpace(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys, ignorePrefix);\n        }\n    }\n    else {\n        return str;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}