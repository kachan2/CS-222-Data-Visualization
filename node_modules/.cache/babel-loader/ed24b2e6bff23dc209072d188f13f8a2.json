{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */function () {\n  function PdfGridStyleBase() {}\n  Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n    // Properties\n    /**\n     * Gets or sets the `background brush`.\n     * @private\n     */\n    get: function () {\n      return this.gridBackgroundBrush;\n    },\n    set: function (value) {\n      this.gridBackgroundBrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n    /**\n     * Gets or sets the `text brush`.\n     * @private\n     */\n    get: function () {\n      return this.gridTextBrush;\n    },\n    set: function (value) {\n      this.gridTextBrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n    /**\n     * Gets or sets the `text pen`.\n     * @private\n     */\n    get: function () {\n      return this.gridTextPen;\n    },\n    set: function (value) {\n      this.gridTextPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n    /**\n     * Gets or sets the `font`.\n     * @private\n     */\n    get: function () {\n      return this.gridFont;\n    },\n    set: function (value) {\n      this.gridFont = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n    /**\n     * Gets or sets the `background Image`.\n     * @private\n     */\n    get: function () {\n      return this.gridBackgroundImage;\n    },\n    set: function (value) {\n      this.gridBackgroundImage = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfGridStyleBase;\n}();\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */function (_super) {\n  __extends(PdfGridStyle, _super);\n  //constructor\n  /**\n   * Initialize a new instance for `PdfGridStyle` class.\n   * @private\n   */\n  function PdfGridStyle() {\n    var _this = _super.call(this) || this;\n    _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n    _this.bAllowHorizontalOverflow = false;\n    _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n    return _this;\n  }\n  Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n    //Properties\n    /**\n     * Gets or sets the `cell spacing` of the 'PdfGrid'.\n     * @private\n     */\n    get: function () {\n      if (typeof this.gridCellSpacing === 'undefined') {\n        this.gridCellSpacing = 0;\n      }\n      return this.gridCellSpacing;\n    },\n    set: function (value) {\n      this.gridCellSpacing = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n    /**\n     * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n     * @private\n     */\n    get: function () {\n      return this.gridHorizontalOverflowType;\n    },\n    set: function (value) {\n      this.gridHorizontalOverflowType = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n    /**\n     * Gets or sets a value indicating whether to `allow horizontal overflow`.\n     * @private\n     */\n    get: function () {\n      return this.bAllowHorizontalOverflow;\n    },\n    set: function (value) {\n      this.bAllowHorizontalOverflow = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n    /**\n     * Gets or sets the `cell padding`.\n     * @private\n     */\n    get: function () {\n      if (typeof this.gridCellPadding === 'undefined') {\n        this.gridCellPadding = new PdfPaddings();\n      }\n      return this.gridCellPadding;\n    },\n    set: function (value) {\n      if (typeof this.gridCellPadding === 'undefined') {\n        this.gridCellPadding = new PdfPaddings();\n        this.gridCellPadding = value;\n      } else {\n        this.gridCellPadding = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n    /**\n     * Gets or sets the `border overlap style` of the 'PdfGrid'.\n     * @private\n     */\n    get: function () {\n      return this.gridBorderOverlapStyle;\n    },\n    set: function (value) {\n      this.gridBorderOverlapStyle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfGridStyle;\n}(PdfGridStyleBase);\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */function (_super) {\n  __extends(PdfGridCellStyle, _super);\n  /**\n   * Initializes a new instance of the `PdfGridCellStyle` class.\n   * @private\n   */\n  function PdfGridCellStyle() {\n    var _this = _super.call(this) || this;\n    /**\n     * @hidden\n     * @private\n     */\n    _this.gridCellBorders = PdfBorders.default;\n    return _this;\n  }\n  Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n    //Properties\n    /**\n     * Gets the `string format` of the 'PdfGridCell'.\n     * @private\n     */\n    get: function () {\n      return this.format;\n    },\n    set: function (value) {\n      this.format = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n    /**\n     * Gets or sets the `border` of the 'PdfGridCell'.\n     * @private\n     */\n    get: function () {\n      return this.gridCellBorders;\n    },\n    set: function (value) {\n      this.gridCellBorders = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n    /**\n     * Gets or sets the `cell padding`.\n     * @private\n     */\n    get: function () {\n      return this.gridCellPadding;\n    },\n    set: function (value) {\n      if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n        this.gridCellPadding = new PdfPaddings();\n      }\n      this.gridCellPadding = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfGridCellStyle;\n}(PdfGridStyleBase);\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */function () {\n  // Constructor\n  /**\n   * Initializes a new instance of the `PdfGridRowStyle` class.\n   * @private\n   */\n  function PdfGridRowStyle() {\n    //\n  }\n  Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n    // Properties\n    /**\n     * Gets or sets the `background brush`.\n     * @private\n     */\n    get: function () {\n      return this.gridRowBackgroundBrush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n    this.gridRowBackgroundBrush = value;\n    if (typeof this.parent !== 'undefined') {\n      for (var i = 0; i < this.parent.cells.count; i++) {\n        this.parent.cells.getCell(i).style.backgroundBrush = value;\n      }\n    }\n  };\n  Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n    /**\n     * Gets or sets the `text brush`.\n     * @private\n     */\n    get: function () {\n      return this.gridRowTextBrush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfGridRowStyle.prototype.setTextBrush = function (value) {\n    this.gridRowTextBrush = value;\n    if (typeof this.parent !== 'undefined') {\n      for (var i = 0; i < this.parent.cells.count; i++) {\n        this.parent.cells.getCell(i).style.textBrush = value;\n      }\n    }\n  };\n  Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n    /**\n     * Gets or sets the `text pen`.\n     * @private\n     */\n    get: function () {\n      return this.gridRowTextPen;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfGridRowStyle.prototype.setTextPen = function (value) {\n    this.gridRowTextPen = value;\n    if (typeof this.parent !== 'undefined') {\n      for (var i = 0; i < this.parent.cells.count; i++) {\n        this.parent.cells.getCell(i).style.textPen = value;\n      }\n    }\n  };\n  Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n    /**\n     * Gets or sets the `font`.\n     * @private\n     */\n    get: function () {\n      return this.gridRowFont;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfGridRowStyle.prototype.setFont = function (value) {\n    this.gridRowFont = value;\n    if (typeof this.parent !== 'undefined') {\n      for (var i = 0; i < this.parent.cells.count; i++) {\n        this.parent.cells.getCell(i).style.font = value;\n      }\n    }\n  };\n  Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n    /**\n     * Gets or sets the `border` of the current row.\n     * @private\n     */\n    get: function () {\n      if (typeof this.gridRowBorder === 'undefined') {\n        this.setBorder(new PdfBorders());\n      }\n      return this.gridRowBorder;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfGridRowStyle.prototype.setBorder = function (value) {\n    this.gridRowBorder = value;\n    if (typeof this.parent !== 'undefined') {\n      for (var i = 0; i < this.parent.cells.count; i++) {\n        this.parent.cells.getCell(i).style.borders = value;\n      }\n    }\n  };\n  /**\n   * sets the `parent row` of the current object.\n   * @private\n   */\n  PdfGridRowStyle.prototype.setParent = function (parent) {\n    this.parent = parent;\n  };\n  Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n    /**\n     * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    get: function () {\n      return this.gridRowBackgroundImage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * sets the `backgroundImage` of the 'PdfGridCell'.\n   * @private\n   */\n  PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n    this.gridRowBackgroundImage = value;\n  };\n  return PdfGridRowStyle;\n}();\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n  /**\n   * Specifies the type of `NextPage`.\n   * @private\n   */\n  PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n  /**\n   * Specifies the type of `LastPage`.\n   * @private\n   */\n  PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfBorders","PdfPaddings","PdfBorderOverlapStyle","PdfGridStyleBase","defineProperty","get","gridBackgroundBrush","set","value","enumerable","configurable","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","_super","_this","call","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","default","format","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","parent","i","cells","count","getCell","style","backgroundBrush","gridRowTextBrush","setTextBrush","textBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","setFont","font","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}