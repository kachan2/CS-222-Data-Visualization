{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */function (_super) {\n  __extends(PdfTilingBrush, _super);\n  /**\n   * Initializes a new instance of the `PdfTilingBrush` class.\n   * @public\n   */\n  function PdfTilingBrush(arg1, arg2) {\n    var _this = _super.call(this) || this;\n    /**\n     * Local variable to store Stroking.\n     * @private\n     */\n    _this.mStroking = false;\n    /**\n     * Local variable to store the tile start location.\n     * @private\n     */\n    _this.mLocation = new PointF(0, 0);\n    /**\n     * Local variable to store the dictionary properties.\n     * @private\n     */\n    _this.mDictionaryProperties = new DictionaryProperties();\n    var rect = null;\n    if (arg1 instanceof Rectangle) {\n      rect = arg1;\n    } else if (arg1 instanceof SizeF) {\n      rect = new Rectangle(0, 0, arg1.width, arg1.height);\n    }\n    if (arg2 !== null && arg2 instanceof PdfPage) {\n      _this.mPage = arg2;\n    }\n    _this.brushStream = new PdfStream();\n    _this.mResources = new PdfResources();\n    _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n    _this.setBox(rect);\n    _this.setObligatoryFields();\n    if (arg2 !== null && arg2 instanceof PdfPage) {\n      _this.mPage = arg2;\n      _this.graphics.colorSpace = arg2.document.colorSpace;\n    }\n    return _this;\n  }\n  /**\n   * Initializes a new instance of the `PdfTilingBrush` class.\n   * @private\n   * @param rectangle The size of the smallest brush cell.\n   * @param page The Current Page Object.\n   * @param location The Tile start location.\n   * @param matrix The matrix.\n   */\n  PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n    this.mPage = page;\n    this.mLocation = location;\n    this.mTransformationMatrix = matrix;\n    this.tempBrushStream = this.brushStream;\n    this.brushStream = new PdfStream();\n    var tempResource = new PdfResources();\n    this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n    this.setBox(rectangle);\n    this.setObligatoryFields();\n    return this;\n  };\n  Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n    //Properties\n    /**\n     * Location representing the start position of the tiles.\n     * @public\n     */\n    get: function () {\n      return this.mLocation;\n    },\n    set: function (value) {\n      this.mLocation = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Sets the obligatory fields.\n   * @private\n   */\n  PdfTilingBrush.prototype.setObligatoryFields = function () {\n    this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n    //  Tiling brush.\n    this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n    //  Coloured.\n    this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n    //  Constant spacing.\n    this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber(this.mBox.right - this.mBox.left));\n    this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber(this.mBox.bottom - this.mBox.top));\n    if (this.mPage != null && this.mLocation != null) {\n      if (this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined') {\n        // Transform the tile origin to fit the location\n        var tileTransform = this.mPage.size.height % this.rectangle.size.height - this.mLocation.y;\n        /* tslint:disable-next-line:max-line-length */\n        this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n      } else {\n        var tileTransform = 0;\n        // Transform the tile origin to fit the location\n        var elements = this.mTransformationMatrix.matrix.elements;\n        if (this.mPage.size.height > this.rectangle.size.height) {\n          tileTransform = this.mTransformationMatrix.matrix.offsetY - this.mPage.size.height % this.rectangle.size.height;\n        } else {\n          tileTransform = this.mPage.size.height % this.rectangle.size.height + this.mTransformationMatrix.matrix.offsetY;\n        }\n        this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform]));\n      }\n    }\n  };\n  /**\n   * Sets the BBox coordinates.\n   * @private\n   */\n  PdfTilingBrush.prototype.setBox = function (box) {\n    this.mBox = box;\n    var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n    this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n  };\n  Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n    //Properties\n    /**\n     * Gets the boundary box of the smallest brush cell.\n     * @public\n     */\n    get: function () {\n      return this.mBox;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n    /**\n     * Gets the size of the smallest brush cell.\n     * @public\n     */\n    get: function () {\n      return this.mBox.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n    /**\n     * Gets Graphics context of the brush.\n     */\n    get: function () {\n      if (this.mGraphics == null && typeof this.mGraphics === 'undefined') {\n        var gr = new GetResourceEventHandler(this);\n        var g = new PdfGraphics(this.size, gr, this.brushStream);\n        this.mGraphics = g;\n        this.mResources = this.getResources();\n        this.mGraphics.initializeCoordinates();\n      }\n      return this.mGraphics;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Gets the resources and modifies the template dictionary.\n   * @public\n   */\n  PdfTilingBrush.prototype.getResources = function () {\n    return this.mResources;\n  };\n  Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n    /**\n     * Gets or sets a value indicating whether this PdfTilingBrush\n     * is used for stroking operations.\n     */\n    get: function () {\n      return this.mStroking;\n    },\n    set: function (value) {\n      this.mStroking = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  //PdfBrush methods\n  /**\n   * Creates a new copy of a brush.\n   * @public\n   */\n  PdfTilingBrush.prototype.clone = function () {\n    var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n    if (this.mTransformationMatrix != null && this.mTransformationMatrix.matrix != null) {\n      /* tslint:disable-next-line:max-line-length */\n      brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n    }\n    brush.brushStream.data = this.tempBrushStream.data;\n    brush.mResources = new PdfResources(this.mResources);\n    brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n    return brush;\n  };\n  /**\n   * Monitors the changes of the brush and modify PDF state respectfully.\n   * @param brush The brush\n   * @param streamWriter The stream writer\n   * @param getResources The get resources delegate.\n   * @param saveChanges if set to true the changes should be saved anyway.\n   * @param currentColorSpace The current color space.\n   */\n  /* tslint:disable-next-line:max-line-length */\n  PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n    var diff = false;\n    if (brush !== this) {\n      //  Set the Pattern colour space.\n      streamWriter.setColorSpace('Pattern', this.mStroking);\n      //  Set the pattern for non-stroking operations.\n      var resources1 = getResources.getResources();\n      var name1 = resources1.getName(this);\n      streamWriter.setColourWithPattern(null, name1, this.mStroking);\n      diff = true;\n    } else if (brush instanceof PdfTilingBrush) {\n      //  Set the /Pattern colour space.\n      streamWriter.setColorSpace('Pattern', this.mStroking);\n      //  Set the pattern for non-stroking operations.\n      var resources = getResources.getResources();\n      var name_1 = resources.getName(this);\n      streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n      diff = true;\n    }\n    return diff;\n  };\n  /**\n   * Resets the changes, which were made by the brush.\n   * In other words resets the state to the initial one.\n   * @param streamWriter The stream writer.\n   */\n  PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n    //  We shouldn't do anything to reset changes.\n    //  All changes will be reset automatically by setting a new colour space.\n  };\n  Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n    /* tslint:enable */\n    // IPdfWrapper Members\n    /**\n     * Gets the `element`.\n     * @public\n     */\n    get: function () {\n      return this.brushStream;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfTilingBrush;\n}(PdfBrush);\nexport { PdfTilingBrush };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","GetResourceEventHandler","PdfBrush","PointF","SizeF","RectangleF","Rectangle","DictionaryProperties","PdfArray","PdfNumber","PdfGraphics","PdfResources","PdfStream","PdfPage","PdfTilingBrush","_super","arg1","arg2","_this","call","mStroking","mLocation","mDictionaryProperties","rect","width","height","mPage","brushStream","mResources","items","setValue","resources","setBox","setObligatoryFields","graphics","colorSpace","document","initialize","rectangle","page","location","matrix","mTransformationMatrix","tempBrushStream","tempResource","defineProperty","get","set","value","enumerable","configurable","patternType","paintType","tilingType","xStep","mBox","right","left","yStep","bottom","top","tileTransform","size","y","x","elements","offsetY","box","bBox","fromRectangle","mGraphics","gr","g","getResources","initializeCoordinates","clone","brush","data","monitorChanges","streamWriter","saveChanges","currentColorSpace","diff","setColorSpace","resources1","name1","getName","setColourWithPattern","name_1","resetChanges"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,SAASI,uBAAuB,QAAQ,mBAAmB;AAC3D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,MAAM,EAAEC,KAAK,EAAEC,UAAU,EAAEC,SAAS,QAAQ,6BAA6B;AAClF,SAASC,oBAAoB,QAAQ,gDAAgD;AACrF,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,OAAO,QAAQ,wBAAwB;AAChD;AACA;AACA;AACA,IAAIC,cAAc,GAAG,aAAe,UAAUC,MAAM,EAAE;EAClD5B,SAAS,CAAC2B,cAAc,EAAEC,MAAM,CAAC;EACjC;AACJ;AACA;AACA;EACI,SAASD,cAAc,CAACE,IAAI,EAAEC,IAAI,EAAE;IAChC,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrC;AACR;AACA;AACA;IACQD,KAAK,CAACE,SAAS,GAAG,KAAK;IACvB;AACR;AACA;AACA;IACQF,KAAK,CAACG,SAAS,GAAG,IAAIlB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAClC;AACR;AACA;AACA;IACQe,KAAK,CAACI,qBAAqB,GAAG,IAAIf,oBAAoB,EAAE;IACxD,IAAIgB,IAAI,GAAG,IAAI;IACf,IAAIP,IAAI,YAAYV,SAAS,EAAE;MAC3BiB,IAAI,GAAGP,IAAI;IACf,CAAC,MACI,IAAIA,IAAI,YAAYZ,KAAK,EAAE;MAC5BmB,IAAI,GAAG,IAAIjB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEU,IAAI,CAACQ,KAAK,EAAER,IAAI,CAACS,MAAM,CAAC;IACvD;IACA,IAAIR,IAAI,KAAK,IAAI,IAAIA,IAAI,YAAYJ,OAAO,EAAE;MAC1CK,KAAK,CAACQ,KAAK,GAAGT,IAAI;IACtB;IACAC,KAAK,CAACS,WAAW,GAAG,IAAIf,SAAS,EAAE;IACnCM,KAAK,CAACU,UAAU,GAAG,IAAIjB,YAAY,EAAE;IACrCO,KAAK,CAACS,WAAW,CAACE,KAAK,CAACC,QAAQ,CAACZ,KAAK,CAACI,qBAAqB,CAACS,SAAS,EAAEb,KAAK,CAACU,UAAU,CAAC;IACzFV,KAAK,CAACc,MAAM,CAACT,IAAI,CAAC;IAClBL,KAAK,CAACe,mBAAmB,EAAE;IAC3B,IAAIhB,IAAI,KAAK,IAAI,IAAIA,IAAI,YAAYJ,OAAO,EAAE;MAC1CK,KAAK,CAACQ,KAAK,GAAGT,IAAI;MAClBC,KAAK,CAACgB,QAAQ,CAACC,UAAU,GAAGlB,IAAI,CAACmB,QAAQ,CAACD,UAAU;IACxD;IACA,OAAOjB,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIJ,cAAc,CAACf,SAAS,CAACsC,UAAU,GAAG,UAAUC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAC/E,IAAI,CAACf,KAAK,GAAGa,IAAI;IACjB,IAAI,CAAClB,SAAS,GAAGmB,QAAQ;IACzB,IAAI,CAACE,qBAAqB,GAAGD,MAAM;IACnC,IAAI,CAACE,eAAe,GAAG,IAAI,CAAChB,WAAW;IACvC,IAAI,CAACA,WAAW,GAAG,IAAIf,SAAS,EAAE;IAClC,IAAIgC,YAAY,GAAG,IAAIjC,YAAY,EAAE;IACrC,IAAI,CAACgB,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAACS,SAAS,EAAEa,YAAY,CAAC;IACnF,IAAI,CAACZ,MAAM,CAACM,SAAS,CAAC;IACtB,IAAI,CAACL,mBAAmB,EAAE;IAC1B,OAAO,IAAI;EACf,CAAC;EACD1C,MAAM,CAACsD,cAAc,CAAC/B,cAAc,CAACf,SAAS,EAAE,UAAU,EAAE;IACxD;IACA;AACR;AACA;AACA;IACQ+C,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACzB,SAAS;IACzB,CAAC;IACD0B,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAAC3B,SAAS,GAAG2B,KAAK;IAC1B,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;EACIpC,cAAc,CAACf,SAAS,CAACkC,mBAAmB,GAAG,YAAY;IACvD,IAAI,CAACN,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAAC6B,WAAW,EAAE,IAAI1C,SAAS,CAAC,CAAC,CAAC,CAAC;IACzF;IACA,IAAI,CAACkB,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAAC8B,SAAS,EAAE,IAAI3C,SAAS,CAAC,CAAC,CAAC,CAAC;IACvF;IACA,IAAI,CAACkB,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAAC+B,UAAU,EAAE,IAAI5C,SAAS,CAAC,CAAC,CAAC,CAAC;IACxF;IACA,IAAI,CAACkB,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAACgC,KAAK,EAAE,IAAI7C,SAAS,CAAE,IAAI,CAAC8C,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,IAAI,CAACE,IAAI,CAAE,CAAC;IACpH,IAAI,CAAC9B,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAACoC,KAAK,EAAE,IAAIjD,SAAS,CAAE,IAAI,CAAC8C,IAAI,CAACI,MAAM,GAAG,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAE,CAAC;IACpH,IAAK,IAAI,CAAClC,KAAK,IAAI,IAAI,IAAM,IAAI,CAACL,SAAS,IAAI,IAAK,EAAE;MAClD,IAAK,IAAI,CAACqB,qBAAqB,IAAI,IAAI,IAAI,OAAO,IAAI,CAACA,qBAAqB,KAAK,WAAW,EAAG;QAC3F;QACA,IAAImB,aAAa,GAAI,IAAI,CAACnC,KAAK,CAACoC,IAAI,CAACrC,MAAM,GAAG,IAAI,CAACa,SAAS,CAACwB,IAAI,CAACrC,MAAM,GAAK,IAAI,CAACJ,SAAS,CAAC0C,CAAE;QAC9F;QACA,IAAI,CAACpC,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAACmB,MAAM,EAAE,IAAIjC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACa,SAAS,CAAC2C,CAAC,EAAEH,aAAa,CAAC,CAAC,CAAC;MACnI,CAAC,MACI;QACD,IAAIA,aAAa,GAAG,CAAC;QACrB;QACA,IAAII,QAAQ,GAAG,IAAI,CAACvB,qBAAqB,CAACD,MAAM,CAACwB,QAAQ;QACzD,IAAK,IAAI,CAACvC,KAAK,CAACoC,IAAI,CAACrC,MAAM,GAAG,IAAI,CAACa,SAAS,CAACwB,IAAI,CAACrC,MAAM,EAAG;UACvDoC,aAAa,GAAI,IAAI,CAACnB,qBAAqB,CAACD,MAAM,CAACyB,OAAO,GACnD,IAAI,CAACxC,KAAK,CAACoC,IAAI,CAACrC,MAAM,GAAG,IAAI,CAACa,SAAS,CAACwB,IAAI,CAACrC,MAAQ;QAChE,CAAC,MACI;UACDoC,aAAa,GAAK,IAAI,CAACnC,KAAK,CAACoC,IAAI,CAACrC,MAAM,GAAG,IAAI,CAACa,SAAS,CAACwB,IAAI,CAACrC,MAAM,GAAI,IAAI,CAACiB,qBAAqB,CAACD,MAAM,CAACyB,OAAQ;QACvH;QACA,IAAI,CAACvC,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAACmB,MAAM,EAAE,IAAIjC,QAAQ,CAAC,CAC5EyD,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAEJ,aAAa,CACjF,CAAC,CAAC;MACP;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACI/C,cAAc,CAACf,SAAS,CAACiC,MAAM,GAAG,UAAUmC,GAAG,EAAE;IAC7C,IAAI,CAACZ,IAAI,GAAGY,GAAG;IACf,IAAI5C,IAAI,GAAG,IAAIlB,UAAU,CAAC,IAAI,CAACkD,IAAI,CAACE,IAAI,EAAE,IAAI,CAACF,IAAI,CAACK,GAAG,EAAE,IAAI,CAACL,IAAI,CAACC,KAAK,EAAE,IAAI,CAACD,IAAI,CAACI,MAAM,CAAC;IAC3F,IAAI,CAAChC,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAAC8C,IAAI,EAAE5D,QAAQ,CAAC6D,aAAa,CAAC9C,IAAI,CAAC,CAAC;EAClG,CAAC;EACDhC,MAAM,CAACsD,cAAc,CAAC/B,cAAc,CAACf,SAAS,EAAE,WAAW,EAAE;IACzD;IACA;AACR;AACA;AACA;IACQ+C,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACS,IAAI;IACpB,CAAC;IACDN,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3D,MAAM,CAACsD,cAAc,CAAC/B,cAAc,CAACf,SAAS,EAAE,MAAM,EAAE;IACpD;AACR;AACA;AACA;IACQ+C,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACS,IAAI,CAACO,IAAI;IACzB,CAAC;IACDb,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3D,MAAM,CAACsD,cAAc,CAAC/B,cAAc,CAACf,SAAS,EAAE,UAAU,EAAE;IACxD;AACR;AACA;IACQ+C,GAAG,EAAE,YAAY;MACb,IAAK,IAAI,CAACwB,SAAS,IAAI,IAAI,IAAI,OAAO,IAAI,CAACA,SAAS,KAAK,WAAW,EAAG;QACnE,IAAIC,EAAE,GAAG,IAAItE,uBAAuB,CAAC,IAAI,CAAC;QAC1C,IAAIuE,CAAC,GAAG,IAAI9D,WAAW,CAAC,IAAI,CAACoD,IAAI,EAAES,EAAE,EAAE,IAAI,CAAC5C,WAAW,CAAC;QACxD,IAAI,CAAC2C,SAAS,GAAGE,CAAC;QAClB,IAAI,CAAC5C,UAAU,GAAG,IAAI,CAAC6C,YAAY,EAAE;QACrC,IAAI,CAACH,SAAS,CAACI,qBAAqB,EAAE;MAC1C;MACA,OAAO,IAAI,CAACJ,SAAS;IACzB,CAAC;IACDrB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;EACIpC,cAAc,CAACf,SAAS,CAAC0E,YAAY,GAAG,YAAY;IAChD,OAAO,IAAI,CAAC7C,UAAU;EAC1B,CAAC;EACDrC,MAAM,CAACsD,cAAc,CAAC/B,cAAc,CAACf,SAAS,EAAE,UAAU,EAAE;IACxD;AACR;AACA;AACA;IACQ+C,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAAC1B,SAAS;IACzB,CAAC;IACD2B,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAAC5B,SAAS,GAAG4B,KAAK;IAC1B,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;EACA;AACJ;AACA;AACA;EACIpC,cAAc,CAACf,SAAS,CAAC4E,KAAK,GAAG,YAAY;IACzC,IAAIC,KAAK,GAAG,IAAI,CAACvC,UAAU,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACZ,KAAK,EAAE,IAAI,CAACc,QAAQ,EAAE,IAAI,CAACE,qBAAqB,CAAC;IAClG,IAAK,IAAI,CAACA,qBAAqB,IAAI,IAAI,IAAM,IAAI,CAACA,qBAAqB,CAACD,MAAM,IAAI,IAAK,EAAE;MACrF;MACAmC,KAAK,CAACjD,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAACmB,MAAM,EAAE,IAAIjC,QAAQ,CAAC,IAAI,CAACkC,qBAAqB,CAACD,MAAM,CAACwB,QAAQ,CAAC,CAAC;IACjI;IACAW,KAAK,CAACjD,WAAW,CAACkD,IAAI,GAAG,IAAI,CAAClC,eAAe,CAACkC,IAAI;IAClDD,KAAK,CAAChD,UAAU,GAAG,IAAIjB,YAAY,CAAC,IAAI,CAACiB,UAAU,CAAC;IACpDgD,KAAK,CAACjD,WAAW,CAACE,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACR,qBAAqB,CAACS,SAAS,EAAE6C,KAAK,CAAChD,UAAU,CAAC;IACxF,OAAOgD,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA9D,cAAc,CAACf,SAAS,CAAC+E,cAAc,GAAG,UAAUF,KAAK,EAAEG,YAAY,EAAEN,YAAY,EAAEO,WAAW,EAAEC,iBAAiB,EAAE;IACnH,IAAIC,IAAI,GAAG,KAAK;IAChB,IAAIN,KAAK,KAAK,IAAI,EAAE;MAChB;MACAG,YAAY,CAACI,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC/D,SAAS,CAAC;MACrD;MACA,IAAIgE,UAAU,GAAGX,YAAY,CAACA,YAAY,EAAE;MAC5C,IAAIY,KAAK,GAAGD,UAAU,CAACE,OAAO,CAAC,IAAI,CAAC;MACpCP,YAAY,CAACQ,oBAAoB,CAAC,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACjE,SAAS,CAAC;MAC9D8D,IAAI,GAAG,IAAI;IACf,CAAC,MACI,IAAIN,KAAK,YAAY9D,cAAc,EAAE;MACtC;MACAiE,YAAY,CAACI,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC/D,SAAS,CAAC;MACrD;MACA,IAAIW,SAAS,GAAG0C,YAAY,CAACA,YAAY,EAAE;MAC3C,IAAIe,MAAM,GAAGzD,SAAS,CAACuD,OAAO,CAAC,IAAI,CAAC;MACpCP,YAAY,CAACQ,oBAAoB,CAAC,IAAI,EAAEC,MAAM,EAAE,IAAI,CAACpE,SAAS,CAAC;MAC/D8D,IAAI,GAAG,IAAI;IACf;IACA,OAAOA,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIpE,cAAc,CAACf,SAAS,CAAC0F,YAAY,GAAG,UAAUV,YAAY,EAAE;IAC5D;IACA;EACJ,CAAC;EACDxF,MAAM,CAACsD,cAAc,CAAC/B,cAAc,CAACf,SAAS,EAAE,SAAS,EAAE;IACvD;IACA;IACA;AACR;AACA;AACA;IACQ+C,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACnB,WAAW;IAC3B,CAAC;IACDsB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,OAAOpC,cAAc;AACzB,CAAC,CAACZ,QAAQ,CAAE;AACZ,SAASY,cAAc"},"metadata":{},"sourceType":"module"}