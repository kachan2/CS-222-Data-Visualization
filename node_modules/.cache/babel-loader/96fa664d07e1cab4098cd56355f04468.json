{"ast":null,"code":"import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */function () {\n  /**\n   * Initialize an instance of `PdfStreamWriter` class.\n   * @private\n   */\n  function PdfStreamWriter(stream) {\n    if (stream == null) {\n      throw new Error('ArgumentNullException:stream');\n    }\n    this.stream = stream;\n  }\n  //Implementation\n  /**\n   * `Clear` the stream.\n   * @public\n   */\n  PdfStreamWriter.prototype.clear = function () {\n    this.stream.clearStream();\n  };\n  PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n    if (dictionaryName instanceof PdfName) {\n      this.stream.write(dictionaryName.toString());\n      this.stream.write(Operators.whiteSpace);\n      this.writeOperator(Operators.setGraphicsState);\n    } else {\n      this.stream.write(Operators.slash);\n      this.stream.write(dictionaryName);\n      this.stream.write(Operators.whiteSpace);\n      this.writeOperator(Operators.setGraphicsState);\n    }\n  };\n  /**\n   * `Executes the XObject`.\n   * @private\n   */\n  PdfStreamWriter.prototype.executeObject = function (name) {\n    this.stream.write(name.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.paintXObject);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * `Closes path object`.\n   * @private\n   */\n  PdfStreamWriter.prototype.closePath = function () {\n    this.writeOperator(Operators.closePath);\n  };\n  /**\n   * `Clips the path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n    this.stream.write(Operators.clipPath);\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n    }\n    this.stream.write(Operators.whiteSpace);\n    this.stream.write(Operators.endPath);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * `Closes, then fills and strokes the path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n    this.stream.write(Operators.closeFillStrokePath);\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Fills and strokes path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n    this.stream.write(Operators.fillStroke);\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Fills path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n    this.stream.write(Operators.fill);\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Ends the path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.endPath = function () {\n    this.writeOperator(Operators.n);\n  };\n  /**\n   * `Closes and fills the path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n    this.writeOperator(Operators.closePath);\n    this.stream.write(Operators.fill);\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Closes and strokes the path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.closeStrokePath = function () {\n    this.writeOperator(Operators.closeStrokePath);\n  };\n  /**\n   * `Sets the text scaling`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n    this.stream.write(PdfNumber.floatToString(textScaling));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setTextScaling);\n  };\n  /**\n   * `Strokes path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.strokePath = function () {\n    this.writeOperator(Operators.stroke);\n  };\n  /**\n   * `Restores` the graphics state.\n   * @private\n   */\n  PdfStreamWriter.prototype.restoreGraphicsState = function () {\n    this.writeOperator(Operators.restoreState);\n  };\n  /**\n   * `Saves` the graphics state.\n   * @private\n   */\n  PdfStreamWriter.prototype.saveGraphicsState = function () {\n    this.writeOperator(Operators.saveState);\n  };\n  PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n    if (typeof arg1 === 'undefined') {\n      this.writeOperator(Operators.goToNextLine);\n    } else if (arg1 instanceof PointF) {\n      this.writePoint(arg1);\n      this.writeOperator(Operators.setCoords);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writeOperator(Operators.setCoords);\n    }\n  };\n  /**\n   * Shows the `text`.\n   * @private\n   */\n  PdfStreamWriter.prototype.showText = function (text) {\n    this.checkTextParam(text);\n    this.writeText(text);\n    this.writeOperator(Operators.setText);\n  };\n  /**\n   * Sets `text leading`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setLeading = function (leading) {\n    this.stream.write(PdfNumber.floatToString(leading));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setTextLeading);\n  };\n  /**\n   * `Begins the path`.\n   * @private\n   */\n  PdfStreamWriter.prototype.beginPath = function (x, y) {\n    this.writePoint(x, y);\n    this.writeOperator(Operators.beginPath);\n  };\n  /**\n   * `Begins text`.\n   * @private\n   */\n  PdfStreamWriter.prototype.beginText = function () {\n    this.writeOperator(Operators.beginText);\n  };\n  /**\n   * `Ends text`.\n   * @private\n   */\n  PdfStreamWriter.prototype.endText = function () {\n    this.writeOperator(Operators.endText);\n  };\n  PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n    if (arg1 instanceof RectangleF) {\n      this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writePoint(arg3, arg4);\n      this.writeOperator(Operators.appendRectangle);\n    }\n  };\n  PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n    if (arg1 instanceof PointF) {\n      this.appendLineSegment(arg1.x, arg1.y);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writeOperator(Operators.appendLineSegment);\n    }\n  };\n  /**\n   * Sets the `text rendering mode`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n    this.stream.write(renderingMode.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setRenderingMode);\n  };\n  /**\n   * Sets the `character spacing`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n    this.stream.write(PdfNumber.floatToString(charSpacing));\n    this.stream.write(Operators.whiteSpace);\n    this.stream.write(Operators.setCharacterSpace);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * Sets the `word spacing`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n    this.stream.write(PdfNumber.floatToString(wordSpacing));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setWordSpace);\n  };\n  PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n    if (arg1 instanceof PdfString) {\n      this.checkTextParam(arg1);\n      this.writeText(arg1);\n      this.writeOperator(Operators.setTextOnNewLine);\n    } else {\n      this.checkTextParam(arg1);\n      this.writeText(arg1, arg2);\n      this.writeOperator(Operators.setTextOnNewLine);\n    }\n  };\n  PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n    if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n      var temparg1 = arg1;\n      var temparg2 = arg2;\n      // if (temparg1 == null) {\n      //     throw new Error('ArgumentNullException:name');\n      // }\n      var op = temparg2 ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n      this.stream.write(temparg1.toString());\n      this.stream.write(Operators.whiteSpace);\n      this.stream.write(op);\n      this.stream.write(Operators.newLine);\n    } else {\n      var temparg1 = arg1;\n      var temparg2 = arg2;\n      this.setColorSpace(new PdfName(temparg1), temparg2);\n    }\n  };\n  /**\n   * Modifies current `transformation matrix`.\n   * @private\n   */\n  PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n    if (matrix == null) {\n      throw new Error('ArgumentNullException:matrix');\n    }\n    this.stream.write(matrix.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.modifyCtm);\n  };\n  PdfStreamWriter.prototype.setFont = function (font, name, size) {\n    if (typeof name === 'string') {\n      this.setFont(font, new PdfName(name), size);\n    } else {\n      if (font == null) {\n        throw new Error('ArgumentNullException:font');\n      }\n      this.stream.write(name.toString());\n      this.stream.write(Operators.whiteSpace);\n      this.stream.write(PdfNumber.floatToString(size));\n      this.stream.write(Operators.whiteSpace);\n      this.writeOperator(Operators.setFont);\n    }\n  };\n  /**\n   * `Writes the operator`.\n   * @private\n   */\n  PdfStreamWriter.prototype.writeOperator = function (opcode) {\n    this.stream.write(opcode);\n    this.stream.write(Operators.newLine);\n  };\n  PdfStreamWriter.prototype.checkTextParam = function (text) {\n    if (text == null) {\n      throw new Error('ArgumentNullException:text');\n    }\n    if (typeof text === 'string' && text === '') {\n      throw new Error('ArgumentException:The text can not be an empty string, text');\n    }\n  };\n  PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n    if (arg1 instanceof PdfString && typeof arg2 === 'undefined') {\n      this.stream.write(arg1.pdfEncode());\n    } else {\n      var start = void 0;\n      var end = void 0;\n      if (arg2) {\n        start = PdfString.hexStringMark[0];\n        end = PdfString.hexStringMark[1];\n      } else {\n        start = PdfString.stringMark[0];\n        end = PdfString.stringMark[1];\n      }\n      this.stream.write(start);\n      this.stream.write(arg1);\n      this.stream.write(end);\n    }\n  };\n  PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n    if (arg1 instanceof PointF && typeof arg2 === 'undefined') {\n      this.writePoint(arg1.x, arg1.y);\n    } else {\n      var temparg1 = arg1;\n      this.stream.write(PdfNumber.floatToString(temparg1));\n      this.stream.write(Operators.whiteSpace);\n      // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n      arg2 = this.updateY(arg2);\n      this.stream.write(PdfNumber.floatToString(arg2));\n      this.stream.write(Operators.whiteSpace);\n    }\n  };\n  /**\n   * `Updates y` co-ordinate.\n   * @private\n   */\n  PdfStreamWriter.prototype.updateY = function (arg) {\n    return -arg;\n  };\n  /**\n   * `Writes string` to the file.\n   * @private\n   */\n  PdfStreamWriter.prototype.write = function (string) {\n    var builder = '';\n    builder += string;\n    builder += Operators.newLine;\n    this.writeOperator(builder);\n  };\n  /**\n   * `Writes comment` to the file.\n   * @private\n   */\n  PdfStreamWriter.prototype.writeComment = function (comment) {\n    if (comment != null && comment.length > 0) {\n      var builder = '';\n      builder += Operators.comment;\n      builder += Operators.whiteSpace;\n      builder += comment;\n      //builder.Append( Operators.NewLine );\n      this.writeOperator(builder);\n    } else {\n      throw new Error('Invalid comment');\n    }\n  };\n  /**\n   * Sets the `color and space`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n    if (!color.isEmpty) {\n      // bool test = color is PdfExtendedColor;\n      this.stream.write(color.toString(colorSpace, forStroking));\n      this.stream.write(Operators.newLine);\n    }\n  };\n  // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n  // {\n  //     let pat : PdfArray = new PdfArray(pattern);\n  //     let off : PdfNumber = new PdfNumber(patternOffset);\n  //     this.setLineDashPatternHelper(pat, off);\n  // }\n  // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n  // {\n  //     pattern.Save(this);\n  //     this.m_stream.write(Operators.whiteSpace);\n  //     patternOffset.Save(this);\n  //     this.m_stream.write(Operators.whiteSpace);\n  //     this.writeOperator(Operators.setDashPattern);\n  // }\n  /**\n   * Sets the `line dash pattern`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n    // let pat : PdfArray = new PdfArray(pattern);\n    // let off : PdfNumber = new PdfNumber(patternOffset);\n    // this.setLineDashPatternHelper(pat, off);\n    this.setLineDashPatternHelper(pattern, patternOffset);\n  };\n  /**\n   * Sets the `line dash pattern`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n    var tempPattern = '[';\n    if (pattern.length > 1) {\n      for (var index = 0; index < pattern.length; index++) {\n        if (index === pattern.length - 1) {\n          tempPattern += pattern[index].toString();\n        } else {\n          tempPattern += pattern[index].toString() + ' ';\n        }\n      }\n    }\n    tempPattern += '] ';\n    tempPattern += patternOffset.toString();\n    tempPattern += ' ' + Operators.setDashPattern;\n    this.stream.write(tempPattern);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * Sets the `miter limit`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n    this.stream.write(PdfNumber.floatToString(miterLimit));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setMiterLimit);\n  };\n  /**\n   * Sets the `width of the line`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setLineWidth = function (width) {\n    this.stream.write(PdfNumber.floatToString(width));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setLineWidth);\n  };\n  /**\n   * Sets the `line cap`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n    this.stream.write(lineCapStyle.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setLineCapStyle);\n  };\n  /**\n   * Sets the `line join`.\n   * @private\n   */\n  PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n    this.stream.write(lineJoinStyle.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setLineJoinStyle);\n  };\n  Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n    //IPdfWriter members\n    /**\n     * Gets or sets the current `position` within the stream.\n     * @private\n     */\n    get: function () {\n      return this.stream.position;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n    /**\n     * Gets `stream length`.\n     * @private\n     */\n    get: function () {\n      var returnValue = 0;\n      if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n        for (var index = 0; index < this.stream.data.length; index++) {\n          returnValue += this.stream.data[index].length;\n        }\n      }\n      return returnValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n    /**\n     * Gets and Sets the `current document`.\n     * @private\n     */\n    get: function () {\n      return null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /* tslint:disable-next-line:max-line-length */\n  PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n    if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n      this.writePoint(arg1.x, arg1.y);\n      this.writePoint(arg2.x, arg2.y);\n      this.writePoint(arg3.x, arg3.y);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writePoint(arg3, arg4);\n      this.writePoint(arg5, arg6);\n    }\n    this.writeOperator(Operators.appendbeziercurve);\n  };\n  PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n    if (colours != null) {\n      var count = colours.length;\n      var i = 0;\n      for (i = 0; i < count; ++i) {\n        this.stream.write(colours[i].toString());\n        this.stream.write(Operators.whiteSpace);\n      }\n    }\n    if (patternName != null) {\n      this.stream.write(patternName.toString());\n      this.stream.write(Operators.whiteSpace);\n    }\n    if (forStroking) {\n      this.writeOperator(Operators.setColorAndPatternStroking);\n    } else {\n      this.writeOperator(Operators.setColorAndPattern);\n    }\n  };\n  return PdfStreamWriter;\n}();\nexport { PdfStreamWriter };","map":{"version":3,"names":["Operators","PdfNumber","PointF","RectangleF","PdfString","PdfName","PdfStreamWriter","stream","Error","prototype","clear","clearStream","setGraphicsState","dictionaryName","write","toString","whiteSpace","writeOperator","slash","executeObject","name","paintXObject","newLine","closePath","clipPath","useEvenOddRule","evenOdd","endPath","closeFillStrokePath","fillStrokePath","fillStroke","fillPath","fill","n","closeFillPath","closeStrokePath","setTextScaling","textScaling","floatToString","strokePath","stroke","restoreGraphicsState","restoreState","saveGraphicsState","saveState","startNextLine","arg1","arg2","goToNextLine","writePoint","setCoords","showText","text","checkTextParam","writeText","setText","setLeading","leading","setTextLeading","beginPath","x","y","beginText","endText","appendRectangle","arg3","arg4","width","height","appendLineSegment","setTextRenderingMode","renderingMode","setRenderingMode","setCharacterSpacing","charSpacing","setCharacterSpace","setWordSpacing","wordSpacing","setWordSpace","showNextLineText","setTextOnNewLine","setColorSpace","temparg1","temparg2","op","selectcolorspaceforstroking","selectcolorspacefornonstroking","modifyCtm","matrix","setFont","font","size","opcode","pdfEncode","start","end","hexStringMark","stringMark","updateY","arg","string","builder","writeComment","comment","length","setColorAndSpace","color","colorSpace","forStroking","isEmpty","setLineDashPattern","pattern","patternOffset","setLineDashPatternHelper","tempPattern","index","setDashPattern","setMiterLimit","miterLimit","setLineWidth","setLineCap","lineCapStyle","setLineCapStyle","setLineJoin","lineJoinStyle","setLineJoinStyle","Object","defineProperty","get","position","enumerable","configurable","returnValue","data","appendBezierSegment","arg5","arg6","appendbeziercurve","setColourWithPattern","colours","patternName","count","i","setColorAndPatternStroking","setColorAndPattern"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js"],"sourcesContent":["import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}