{"ast":null,"code":"/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */function () {\n  function PdfTemplate(arg1, arg2) {\n    /**\n     * Initialize an instance for `DictionaryProperties` class.\n     * @private\n     * @hidden\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\n     * Checks whether the transformation 'is performed'.\n     * @default true\n     * @private\n     */\n    this.writeTransformation = true;\n    if (typeof arg1 === 'undefined') {\n      //\n    } else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n      this.content = new PdfStream();\n      var tempSize = new SizeF(arg1.width, arg1.height);\n      this.setSize(tempSize);\n      this.initialize();\n    } else {\n      this.content = new PdfStream();\n      this.setSize(new SizeF(arg1, arg2));\n      this.initialize();\n    }\n  }\n  Object.defineProperty(PdfTemplate.prototype, \"size\", {\n    //Properties\n    /**\n     * Gets the size of the 'PdfTemplate'.\n     */\n    get: function () {\n      return this.templateSize;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplate.prototype, \"width\", {\n    /**\n     * Gets the width of the 'PdfTemplate'.\n     */\n    get: function () {\n      return this.size.width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplate.prototype, \"height\", {\n    /**\n     * Gets the height of the 'PdfTemplate'.\n     */\n    get: function () {\n      return this.size.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n    /**\n     * Gets the `graphics` of the 'PdfTemplate'.\n     */\n    get: function () {\n      if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n        var gr = new GetResourceEventHandler(this);\n        var g = new PdfGraphics(this.size, gr, this.content);\n        this.pdfGraphics = g;\n        // if(this.writeTransformation) {\n        // Transform co-ordinates to Top/Left.\n        this.pdfGraphics.initializeCoordinates();\n        // }\n      }\n\n      return this.pdfGraphics;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Gets the resources and modifies the template dictionary.\n   * @private\n   */\n  PdfTemplate.prototype.getResources = function () {\n    if (this.resources == null) {\n      this.resources = new PdfResources();\n      this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n    }\n    return this.resources;\n  };\n  // Public methods\n  /**\n   * `Initialize` the type and subtype of the template.\n   * @private\n   */\n  PdfTemplate.prototype.initialize = function () {\n    this.addType();\n    this.addSubType();\n  };\n  /**\n   * `Adds type key`.\n   * @private\n   */\n  PdfTemplate.prototype.addType = function () {\n    var value = new PdfName(this.dictionaryProperties.xObject);\n    this.content.items.setValue(this.dictionaryProperties.type, value);\n  };\n  /**\n   * `Adds SubType key`.\n   * @private\n   */\n  PdfTemplate.prototype.addSubType = function () {\n    var value = new PdfName(this.dictionaryProperties.form);\n    this.content.items.setValue(this.dictionaryProperties.subtype, value);\n  };\n  PdfTemplate.prototype.reset = function (size) {\n    if (typeof size === 'undefined') {\n      if (this.resources != null) {\n        this.resources = null;\n        this.content.remove(this.dictionaryProperties.resources);\n      }\n      if (this.graphics != null) {\n        this.graphics.reset(this.size);\n      }\n    } else {\n      this.setSize(size);\n      this.reset();\n    }\n  };\n  /**\n   * `Set the size` of the 'PdfTemplate'.\n   * @private\n   */\n  PdfTemplate.prototype.setSize = function (size) {\n    var rect = new RectangleF(new PointF(0, 0), size);\n    var val = PdfArray.fromRectangle(rect);\n    this.content.items.setValue(this.dictionaryProperties.bBox, val);\n    this.templateSize = size;\n  };\n  Object.defineProperty(PdfTemplate.prototype, \"element\", {\n    // /**\n    //  * Returns the value of current graphics.\n    //  * @private\n    //  */\n    // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n    //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n    //         this.graphics = g;\n    //         this.graphics.Size = this.Size;\n    //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n    //         this.graphics.Initialize();\n    //         if(this.writeTransformation) {\n    //             this.graphics.InitializeCoordinates();\n    //         }\n    //     }\n    //     return this.graphics;\n    // }\n    // IPdfWrapper Members\n    /**\n     * Gets the `content stream` of 'PdfTemplate' class.\n     * @private\n     */\n    get: function () {\n      return this.content;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfTemplate;\n}();\nexport { PdfTemplate };","map":{"version":3,"names":["PdfStream","DictionaryProperties","PdfArray","PdfGraphics","PdfResources","PdfName","PointF","SizeF","RectangleF","GetResourceEventHandler","PdfTemplate","arg1","arg2","dictionaryProperties","writeTransformation","content","tempSize","width","height","setSize","initialize","Object","defineProperty","prototype","get","templateSize","enumerable","configurable","size","pdfGraphics","gr","g","initializeCoordinates","getResources","resources","items","setValue","addType","addSubType","value","xObject","type","form","subtype","reset","remove","graphics","rect","val","fromRectangle","bBox"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js"],"sourcesContent":["/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,+BAA+B;AACzD,SAASC,oBAAoB,QAAQ,gDAAgD;AACrF,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,6BAA6B;AACvE,SAASC,uBAAuB,QAAQ,mBAAmB;AAC3D;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,YAAY;EACzC,SAASA,WAAW,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC7B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,oBAAoB,GAAG,IAAIZ,oBAAoB,EAAE;IACtD;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACa,mBAAmB,GAAG,IAAI;IAC/B,IAAI,OAAOH,IAAI,KAAK,WAAW,EAAE;MAC7B;IACJ,CAAC,MACI,IAAIA,IAAI,YAAYJ,KAAK,IAAI,OAAOK,IAAI,KAAK,WAAW,EAAE;MAC3D,IAAI,CAACG,OAAO,GAAG,IAAIf,SAAS,EAAE;MAC9B,IAAIgB,QAAQ,GAAG,IAAIT,KAAK,CAACI,IAAI,CAACM,KAAK,EAAEN,IAAI,CAACO,MAAM,CAAC;MACjD,IAAI,CAACC,OAAO,CAACH,QAAQ,CAAC;MACtB,IAAI,CAACI,UAAU,EAAE;IACrB,CAAC,MACI;MACD,IAAI,CAACL,OAAO,GAAG,IAAIf,SAAS,EAAE;MAC9B,IAAI,CAACmB,OAAO,CAAC,IAAIZ,KAAK,CAACI,IAAI,EAAEC,IAAI,CAAC,CAAC;MACnC,IAAI,CAACQ,UAAU,EAAE;IACrB;EACJ;EACAC,MAAM,CAACC,cAAc,CAACZ,WAAW,CAACa,SAAS,EAAE,MAAM,EAAE;IACjD;IACA;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACC,YAAY;IAC5B,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACC,cAAc,CAACZ,WAAW,CAACa,SAAS,EAAE,OAAO,EAAE;IAClD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACI,IAAI,CAACX,KAAK;IAC1B,CAAC;IACDS,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACC,cAAc,CAACZ,WAAW,CAACa,SAAS,EAAE,QAAQ,EAAE;IACnD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACI,IAAI,CAACV,MAAM;IAC3B,CAAC;IACDQ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACC,cAAc,CAACZ,WAAW,CAACa,SAAS,EAAE,UAAU,EAAE;IACrD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,IAAI,IAAI,CAACK,WAAW,IAAI,IAAI,IAAI,OAAO,IAAI,CAACA,WAAW,KAAK,WAAW,EAAE;QACrE,IAAIC,EAAE,GAAG,IAAIrB,uBAAuB,CAAC,IAAI,CAAC;QAC1C,IAAIsB,CAAC,GAAG,IAAI5B,WAAW,CAAC,IAAI,CAACyB,IAAI,EAAEE,EAAE,EAAE,IAAI,CAACf,OAAO,CAAC;QACpD,IAAI,CAACc,WAAW,GAAGE,CAAC;QACpB;QACA;QACA,IAAI,CAACF,WAAW,CAACG,qBAAqB,EAAE;QACxC;MACJ;;MACA,OAAO,IAAI,CAACH,WAAW;IAC3B,CAAC;IACDH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;EACIjB,WAAW,CAACa,SAAS,CAACU,YAAY,GAAG,YAAY;IAC7C,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,EAAE;MACxB,IAAI,CAACA,SAAS,GAAG,IAAI9B,YAAY,EAAE;MACnC,IAAI,CAACW,OAAO,CAACoB,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACvB,oBAAoB,CAACqB,SAAS,EAAE,IAAI,CAACA,SAAS,CAAC;IACpF;IACA,OAAO,IAAI,CAACA,SAAS;EACzB,CAAC;EACD;EACA;AACJ;AACA;AACA;EACIxB,WAAW,CAACa,SAAS,CAACH,UAAU,GAAG,YAAY;IAC3C,IAAI,CAACiB,OAAO,EAAE;IACd,IAAI,CAACC,UAAU,EAAE;EACrB,CAAC;EACD;AACJ;AACA;AACA;EACI5B,WAAW,CAACa,SAAS,CAACc,OAAO,GAAG,YAAY;IACxC,IAAIE,KAAK,GAAG,IAAIlC,OAAO,CAAC,IAAI,CAACQ,oBAAoB,CAAC2B,OAAO,CAAC;IAC1D,IAAI,CAACzB,OAAO,CAACoB,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACvB,oBAAoB,CAAC4B,IAAI,EAAEF,KAAK,CAAC;EACtE,CAAC;EACD;AACJ;AACA;AACA;EACI7B,WAAW,CAACa,SAAS,CAACe,UAAU,GAAG,YAAY;IAC3C,IAAIC,KAAK,GAAG,IAAIlC,OAAO,CAAC,IAAI,CAACQ,oBAAoB,CAAC6B,IAAI,CAAC;IACvD,IAAI,CAAC3B,OAAO,CAACoB,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACvB,oBAAoB,CAAC8B,OAAO,EAAEJ,KAAK,CAAC;EACzE,CAAC;EACD7B,WAAW,CAACa,SAAS,CAACqB,KAAK,GAAG,UAAUhB,IAAI,EAAE;IAC1C,IAAI,OAAOA,IAAI,KAAK,WAAW,EAAE;MAC7B,IAAI,IAAI,CAACM,SAAS,IAAI,IAAI,EAAE;QACxB,IAAI,CAACA,SAAS,GAAG,IAAI;QACrB,IAAI,CAACnB,OAAO,CAAC8B,MAAM,CAAC,IAAI,CAAChC,oBAAoB,CAACqB,SAAS,CAAC;MAC5D;MACA,IAAI,IAAI,CAACY,QAAQ,IAAI,IAAI,EAAE;QACvB,IAAI,CAACA,QAAQ,CAACF,KAAK,CAAC,IAAI,CAAChB,IAAI,CAAC;MAClC;IACJ,CAAC,MACI;MACD,IAAI,CAACT,OAAO,CAACS,IAAI,CAAC;MAClB,IAAI,CAACgB,KAAK,EAAE;IAChB;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIlC,WAAW,CAACa,SAAS,CAACJ,OAAO,GAAG,UAAUS,IAAI,EAAE;IAC5C,IAAImB,IAAI,GAAG,IAAIvC,UAAU,CAAC,IAAIF,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEsB,IAAI,CAAC;IACjD,IAAIoB,GAAG,GAAG9C,QAAQ,CAAC+C,aAAa,CAACF,IAAI,CAAC;IACtC,IAAI,CAAChC,OAAO,CAACoB,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACvB,oBAAoB,CAACqC,IAAI,EAAEF,GAAG,CAAC;IAChE,IAAI,CAACvB,YAAY,GAAGG,IAAI;EAC5B,CAAC;EACDP,MAAM,CAACC,cAAc,CAACZ,WAAW,CAACa,SAAS,EAAE,SAAS,EAAE;IACpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACR;AACA;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACT,OAAO;IACvB,CAAC;IACDW,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,OAAOjB,WAAW;AACtB,CAAC,EAAG;AACJ,SAASA,WAAW"},"metadata":{},"sourceType":"module"}