{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { print as printFunction, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * This module enables the print functionality in maps.\n *\n * @hidden\n */\nvar Print = /** @class */function () {\n  /**\n   * Constructor for Maps\n   *\n   * @param {Maps} control - Specifies the instance of the map\n   */\n  function Print(control) {}\n  /**\n   * To print the Maps\n   *\n   * @param {string[] | string | Element} elements - Specifies the element\n   * @returns {void}\n   * @private\n   */\n  Print.prototype.print = function (maps, elements) {\n    var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n    printWindow.moveTo(0, 0);\n    printWindow.resizeTo(screen.availWidth, screen.availHeight);\n    var argsData = {\n      cancel: false,\n      htmlContent: this.getHTMLContent(maps, elements),\n      name: beforePrint\n    };\n    maps.trigger('beforePrint', argsData, function (beforePrintArgs) {\n      if (!argsData.cancel) {\n        printFunction(argsData.htmlContent, printWindow);\n      }\n    });\n  };\n  /**\n   * To get the html string of the Maps\n   *\n   * @param {string[] | string | Element} elements - Specifies the html element\n   * @returns {Element} - Returns the div element\n   * @private\n   */\n  Print.prototype.getHTMLContent = function (maps, elements) {\n    var div = createElement('div');\n    var divElement = maps.element.cloneNode(true);\n    if (maps.isTileMap) {\n      for (var i = 0; i < divElement.childElementCount; i++) {\n        if (divElement.children[i].id === maps.element.id + '_tile_parent') {\n          divElement.children[i].style.removeProperty('height');\n          divElement.children[i].style.removeProperty('width');\n          divElement.children[i].style.removeProperty('top');\n          divElement.children[i].style.removeProperty('left');\n          divElement.children[i].style.removeProperty('right');\n          divElement.children[i].style.removeProperty('overflow');\n          var svgElement = document.getElementById(maps.element.id + '_Tile_SVG_Parent');\n          divElement.children[i].children[0].style.overflow = 'hidden';\n          divElement.children[i].children[0].style.position = 'absolute';\n          divElement.children[i].children[0].style.height = svgElement.style.height;\n          divElement.children[i].children[0].style.width = svgElement.style.width;\n          divElement.children[i].children[0].style.left = svgElement.style.left;\n          divElement.children[i].children[0].style.top = svgElement.style.top;\n          break;\n        }\n      }\n    }\n    if (elements) {\n      if (elements instanceof Array) {\n        Array.prototype.forEach.call(elements, function (value) {\n          div.appendChild(getElement(value).cloneNode(true));\n        });\n      } else if (elements instanceof Element) {\n        div.appendChild(elements.cloneNode(true));\n      } else {\n        div.appendChild(getElement(elements).cloneNode(true));\n      }\n    } else {\n      div.appendChild(divElement);\n    }\n    return div;\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} Returns the module name\n   */\n  Print.prototype.getModuleName = function () {\n    return 'Print';\n  };\n  /**\n   * To destroy the print.\n   *\n   * @returns {void}\n   * @private\n   */\n  Print.prototype.destroy = function () {};\n  return Print;\n}();\nexport { Print };","map":{"version":3,"names":["print","printFunction","createElement","getElement","beforePrint","Print","control","prototype","maps","elements","printWindow","window","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","cancel","htmlContent","getHTMLContent","name","trigger","beforePrintArgs","div","divElement","element","cloneNode","isTileMap","i","childElementCount","children","id","style","removeProperty","svgElement","document","getElementById","overflow","position","height","width","left","top","Array","forEach","call","value","appendChild","Element","getModuleName","destroy"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-maps/src/maps/model/print.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { print as printFunction, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * This module enables the print functionality in maps.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {Maps} control - Specifies the instance of the map\n     */\n    function Print(control) {\n    }\n    /**\n     * To print the Maps\n     *\n     * @param {string[] | string | Element} elements - Specifies the element\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (maps, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(maps, elements), name: beforePrint\n        };\n        maps.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     *\n     * @param {string[] | string | Element} elements - Specifies the html element\n     * @returns {Element} - Returns the div element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (maps, elements) {\n        var div = createElement('div');\n        var divElement = maps.element.cloneNode(true);\n        if (maps.isTileMap) {\n            for (var i = 0; i < divElement.childElementCount; i++) {\n                if (divElement.children[i].id === maps.element.id + '_tile_parent') {\n                    divElement.children[i].style.removeProperty('height');\n                    divElement.children[i].style.removeProperty('width');\n                    divElement.children[i].style.removeProperty('top');\n                    divElement.children[i].style.removeProperty('left');\n                    divElement.children[i].style.removeProperty('right');\n                    divElement.children[i].style.removeProperty('overflow');\n                    var svgElement = document.getElementById(maps.element.id + '_Tile_SVG_Parent');\n                    divElement.children[i].children[0].style.overflow = 'hidden';\n                    divElement.children[i].children[0].style.position = 'absolute';\n                    divElement.children[i].children[0].style.height = svgElement.style.height;\n                    divElement.children[i].children[0].style.width = svgElement.style.width;\n                    divElement.children[i].children[0].style.left = svgElement.style.left;\n                    divElement.children[i].children[0].style.top = svgElement.style.top;\n                    break;\n                }\n            }\n        }\n        if (elements) {\n            if (elements instanceof Array) {\n                Array.prototype.forEach.call(elements, function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(divElement);\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} Returns the module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'Print';\n    };\n    /**\n     * To destroy the print.\n     *\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}