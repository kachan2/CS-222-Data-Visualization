{"ast":null,"code":"import { Save } from './save';\n/**\n * XmlWriter class provide method to create XML data\n */\nvar XmlWriter = /** @class */function () {\n  /**\n   * Initialize new instance of {XmlWriter}\n   */\n  function XmlWriter() {\n    this.contentPos = 0;\n    this.bufferText = '';\n    this.bufferBlob = new Blob([''], {\n      type: 'text/plain'\n    });\n    this.currentState = 'Initial';\n    this.namespaceStack = [];\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[2].set('', '', 'Implied');\n    this.elementStack = [];\n    this.elementStack.push(new XmlElement());\n    this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);\n    this.attributeStack = [];\n    Save.isMicrosoftBrowser = !!navigator.msSaveBlob;\n  }\n  Object.defineProperty(XmlWriter.prototype, \"buffer\", {\n    /**\n     * Gets the content written to the {XmlWriter} as Blob.\n     * @returns {Blob}\n     */\n    get: function () {\n      this.flush();\n      return this.bufferBlob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Writes processing instruction with a space between the name and text\n   * @param {string} name - name of the processing instruction\n   * @param {string} text - text to write in the processing instruction\n   * @throws ArgumentException\n   * @throws InvalidArgumentException\n   * @throws InvalidOperationException\n   */\n  XmlWriter.prototype.writeProcessingInstruction = function (name, text) {\n    if (name === undefined || name === null || name.length === 0) {\n      throw new Error('ArgumentException: name should not be undefined, null or empty');\n    }\n    this.checkName(name);\n    if (text === undefined || text === null) {\n      text = '';\n    }\n    if (name.length === 3 && name === 'xml') {\n      if (this.currentState !== 'Initial') {\n        // tslint:disable-next-line:max-line-length\n        throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');\n      }\n    }\n    if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    } else {\n      this.writeStartDocument();\n      this.writeProcessingInstructionInternal(name, text);\n    }\n  };\n  /**\n   * Writes Xml declaration with version and standalone attribute\n   * @param {boolean} standalone - if true it write standalone=yes else standalone=no\n   * @throws InvalidOperation\n   */\n  XmlWriter.prototype.writeStartDocument = function (standalone) {\n    if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n    this.currentState = 'StartDocument';\n    this.rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n    if (standalone !== null && standalone !== undefined) {\n      this.rawText('\" standalone=\"');\n      this.rawText(standalone ? 'yes' : 'no');\n    }\n    this.rawText('\"?>');\n  };\n  /**\n   * Closes any open tag or attribute and write the state back to start\n   */\n  XmlWriter.prototype.writeEndDocument = function () {\n    while (this.elementStack.length - 1 > 0) {\n      this.writeEndElement();\n    }\n    this.currentState = 'EndDocument';\n    this.flush();\n  };\n  /**\n   * Writes the specified start tag and associates it with the given namespace and prefix.\n   * @param {string} prefix - namespace prefix of element\n   * @param {string} localName -localName of element\n   * @param {string} namespace - namespace URI associate with element\n   * @throws ArgumentException\n   * @throws InvalidOperationException\n   */\n  XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {\n    if (this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n    if (localName === undefined || localName === null || localName.length === 0) {\n      throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n    }\n    this.checkName(localName);\n    if (this.currentState === 'Initial') {\n      this.writeStartDocument();\n    }\n    if (this.currentState === 'StartElement') {\n      this.startElementContent();\n    }\n    this.currentState = 'StartElement';\n    if (prefix === undefined || prefix === null) {\n      if (namespace !== undefined && namespace !== null) {\n        prefix = this.lookupPrefix(namespace);\n      }\n      if (prefix === undefined || prefix === null) {\n        prefix = '';\n      }\n    } else if (prefix.length > 0) {\n      if (namespace === undefined || namespace === null) {\n        namespace = this.lookupNamespace(prefix);\n      }\n      if (namespace === undefined || namespace === null || namespace !== undefined && namespace.length === 0) {\n        throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n      }\n    }\n    if (namespace === undefined || namespace === null) {\n      namespace = this.lookupNamespace(prefix);\n    }\n    this.writeStartElementInternal(prefix, localName, namespace);\n  };\n  /**\n   * Closes one element and pop corresponding namespace scope\n   */\n  XmlWriter.prototype.writeEndElement = function () {\n    if (this.currentState === 'StartElement') {\n      this.startElementContent();\n      this.currentState = 'ElementContent';\n    } else if (this.currentState === 'ElementContent') {\n      this.currentState = 'ElementContent';\n    }\n    this.currentState = 'EndElement';\n    var top = this.elementStack.length - 1;\n    this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);\n    this.namespaceStack.splice(this.elementStack[top].previousTop + 1);\n    this.elementStack.splice(top);\n    if (this.bufferText.length > 10240) {\n      this.flush();\n    }\n  };\n  /**\n   * Writes an element with the specified prefix, local name, namespace URI, and value.\n   * @param {string} prefix - namespace prefix of element\n   * @param {string} localName - localName of element\n   * @param {string} namespace - namespace URI associate with element\n   * @param {string} value - value of element\n   */\n  XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {\n    this.writeStartElement(prefix, localName, namespace);\n    if (value !== undefined && value !== null && value.length !== 0) {\n      this.writeString(value);\n    }\n    this.writeEndElement();\n  };\n  /**\n   * Writes out the attribute with the specified prefix, local name, namespace URI, and value\n   * @param {string} prefix - namespace prefix of element\n   * @param {string} localName - localName of element\n   * @param {string} namespace - namespace URI associate with element\n   * @param {string} value - value of element\n   */\n  XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {\n    this.writeStartAttribute(prefix, localName, namespace, value);\n    this.writeStringInternal(value, true);\n    this.writeEndAttribute();\n  };\n  /**\n   * Writes the given text content\n   * @param {string} text - text to write\n   * @throws InvalidOperationException\n   */\n  XmlWriter.prototype.writeString = function (text) {\n    this.writeInternal(text, false);\n  };\n  /**\n   * Write given text as raw data\n   * @param {string} text - text to write\n   * @throws InvalidOperationException\n   */\n  XmlWriter.prototype.writeRaw = function (text) {\n    this.writeInternal(text, true);\n  };\n  XmlWriter.prototype.writeInternal = function (text, isRawString) {\n    if (text === undefined || text === null) {\n      return;\n    } else {\n      if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {\n        throw new Error('InvalidOperationException: Wrong Token');\n      }\n      if (this.currentState === 'StartElement') {\n        this.startElementContent();\n      }\n      this.currentState = 'ElementContent';\n      if (isRawString) {\n        this.rawText(text);\n      } else {\n        this.writeStringInternal(text, false);\n      }\n    }\n  };\n  /**\n   * Saves the file with specified name and sends the file to client browser\n   * @param {string} fileName - file name\n   */\n  XmlWriter.prototype.save = function (fileName) {\n    while (this.elementStack.length - 1 > 0) {\n      this.writeEndElement();\n    }\n    if (this.bufferText !== '') {\n      this.flush();\n    }\n    Save.save(fileName, this.buffer);\n  };\n  /**\n   * Releases the resources used by XmlWriter.\n   */\n  XmlWriter.prototype.destroy = function () {\n    this.bufferBlob = undefined;\n    for (var i = 0; i < this.namespaceStack.length; i++) {\n      this.namespaceStack[i].destroy();\n    }\n    this.namespaceStack = [];\n    for (var i = 0; i < this.elementStack.length; i++) {\n      this.elementStack[i].destroy();\n    }\n    this.elementStack = [];\n    this.bufferText = '';\n    this.contentPos = 0;\n  };\n  XmlWriter.prototype.flush = function () {\n    if (this.bufferBlob === undefined) {\n      return;\n    }\n    this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], {\n      type: 'text/plain'\n    });\n    this.bufferText = '';\n  };\n  XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {\n    this.bufferText += '<?';\n    this.rawText(name);\n    if (text.length > 0) {\n      this.bufferText += ' ';\n      text = text.replace(/\\?\\>/g, '? >');\n      this.bufferText += text;\n    }\n    this.bufferText += '?';\n    this.bufferText += '>';\n  };\n  XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {\n    if (localName === undefined || localName === null || localName.length === 0) {\n      if (prefix === 'xmlns') {\n        localName = 'xmlns';\n        prefix = '';\n      } else {\n        throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n      }\n    }\n    if (this.currentState !== 'StartElement') {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n    this.checkName(localName);\n    this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);\n  };\n  XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {\n    if (prefix === undefined || prefix === null) {\n      if (namespace !== undefined && namespace !== null) {\n        if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n          prefix = this.lookupPrefix(namespace);\n        }\n      }\n      if (prefix === undefined || prefix === null) {\n        prefix = '';\n      }\n    }\n    if (namespace === undefined || namespace === null) {\n      if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n        namespace = this.lookupNamespace(prefix);\n      }\n      if (namespace === undefined || namespace === null) {\n        namespace = '';\n      }\n    }\n    this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n  };\n  XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n    if (prefix.length === 0) {\n      if (localName[0] === 'x' && localName === 'xmlns') {\n        this.skipPushAndWrite(prefix, localName, namespace);\n        this.pushNamespaceExplicit('', value);\n        return;\n      } else if (namespace.length > 0) {\n        prefix = this.lookupPrefix(namespace);\n      }\n    } else {\n      if (prefix[0] === 'x') {\n        if (prefix === 'xmlns') {\n          this.skipPushAndWrite(prefix, localName, namespace);\n          this.pushNamespaceExplicit(localName, value);\n          return;\n        } else if (prefix === 'xml') {\n          if (localName === 'space' || localName === 'lang') {\n            this.skipPushAndWrite(prefix, localName, namespace);\n            return;\n          }\n        }\n      }\n      if (namespace.length === 0) {\n        prefix = '';\n      }\n    }\n    if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n      this.pushNamespaceImplicit(prefix, namespace);\n    }\n    this.skipPushAndWrite(prefix, localName, namespace);\n  };\n  XmlWriter.prototype.writeEndAttribute = function () {\n    this.currentState = 'StartElement';\n    this.bufferText += '\"';\n  };\n  XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {\n    this.bufferText += '<';\n    if (prefix.length > 0) {\n      this.rawText(prefix);\n      this.bufferText += ':';\n    }\n    this.rawText(localName);\n    var top = this.elementStack.length;\n    this.elementStack.push(new XmlElement());\n    this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);\n    this.pushNamespaceImplicit(prefix, namespace);\n    for (var i = 0; i < this.attributeStack.length; i++) {\n      this.attributeStack[i].destroy();\n    }\n    this.attributeStack = [];\n  };\n  XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {\n    if (this.contentPos !== this.bufferText.length + 1) {\n      this.bufferText += '</';\n      if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n        this.rawText(prefix);\n        this.bufferText += ':';\n      }\n      this.rawText(localName);\n      this.bufferText += '>';\n    } else {\n      this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);\n      this.bufferText += ' />';\n    }\n  };\n  XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {\n    this.bufferText += ' ';\n    if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n      this.rawText(prefix);\n      this.bufferText += ':';\n    }\n    this.rawText(localName);\n    this.bufferText += '=';\n    this.bufferText += '\"';\n  };\n  XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {\n    this.writeStartNamespaceDeclaration(prefix);\n    this.writeStringInternal(namespaceUri, true);\n    this.bufferText += '\"';\n  };\n  XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {\n    if (prefix === undefined || prefix === null || prefix.length === 0) {\n      this.rawText(' xmlns=\\\"');\n    } else {\n      this.rawText(' xmlns:');\n      this.rawText(prefix);\n      this.bufferText += '=';\n      this.bufferText += '\"';\n    }\n  };\n  XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {\n    if (text === null || text === undefined) {\n      text = '';\n    }\n    var tempText = '';\n    text = text.replace(/\\&/g, '&amp;');\n    text = text.replace(/\\</g, '&lt;');\n    text = text.replace(/\\>/g, '&gt;');\n    if (inAttributeValue) {\n      text = text.replace(/\\\"/g, '&quot;');\n    }\n    this.bufferText += text;\n    if (!inAttributeValue) {\n      this.contentPos = 0;\n    }\n  };\n  XmlWriter.prototype.startElementContent = function () {\n    var start = this.elementStack[this.elementStack.length - 1].previousTop;\n    for (var i = this.namespaceStack.length - 1; i > start; i--) {\n      if (this.namespaceStack[i].kind === 'NeedToWrite') {\n        this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);\n      }\n    }\n    this.bufferText += '>';\n    this.contentPos = this.bufferText.length + 1;\n  };\n  XmlWriter.prototype.rawText = function (text) {\n    this.bufferText += text;\n  };\n  XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {\n    var top = this.namespaceStack.length;\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[top].set(prefix, ns, kind);\n  };\n  XmlWriter.prototype.lookupPrefix = function (namespace) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].namespaceUri === namespace) {\n        return this.namespaceStack[i].prefix;\n      }\n    }\n    return undefined;\n  };\n  XmlWriter.prototype.lookupNamespace = function (prefix) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].prefix === prefix) {\n        return this.namespaceStack[i].namespaceUri;\n      }\n    }\n    return undefined;\n  };\n  XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].prefix === prefix) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {\n    var kind;\n    var existingNsIndex = this.lookupNamespaceIndex(prefix);\n    if (existingNsIndex !== -1) {\n      if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n        if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {\n          throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n        }\n        return;\n      } else {\n        if (this.namespaceStack[existingNsIndex].kind === 'Special') {\n          if (prefix === 'xml') {\n            if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {\n              throw new Error('InvalidArgumentException: Xml String');\n            } else {\n              kind = 'Implied';\n            }\n          } else {\n            throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n          }\n        } else {\n          kind = this.namespaceStack[existingNsIndex].namespaceUri === ns ? 'Implied' : 'NeedToWrite';\n        }\n      }\n    } else {\n      if (ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml' || ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns') {\n        throw new Error('InvalidArgumentException');\n      }\n      kind = 'NeedToWrite';\n    }\n    this.addNamespace(prefix, ns, kind);\n  };\n  XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {\n    var existingNsIndex = this.lookupNamespaceIndex(prefix);\n    if (existingNsIndex !== -1) {\n      if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n        this.namespaceStack[existingNsIndex].kind = 'Written';\n        return;\n      }\n    }\n    this.addNamespace(prefix, ns, 'Written');\n    return;\n  };\n  XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {\n    var top = this.attributeStack.length;\n    this.attributeStack.push(new XmlAttribute());\n    this.attributeStack[top].set(prefix, localName, namespaceName);\n    for (var i = 0; i < top; i++) {\n      if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {\n        throw new Error('XmlException: duplicate attribute name');\n      }\n    }\n  };\n  XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {\n    this.addAttribute(prefix, localName, namespace);\n    this.writeStartAttributeInternal(prefix, localName, namespace);\n  };\n  XmlWriter.prototype.checkName = function (text) {\n    var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/;\n    if (format.test(text)) {\n      throw new Error('InvalidArgumentException: invalid name character');\n    }\n  };\n  return XmlWriter;\n}();\nexport { XmlWriter };\n/**\n * class for managing namespace collection\n */\nvar Namespace = /** @class */function () {\n  function Namespace() {}\n  /**\n   * set value for current namespace instance\n   * @param {string} prefix namespace's prefix\n   * @param {string} namespaceUri namespace URI\n   * @param {string} kind namespace kind\n   */\n  Namespace.prototype.set = function (prefix, namespaceUri, kind) {\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.kind = kind;\n  };\n  /**\n   * Releases the resources used by Namespace\n   */\n  Namespace.prototype.destroy = function () {\n    this.prefix = undefined;\n    this.namespaceUri = undefined;\n    this.kind = undefined;\n  };\n  return Namespace;\n}();\nexport { Namespace };\n/**\n * class for managing element collection\n */\nvar XmlElement = /** @class */function () {\n  function XmlElement() {}\n  /**\n   * set value of current element\n   * @param {string} prefix - element prefix\n   * @param {string} localName - element local name\n   * @param {string} namespaceUri -namespace URI\n   * @param {string} previousTop - previous namespace top\n   */\n  XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {\n    this.previousTop = previousTop;\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.localName = localName;\n  };\n  /**\n   * Releases the resources used by XmlElement\n   */\n  XmlElement.prototype.destroy = function () {\n    this.previousTop = undefined;\n    this.prefix = undefined;\n    this.localName = undefined;\n    this.namespaceUri = undefined;\n  };\n  return XmlElement;\n}();\nexport { XmlElement };\n/**\n * class for managing attribute collection\n */\nvar XmlAttribute = /** @class */function () {\n  function XmlAttribute() {}\n  /**\n   * set value of current attribute\n   * @param {string} prefix - namespace's prefix\n   * @param {string} namespaceUri - namespace URI\n   * @param {string} localName - attribute localName\n   */\n  XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.localName = localName;\n  };\n  /**\n   * get whether the attribute is duplicate or not\n   * @param {string} prefix - namespace's prefix\n   * @param {string} namespaceUri - namespace URI\n   * @param {string} localName - attribute localName\n   */\n  XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {\n    return this.localName === localName && (this.prefix === prefix || this.namespaceUri === namespaceUri);\n  };\n  /**\n   * Releases the resources used by XmlAttribute\n   */\n  XmlAttribute.prototype.destroy = function () {\n    this.prefix = undefined;\n    this.namespaceUri = undefined;\n    this.localName = undefined;\n  };\n  return XmlAttribute;\n}();\nexport { XmlAttribute };","map":{"version":3,"names":["Save","XmlWriter","contentPos","bufferText","bufferBlob","Blob","type","currentState","namespaceStack","push","Namespace","set","elementStack","XmlElement","length","attributeStack","isMicrosoftBrowser","navigator","msSaveBlob","Object","defineProperty","prototype","get","flush","enumerable","configurable","writeProcessingInstruction","name","text","undefined","Error","checkName","writeStartDocument","writeProcessingInstructionInternal","standalone","rawText","writeEndDocument","writeEndElement","writeStartElement","prefix","localName","namespace","startElementContent","lookupPrefix","lookupNamespace","writeStartElementInternal","top","writeEndElementInternal","splice","previousTop","writeElementString","value","writeString","writeAttributeString","writeStartAttribute","writeStringInternal","writeEndAttribute","writeInternal","writeRaw","isRawString","save","fileName","buffer","destroy","i","replace","writeStartAttributePrefixAndNameSpace","writeStartAttributeSpecialAttribute","skipPushAndWrite","pushNamespaceExplicit","pushNamespaceImplicit","substring","writeStartAttributeInternal","namespaceName","writeNamespaceDeclaration","namespaceUri","writeStartNamespaceDeclaration","inAttributeValue","tempText","start","kind","addNamespace","ns","lookupNamespaceIndex","existingNsIndex","addAttribute","XmlAttribute","isDuplicate","format","test"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-file-utils/src/xml-writer.js"],"sourcesContent":["import { Save } from './save';\n/**\n * XmlWriter class provide method to create XML data\n */\nvar XmlWriter = /** @class */ (function () {\n    /**\n     * Initialize new instance of {XmlWriter}\n     */\n    function XmlWriter() {\n        this.contentPos = 0;\n        this.bufferText = '';\n        this.bufferBlob = new Blob([''], { type: 'text/plain' });\n        this.currentState = 'Initial';\n        this.namespaceStack = [];\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[2].set('', '', 'Implied');\n        this.elementStack = [];\n        this.elementStack.push(new XmlElement());\n        this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);\n        this.attributeStack = [];\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(XmlWriter.prototype, \"buffer\", {\n        /**\n         * Gets the content written to the {XmlWriter} as Blob.\n         * @returns {Blob}\n         */\n        get: function () {\n            this.flush();\n            return this.bufferBlob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes processing instruction with a space between the name and text\n     * @param {string} name - name of the processing instruction\n     * @param {string} text - text to write in the processing instruction\n     * @throws ArgumentException\n     * @throws InvalidArgumentException\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeProcessingInstruction = function (name, text) {\n        if (name === undefined || name === null || name.length === 0) {\n            throw new Error('ArgumentException: name should not be undefined, null or empty');\n        }\n        this.checkName(name);\n        if (text === undefined || text === null) {\n            text = '';\n        }\n        if (name.length === 3 && name === 'xml') {\n            if (this.currentState !== 'Initial') {\n                // tslint:disable-next-line:max-line-length\n                throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');\n            }\n        }\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        else {\n            this.writeStartDocument();\n            this.writeProcessingInstructionInternal(name, text);\n        }\n    };\n    /**\n     * Writes Xml declaration with version and standalone attribute\n     * @param {boolean} standalone - if true it write standalone=yes else standalone=no\n     * @throws InvalidOperation\n     */\n    XmlWriter.prototype.writeStartDocument = function (standalone) {\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this.currentState = 'StartDocument';\n        this.rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (standalone !== null && standalone !== undefined) {\n            this.rawText('\" standalone=\"');\n            this.rawText(standalone ? 'yes' : 'no');\n        }\n        this.rawText('\"?>');\n    };\n    /**\n     * Closes any open tag or attribute and write the state back to start\n     */\n    XmlWriter.prototype.writeEndDocument = function () {\n        while (this.elementStack.length - 1 > 0) {\n            this.writeEndElement();\n        }\n        this.currentState = 'EndDocument';\n        this.flush();\n    };\n    /**\n     * Writes the specified start tag and associates it with the given namespace and prefix.\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName -localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @throws ArgumentException\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {\n        if (this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (localName === undefined || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this.checkName(localName);\n        if (this.currentState === 'Initial') {\n            this.writeStartDocument();\n        }\n        if (this.currentState === 'StartElement') {\n            this.startElementContent();\n        }\n        this.currentState = 'StartElement';\n        if (prefix === undefined || prefix === null) {\n            if (namespace !== undefined && namespace !== null) {\n                prefix = this.lookupPrefix(namespace);\n            }\n            if (prefix === undefined || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (namespace === undefined || namespace === null) {\n                namespace = this.lookupNamespace(prefix);\n            }\n            if (namespace === undefined || namespace === null || (namespace !== undefined && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (namespace === undefined || namespace === null) {\n            namespace = this.lookupNamespace(prefix);\n        }\n        this.writeStartElementInternal(prefix, localName, namespace);\n    };\n    /**\n     * Closes one element and pop corresponding namespace scope\n     */\n    XmlWriter.prototype.writeEndElement = function () {\n        if (this.currentState === 'StartElement') {\n            this.startElementContent();\n            this.currentState = 'ElementContent';\n        }\n        else if (this.currentState === 'ElementContent') {\n            this.currentState = 'ElementContent';\n        }\n        this.currentState = 'EndElement';\n        var top = this.elementStack.length - 1;\n        this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);\n        this.namespaceStack.splice(this.elementStack[top].previousTop + 1);\n        this.elementStack.splice(top);\n        if (this.bufferText.length > 10240) {\n            this.flush();\n        }\n    };\n    /**\n     * Writes an element with the specified prefix, local name, namespace URI, and value.\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName - localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @param {string} value - value of element\n     */\n    XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {\n        this.writeStartElement(prefix, localName, namespace);\n        if (value !== undefined && value !== null && value.length !== 0) {\n            this.writeString(value);\n        }\n        this.writeEndElement();\n    };\n    /**\n     * Writes out the attribute with the specified prefix, local name, namespace URI, and value\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName - localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @param {string} value - value of element\n     */\n    XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {\n        this.writeStartAttribute(prefix, localName, namespace, value);\n        this.writeStringInternal(value, true);\n        this.writeEndAttribute();\n    };\n    /**\n     * Writes the given text content\n     * @param {string} text - text to write\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeString = function (text) {\n        this.writeInternal(text, false);\n    };\n    /**\n     * Write given text as raw data\n     * @param {string} text - text to write\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeRaw = function (text) {\n        this.writeInternal(text, true);\n    };\n    XmlWriter.prototype.writeInternal = function (text, isRawString) {\n        if (text === undefined || text === null) {\n            return;\n        }\n        else {\n            if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this.currentState === 'StartElement') {\n                this.startElementContent();\n            }\n            this.currentState = 'ElementContent';\n            if (isRawString) {\n                this.rawText(text);\n            }\n            else {\n                this.writeStringInternal(text, false);\n            }\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param {string} fileName - file name\n     */\n    XmlWriter.prototype.save = function (fileName) {\n        while (this.elementStack.length - 1 > 0) {\n            this.writeEndElement();\n        }\n        if (this.bufferText !== '') {\n            this.flush();\n        }\n        Save.save(fileName, this.buffer);\n    };\n    /**\n     * Releases the resources used by XmlWriter.\n     */\n    XmlWriter.prototype.destroy = function () {\n        this.bufferBlob = undefined;\n        for (var i = 0; i < this.namespaceStack.length; i++) {\n            this.namespaceStack[i].destroy();\n        }\n        this.namespaceStack = [];\n        for (var i = 0; i < this.elementStack.length; i++) {\n            this.elementStack[i].destroy();\n        }\n        this.elementStack = [];\n        this.bufferText = '';\n        this.contentPos = 0;\n    };\n    XmlWriter.prototype.flush = function () {\n        if (this.bufferBlob === undefined) {\n            return;\n        }\n        this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], { type: 'text/plain' });\n        this.bufferText = '';\n    };\n    XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {\n        this.bufferText += '<?';\n        this.rawText(name);\n        if (text.length > 0) {\n            this.bufferText += ' ';\n            text = text.replace(/\\?\\>/g, '? >');\n            this.bufferText += text;\n        }\n        this.bufferText += '?';\n        this.bufferText += '>';\n    };\n    XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {\n        if (localName === undefined || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this.currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this.checkName(localName);\n        this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);\n    };\n    XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {\n        if (prefix === undefined || prefix === null) {\n            if (namespace !== undefined && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this.lookupPrefix(namespace);\n                }\n            }\n            if (prefix === undefined || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (namespace === undefined || namespace === null) {\n            if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n                namespace = this.lookupNamespace(prefix);\n            }\n            if (namespace === undefined || namespace === null) {\n                namespace = '';\n            }\n        }\n        this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this.skipPushAndWrite(prefix, localName, namespace);\n                this.pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this.lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this.skipPushAndWrite(prefix, localName, namespace);\n                    this.pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this.skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n            this.pushNamespaceImplicit(prefix, namespace);\n        }\n        this.skipPushAndWrite(prefix, localName, namespace);\n    };\n    XmlWriter.prototype.writeEndAttribute = function () {\n        this.currentState = 'StartElement';\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {\n        this.bufferText += '<';\n        if (prefix.length > 0) {\n            this.rawText(prefix);\n            this.bufferText += ':';\n        }\n        this.rawText(localName);\n        var top = this.elementStack.length;\n        this.elementStack.push(new XmlElement());\n        this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);\n        this.pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this.attributeStack.length; i++) {\n            this.attributeStack[i].destroy();\n        }\n        this.attributeStack = [];\n    };\n    XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {\n        if (this.contentPos !== this.bufferText.length + 1) {\n            this.bufferText += '</';\n            if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n                this.rawText(prefix);\n                this.bufferText += ':';\n            }\n            this.rawText(localName);\n            this.bufferText += '>';\n        }\n        else {\n            this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);\n            this.bufferText += ' />';\n        }\n    };\n    XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {\n        this.bufferText += ' ';\n        if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n            this.rawText(prefix);\n            this.bufferText += ':';\n        }\n        this.rawText(localName);\n        this.bufferText += '=';\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        this.writeStartNamespaceDeclaration(prefix);\n        this.writeStringInternal(namespaceUri, true);\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {\n        if (prefix === undefined || prefix === null || prefix.length === 0) {\n            this.rawText(' xmlns=\\\"');\n        }\n        else {\n            this.rawText(' xmlns:');\n            this.rawText(prefix);\n            this.bufferText += '=';\n            this.bufferText += '\"';\n        }\n    };\n    XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {\n        if (text === null || text === undefined) {\n            text = '';\n        }\n        var tempText = '';\n        text = text.replace(/\\&/g, '&amp;');\n        text = text.replace(/\\</g, '&lt;');\n        text = text.replace(/\\>/g, '&gt;');\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;');\n        }\n        this.bufferText += text;\n        if (!inAttributeValue) {\n            this.contentPos = 0;\n        }\n    };\n    XmlWriter.prototype.startElementContent = function () {\n        var start = this.elementStack[this.elementStack.length - 1].previousTop;\n        for (var i = this.namespaceStack.length - 1; i > start; i--) {\n            if (this.namespaceStack[i].kind === 'NeedToWrite') {\n                this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);\n            }\n        }\n        this.bufferText += '>';\n        this.contentPos = this.bufferText.length + 1;\n    };\n    XmlWriter.prototype.rawText = function (text) {\n        this.bufferText += text;\n    };\n    XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {\n        var top = this.namespaceStack.length;\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[top].set(prefix, ns, kind);\n    };\n    XmlWriter.prototype.lookupPrefix = function (namespace) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].namespaceUri === namespace) {\n                return this.namespaceStack[i].prefix;\n            }\n        }\n        return undefined;\n    };\n    XmlWriter.prototype.lookupNamespace = function (prefix) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].prefix === prefix) {\n                return this.namespaceStack[i].namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n                if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                return;\n            }\n            else {\n                if (this.namespaceStack[existingNsIndex].kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this.namespaceStack[existingNsIndex].namespaceUri === ns) ? 'Implied' : 'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        this.addNamespace(prefix, ns, kind);\n    };\n    XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n                this.namespaceStack[existingNsIndex].kind = 'Written';\n                return;\n            }\n        }\n        this.addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {\n        var top = this.attributeStack.length;\n        this.attributeStack.push(new XmlAttribute());\n        this.attributeStack[top].set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {\n        this.addAttribute(prefix, localName, namespace);\n        this.writeStartAttributeInternal(prefix, localName, namespace);\n    };\n    XmlWriter.prototype.checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/;\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return XmlWriter;\n}());\nexport { XmlWriter };\n/**\n * class for managing namespace collection\n */\nvar Namespace = /** @class */ (function () {\n    function Namespace() {\n    }\n    /**\n     * set value for current namespace instance\n     * @param {string} prefix namespace's prefix\n     * @param {string} namespaceUri namespace URI\n     * @param {string} kind namespace kind\n     */\n    Namespace.prototype.set = function (prefix, namespaceUri, kind) {\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.kind = kind;\n    };\n    /**\n     * Releases the resources used by Namespace\n     */\n    Namespace.prototype.destroy = function () {\n        this.prefix = undefined;\n        this.namespaceUri = undefined;\n        this.kind = undefined;\n    };\n    return Namespace;\n}());\nexport { Namespace };\n/**\n * class for managing element collection\n */\nvar XmlElement = /** @class */ (function () {\n    function XmlElement() {\n    }\n    /**\n     * set value of current element\n     * @param {string} prefix - element prefix\n     * @param {string} localName - element local name\n     * @param {string} namespaceUri -namespace URI\n     * @param {string} previousTop - previous namespace top\n     */\n    XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {\n        this.previousTop = previousTop;\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.localName = localName;\n    };\n    /**\n     * Releases the resources used by XmlElement\n     */\n    XmlElement.prototype.destroy = function () {\n        this.previousTop = undefined;\n        this.prefix = undefined;\n        this.localName = undefined;\n        this.namespaceUri = undefined;\n    };\n    return XmlElement;\n}());\nexport { XmlElement };\n/**\n * class for managing attribute collection\n */\nvar XmlAttribute = /** @class */ (function () {\n    function XmlAttribute() {\n    }\n    /**\n     * set value of current attribute\n     * @param {string} prefix - namespace's prefix\n     * @param {string} namespaceUri - namespace URI\n     * @param {string} localName - attribute localName\n     */\n    XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.localName = localName;\n    };\n    /**\n     * get whether the attribute is duplicate or not\n     * @param {string} prefix - namespace's prefix\n     * @param {string} namespaceUri - namespace URI\n     * @param {string} localName - attribute localName\n     */\n    XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this.localName === localName) && ((this.prefix === prefix) || (this.namespaceUri === namespaceUri)));\n    };\n    /**\n     * Releases the resources used by XmlAttribute\n     */\n    XmlAttribute.prototype.destroy = function () {\n        this.prefix = undefined;\n        this.namespaceUri = undefined;\n        this.localName = undefined;\n    };\n    return XmlAttribute;\n}());\nexport { XmlAttribute };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}