{"ast":null,"code":"/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */function () {\n  /* tslint:disable */\n  function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n    if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n    } else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n    } else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n    } else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n    } else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n      this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n    } else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n      this.InitiateBounds(0, 0, arg1, arg2, null);\n    } else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n      this.InitiateBounds(0, 0, arg1, arg2, arg3);\n    } else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n      this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n    } else {\n      this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n      // this.graphics.colorSpace = this.page.document.colorSpace;\n    }\n    /* tslint:enable */\n  }\n\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n    // Properties\n    /**\n     * Gets or sets the `dock style` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.dockStyle;\n    },\n    set: function (value) {\n      // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n      this.dockStyle = value;\n      // Reset alignment.\n      this.resetAlignment();\n      // }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n    /**\n     * Gets or sets `alignment` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.alignmentStyle;\n    },\n    set: function (value) {\n      // if (this.alignmentStyle !== value) {\n      this.setAlignment(value);\n      // }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n    /**\n     * Indicates whether the page template is located `in front of the page layers or behind of it`.\n     * @private\n     */\n    get: function () {\n      return this.isForeground;\n    },\n    set: function (value) {\n      // if (this.foreground !== value) {\n      this.isForeground = value;\n      // }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n    /**\n     * Indicates whether the page template is located `behind of the page layers or in front of it`.\n     * @private\n     */\n    get: function () {\n      return !this.isForeground;\n    },\n    set: function (value) {\n      this.isForeground = !value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n    /**\n     * Gets or sets `location` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.currentLocation;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.currentLocation = value;\n      } else {\n        //\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n    /**\n     * Gets or sets `X` co-ordinate of the template element on the page.\n     * @private\n     */\n    get: function () {\n      var value = typeof this.currentLocation !== 'undefined' ? this.currentLocation.x : 0;\n      return value;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.currentLocation.x = value;\n      } else {\n        //\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n    /**\n     * Gets or sets `Y` co-ordinate of the template element on the page.\n     * @private\n     */\n    get: function () {\n      var value = typeof this.currentLocation !== 'undefined' ? this.currentLocation.y : 0;\n      return value;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.currentLocation.y = value;\n      } else {\n        //\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n    /**\n     * Gets or sets `size` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.size;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.template.reset(value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n    /**\n     * Gets or sets `width` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.width;\n    },\n    set: function (value) {\n      if (this.template.width !== value && this.type === TemplateType.None) {\n        var size = this.template.size;\n        size.width = value;\n        this.template.reset(size);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n    /**\n     * Gets or sets `height` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.height;\n    },\n    set: function (value) {\n      if (this.template.height !== value && this.type === TemplateType.None) {\n        var size = this.template.size;\n        size.height = value;\n        this.template.reset(size);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n    /**\n     * Gets `graphics` context of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.graphics;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n    /**\n     * Gets Pdf `template` object.\n     * @private\n     */\n    get: function () {\n      // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n      //     this.pdfTemplate = new PdfTemplate(this.size);\n      // }\n      return this.pdfTemplate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n    /**\n     * Gets or sets `type` of the usage of this page template.\n     * @private\n     */\n    get: function () {\n      return this.templateType;\n    },\n    set: function (value) {\n      this.updateDocking(value);\n      this.templateType = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n    /**\n     * Gets or sets `bounds` of the page template.\n     * @public\n     */\n    get: function () {\n      return new RectangleF(new PointF(this.x, this.y), this.size);\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.location = new PointF(value.x, value.y);\n        this.size = new SizeF(value.width, value.height);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Initialize Bounds` Initialize the bounds value of the template.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n    this.x = arg1;\n    this.y = arg2;\n    this.pdfTemplate = new PdfTemplate(arg3, arg4);\n    // this.graphics.colorSpace = this.page.document.colorSpace;\n  };\n  /**\n   * `Updates Dock` property if template is used as header/footer.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.updateDocking = function (type) {\n    if (type !== TemplateType.None) {\n      switch (type) {\n        case TemplateType.Top:\n          this.dock = PdfDockStyle.Top;\n          break;\n        case TemplateType.Bottom:\n          this.dock = PdfDockStyle.Bottom;\n          break;\n        case TemplateType.Left:\n          this.dock = PdfDockStyle.Left;\n          break;\n        case TemplateType.Right:\n          this.dock = PdfDockStyle.Right;\n          break;\n      }\n      this.resetAlignment();\n    }\n  };\n  /**\n   * `Resets alignment` of the template.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.resetAlignment = function () {\n    this.alignment = PdfAlignmentStyle.None;\n  };\n  /**\n   * `Sets alignment` of the template.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n    if (this.dock === PdfDockStyle.None) {\n      this.alignmentStyle = alignment;\n    } else {\n      // Template is docked and alignment has been changed.\n      var canBeSet = false;\n      switch (this.dock) {\n        case PdfDockStyle.Left:\n          canBeSet = alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft || alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None;\n          break;\n        case PdfDockStyle.Top:\n          canBeSet = alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter || alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None;\n          break;\n        case PdfDockStyle.Right:\n          canBeSet = alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None;\n          break;\n        case PdfDockStyle.Bottom:\n          canBeSet = alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None;\n          break;\n        case PdfDockStyle.Fill:\n          canBeSet = alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None;\n          break;\n      }\n      if (canBeSet) {\n        this.alignmentStyle = alignment;\n      }\n    }\n  };\n  /**\n   * Draws the template.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.draw = function (layer, document) {\n    var page = layer.page;\n    var bounds = this.calculateBounds(page, document);\n    if (bounds.x === -0) {\n      bounds.x = 0;\n    }\n    layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n  };\n  /**\n   * Calculates bounds of the page template.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n    var result = this.bounds;\n    if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n      result = this.getAlignmentBounds(page, document);\n    } else if (this.dockStyle !== PdfDockStyle.None) {\n      result = this.getDockBounds(page, document);\n    }\n    return result;\n  };\n  /**\n   * Calculates bounds according to the alignment.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n    var result = this.bounds;\n    if (this.type === TemplateType.None) {\n      result = this.getSimpleAlignmentBounds(page, document);\n    } else {\n      result = this.getTemplateAlignmentBounds(page, document);\n    }\n    return result;\n  };\n  /**\n   * Calculates bounds according to the alignment.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n    var bounds = this.bounds;\n    var pdfSection = page.section;\n    var actualBounds = pdfSection.getActualBounds(document, page, false);\n    var x = this.x;\n    var y = this.y;\n    switch (this.alignmentStyle) {\n      case PdfAlignmentStyle.TopLeft:\n        x = 0;\n        y = 0;\n        break;\n      case PdfAlignmentStyle.TopCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = 0;\n        break;\n      case PdfAlignmentStyle.TopRight:\n        x = actualBounds.width - this.width;\n        y = 0;\n        break;\n      case PdfAlignmentStyle.MiddleLeft:\n        x = 0;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n      case PdfAlignmentStyle.MiddleCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n      case PdfAlignmentStyle.MiddleRight:\n        x = actualBounds.width - this.width;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n      case PdfAlignmentStyle.BottomLeft:\n        x = 0;\n        y = actualBounds.height - this.height;\n        break;\n      case PdfAlignmentStyle.BottomCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = actualBounds.height - this.height;\n        break;\n      case PdfAlignmentStyle.BottomRight:\n        x = actualBounds.width - this.width;\n        y = actualBounds.height - this.height;\n        break;\n    }\n    bounds.x = x;\n    bounds.y = y;\n    return bounds;\n  };\n  /**\n   * Calculates bounds according to the alignment.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n    var result = this.bounds;\n    var section = page.section;\n    var actualBounds = section.getActualBounds(document, page, false);\n    var x = this.x;\n    var y = this.y;\n    switch (this.alignmentStyle) {\n      case PdfAlignmentStyle.TopLeft:\n        if (this.type === TemplateType.Left) {\n          x = -actualBounds.x;\n          y = 0;\n        } else if (this.type === TemplateType.Top) {\n          x = -actualBounds.x;\n          y = -actualBounds.y;\n        }\n        break;\n      case PdfAlignmentStyle.TopCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = -actualBounds.y;\n        break;\n      case PdfAlignmentStyle.TopRight:\n        if (this.type === TemplateType.Right) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = 0;\n        } else if (this.type === TemplateType.Top) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = -actualBounds.y;\n        }\n        break;\n      case PdfAlignmentStyle.MiddleLeft:\n        x = -actualBounds.x;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n      case PdfAlignmentStyle.MiddleCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n      case PdfAlignmentStyle.MiddleRight:\n        x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n      case PdfAlignmentStyle.BottomLeft:\n        if (this.type === TemplateType.Left) {\n          x = -actualBounds.x;\n          y = actualBounds.height - this.height;\n        } else if (this.type === TemplateType.Bottom) {\n          x = -actualBounds.x;\n          y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        }\n        break;\n      case PdfAlignmentStyle.BottomCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        break;\n      case PdfAlignmentStyle.BottomRight:\n        if (this.type === TemplateType.Right) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = actualBounds.height - this.height;\n        } else if (this.type === TemplateType.Bottom) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        }\n        break;\n    }\n    result.x = x;\n    result.y = y;\n    return result;\n  };\n  /**\n   * Calculates bounds according to the docking.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n    var result = this.bounds;\n    if (this.type === TemplateType.None) {\n      result = this.getSimpleDockBounds(page, document);\n    } else {\n      result = this.getTemplateDockBounds(page, document);\n    }\n    return result;\n  };\n  /**\n   * Calculates bounds according to the docking.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n    var result = this.bounds;\n    var section = page.section;\n    var actualBounds = section.getActualBounds(document, page, false);\n    var x = this.x;\n    var y = this.y;\n    var width = this.width;\n    var height = this.height;\n    switch (this.dockStyle) {\n      case PdfDockStyle.Left:\n        x = 0;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n      case PdfDockStyle.Top:\n        x = 0;\n        y = 0;\n        width = actualBounds.width;\n        height = this.height;\n        break;\n      case PdfDockStyle.Right:\n        x = actualBounds.width - this.width;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n      case PdfDockStyle.Bottom:\n        x = 0;\n        y = actualBounds.height - this.height;\n        width = actualBounds.width;\n        height = this.height;\n        break;\n      case PdfDockStyle.Fill:\n        x = 0;\n        x = 0;\n        width = actualBounds.width;\n        height = actualBounds.height;\n        break;\n    }\n    result = new RectangleF(x, y, width, height);\n    return result;\n  };\n  /**\n   * Calculates template bounds basing on docking if template is a page template.\n   * @private\n   */\n  PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n    var result = this.bounds;\n    var section = page.section;\n    var actualBounds = section.getActualBounds(document, page, false);\n    var actualSize = section.pageSettings.getActualSize();\n    var x = this.x;\n    var y = this.y;\n    var width = this.width;\n    var height = this.height;\n    switch (this.dockStyle) {\n      case PdfDockStyle.Left:\n        x = -actualBounds.x;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n      case PdfDockStyle.Top:\n        x = -actualBounds.x;\n        y = -actualBounds.y;\n        width = actualSize.width;\n        height = this.height;\n        if (actualBounds.height < 0) {\n          y = -actualBounds.y + actualSize.height;\n        }\n        break;\n      case PdfDockStyle.Right:\n        x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n      case PdfDockStyle.Bottom:\n        x = -actualBounds.x;\n        y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        width = actualSize.width;\n        height = this.height;\n        if (actualBounds.height < 0) {\n          y -= actualSize.height;\n        }\n        break;\n      case PdfDockStyle.Fill:\n        x = 0;\n        x = 0;\n        width = actualBounds.width;\n        height = actualBounds.height;\n        break;\n    }\n    result = new RectangleF(x, y, width, height);\n    return result;\n  };\n  return PdfPageTemplateElement;\n}();\nexport { PdfPageTemplateElement };","map":{"version":3,"names":["PdfDockStyle","PdfAlignmentStyle","TemplateType","PointF","SizeF","PdfTemplate","PdfPage","RectangleF","PdfPageTemplateElement","arg1","arg2","arg3","arg4","arg5","InitiateBounds","x","y","width","height","Object","defineProperty","prototype","get","dockStyle","set","value","resetAlignment","enumerable","configurable","alignmentStyle","setAlignment","isForeground","currentLocation","type","None","template","size","reset","graphics","pdfTemplate","templateType","updateDocking","location","Top","dock","Bottom","Left","Right","alignment","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","Fill","MiddleCenter","draw","layer","document","page","bounds","calculateBounds","drawPdfTemplate","result","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","pdfSection","section","actualBounds","getActualBounds","getRightIndentWidth","getBottomIndentHeight","getSimpleDockBounds","getTemplateDockBounds","actualSize","pageSettings","getActualSize"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}