{"ast":null,"code":"import { isNullOrUndefined, merge } from './util';\nvar headerRegex = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm;\nvar defaultType = 'GET';\n/**\n * Ajax class provides ability to make asynchronous HTTP request to the server\n * ```typescript\n *   var ajax = new Ajax(\"index.html\", \"GET\", true);\n *   ajax.send().then(\n *               function (value) {\n *                   console.log(value);\n *               },\n *               function (reason) {\n *                   console.log(reason);\n *               });\n * ```\n */\nvar Ajax = /** @class */function () {\n  /**\n   * Constructor for Ajax class\n   *\n   * @param  {string|Object} options ?\n   * @param  {string} type ?\n   * @param  {boolean} async ?\n   * @returns defaultType any\n   */\n  function Ajax(options, type, async, contentType) {\n    /**\n     * A boolean value indicating whether the request should be sent asynchronous or not.\n     *\n     * @default true\n     */\n    this.mode = true;\n    /**\n     * A boolean value indicating whether to ignore the promise reject.\n     *\n     * @private\n     * @default true\n     */\n    this.emitError = true;\n    this.options = {};\n    if (typeof options === 'string') {\n      this.url = options;\n      this.type = type ? type.toUpperCase() : defaultType;\n      this.mode = !isNullOrUndefined(async) ? async : true;\n    } else if (typeof options === 'object') {\n      this.options = options;\n      merge(this, this.options);\n    }\n    this.type = this.type ? this.type.toUpperCase() : defaultType;\n    this.contentType = this.contentType !== undefined ? this.contentType : contentType;\n  }\n  /**\n   *\n   * Send the request to server.\n   *\n   * @param {any} data - To send the user data\n   * @return {Promise} ?\n   */\n  Ajax.prototype.send = function (data) {\n    var _this = this;\n    this.data = isNullOrUndefined(data) ? this.data : data;\n    var eventArgs = {\n      cancel: false,\n      httpRequest: null\n    };\n    var promise = new Promise(function (resolve, reject) {\n      _this.httpRequest = new XMLHttpRequest();\n      _this.httpRequest.onreadystatechange = function () {\n        _this.stateChange(resolve, reject);\n      };\n      if (!isNullOrUndefined(_this.onLoad)) {\n        _this.httpRequest.onload = _this.onLoad;\n      }\n      if (!isNullOrUndefined(_this.onProgress)) {\n        _this.httpRequest.onprogress = _this.onProgress;\n      }\n      /* istanbul ignore next */\n      if (!isNullOrUndefined(_this.onAbort)) {\n        _this.httpRequest.onabort = _this.onAbort;\n      }\n      /* istanbul ignore next */\n      if (!isNullOrUndefined(_this.onError)) {\n        _this.httpRequest.onerror = _this.onError;\n      }\n      //** Upload Events **/\n      /* istanbul ignore next */\n      if (!isNullOrUndefined(_this.onUploadProgress)) {\n        _this.httpRequest.upload.onprogress = _this.onUploadProgress;\n      }\n      _this.httpRequest.open(_this.type, _this.url, _this.mode);\n      // Set default headers\n      if (!isNullOrUndefined(_this.data) && _this.contentType !== null) {\n        _this.httpRequest.setRequestHeader('Content-Type', _this.contentType || 'application/json; charset=utf-8');\n      }\n      if (_this.beforeSend) {\n        eventArgs.httpRequest = _this.httpRequest;\n        _this.beforeSend(eventArgs);\n      }\n      if (!eventArgs.cancel) {\n        _this.httpRequest.send(!isNullOrUndefined(_this.data) ? _this.data : null);\n      }\n    });\n    return promise;\n  };\n  Ajax.prototype.successHandler = function (data) {\n    if (this.onSuccess) {\n      this.onSuccess(data, this);\n    }\n    return data;\n  };\n  Ajax.prototype.failureHandler = function (reason) {\n    if (this.onFailure) {\n      this.onFailure(this.httpRequest);\n    }\n    return reason;\n  };\n  Ajax.prototype.stateChange = function (resolve, reject) {\n    var data = this.httpRequest.responseText;\n    if (this.dataType && this.dataType.toLowerCase() === 'json') {\n      if (data === '') {\n        data = undefined;\n      } else {\n        try {\n          data = JSON.parse(data);\n        } catch (error) {\n          // no exception handle\n        }\n      }\n    }\n    if (this.httpRequest.readyState === 4) {\n      //success range should be 200 to 299\n      if (this.httpRequest.status >= 200 && this.httpRequest.status <= 299 || this.httpRequest.status === 304) {\n        resolve(this.successHandler(data));\n      } else {\n        if (this.emitError) {\n          reject(new Error(this.failureHandler(this.httpRequest.statusText)));\n        } else {\n          resolve();\n        }\n      }\n    }\n  };\n  /**\n   * To get the response header from XMLHttpRequest\n   *\n   * @param  {string} key Key to search in the response header\n   * @returns {string} ?\n   */\n  Ajax.prototype.getResponseHeader = function (key) {\n    var responseHeaders;\n    var header;\n    // eslint-disable-next-line\n    responseHeaders = {};\n    var headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n    while (headers) {\n      responseHeaders[headers[1].toLowerCase()] = headers[2];\n      headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n    }\n    // eslint-disable-next-line\n    header = responseHeaders[key.toLowerCase()];\n    return isNullOrUndefined(header) ? null : header;\n  };\n  return Ajax;\n}();\nexport { Ajax };","map":{"version":3,"names":["isNullOrUndefined","merge","headerRegex","defaultType","Ajax","options","type","async","contentType","mode","emitError","url","toUpperCase","undefined","prototype","send","data","_this","eventArgs","cancel","httpRequest","promise","Promise","resolve","reject","XMLHttpRequest","onreadystatechange","stateChange","onLoad","onload","onProgress","onprogress","onAbort","onabort","onError","onerror","onUploadProgress","upload","open","setRequestHeader","beforeSend","successHandler","onSuccess","failureHandler","reason","onFailure","responseText","dataType","toLowerCase","JSON","parse","error","readyState","status","Error","statusText","getResponseHeader","key","responseHeaders","header","headers","exec","getAllResponseHeaders"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-base/src/ajax.js"],"sourcesContent":["import { isNullOrUndefined, merge } from './util';\nvar headerRegex = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm;\nvar defaultType = 'GET';\n/**\n * Ajax class provides ability to make asynchronous HTTP request to the server\n * ```typescript\n *   var ajax = new Ajax(\"index.html\", \"GET\", true);\n *   ajax.send().then(\n *               function (value) {\n *                   console.log(value);\n *               },\n *               function (reason) {\n *                   console.log(reason);\n *               });\n * ```\n */\nvar Ajax = /** @class */ (function () {\n    /**\n     * Constructor for Ajax class\n     *\n     * @param  {string|Object} options ?\n     * @param  {string} type ?\n     * @param  {boolean} async ?\n     * @returns defaultType any\n     */\n    function Ajax(options, type, async, contentType) {\n        /**\n         * A boolean value indicating whether the request should be sent asynchronous or not.\n         *\n         * @default true\n         */\n        this.mode = true;\n        /**\n         * A boolean value indicating whether to ignore the promise reject.\n         *\n         * @private\n         * @default true\n         */\n        this.emitError = true;\n        this.options = {};\n        if (typeof options === 'string') {\n            this.url = options;\n            this.type = type ? type.toUpperCase() : defaultType;\n            this.mode = !isNullOrUndefined(async) ? async : true;\n        }\n        else if (typeof options === 'object') {\n            this.options = options;\n            merge(this, this.options);\n        }\n        this.type = this.type ? this.type.toUpperCase() : defaultType;\n        this.contentType = (this.contentType !== undefined) ? this.contentType : contentType;\n    }\n    /**\n     *\n     * Send the request to server.\n     *\n     * @param {any} data - To send the user data\n     * @return {Promise} ?\n     */\n    Ajax.prototype.send = function (data) {\n        var _this = this;\n        this.data = isNullOrUndefined(data) ? this.data : data;\n        var eventArgs = {\n            cancel: false,\n            httpRequest: null\n        };\n        var promise = new Promise(function (resolve, reject) {\n            _this.httpRequest = new XMLHttpRequest();\n            _this.httpRequest.onreadystatechange = function () { _this.stateChange(resolve, reject); };\n            if (!isNullOrUndefined(_this.onLoad)) {\n                _this.httpRequest.onload = _this.onLoad;\n            }\n            if (!isNullOrUndefined(_this.onProgress)) {\n                _this.httpRequest.onprogress = _this.onProgress;\n            }\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(_this.onAbort)) {\n                _this.httpRequest.onabort = _this.onAbort;\n            }\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(_this.onError)) {\n                _this.httpRequest.onerror = _this.onError;\n            }\n            //** Upload Events **/\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(_this.onUploadProgress)) {\n                _this.httpRequest.upload.onprogress = _this.onUploadProgress;\n            }\n            _this.httpRequest.open(_this.type, _this.url, _this.mode);\n            // Set default headers\n            if (!isNullOrUndefined(_this.data) && _this.contentType !== null) {\n                _this.httpRequest.setRequestHeader('Content-Type', _this.contentType || 'application/json; charset=utf-8');\n            }\n            if (_this.beforeSend) {\n                eventArgs.httpRequest = _this.httpRequest;\n                _this.beforeSend(eventArgs);\n            }\n            if (!eventArgs.cancel) {\n                _this.httpRequest.send(!isNullOrUndefined(_this.data) ? _this.data : null);\n            }\n        });\n        return promise;\n    };\n    Ajax.prototype.successHandler = function (data) {\n        if (this.onSuccess) {\n            this.onSuccess(data, this);\n        }\n        return data;\n    };\n    Ajax.prototype.failureHandler = function (reason) {\n        if (this.onFailure) {\n            this.onFailure(this.httpRequest);\n        }\n        return reason;\n    };\n    Ajax.prototype.stateChange = function (resolve, reject) {\n        var data = this.httpRequest.responseText;\n        if (this.dataType && this.dataType.toLowerCase() === 'json') {\n            if (data === '') {\n                data = undefined;\n            }\n            else {\n                try {\n                    data = JSON.parse(data);\n                }\n                catch (error) {\n                    // no exception handle\n                }\n            }\n        }\n        if (this.httpRequest.readyState === 4) {\n            //success range should be 200 to 299\n            if ((this.httpRequest.status >= 200 && this.httpRequest.status <= 299) || this.httpRequest.status === 304) {\n                resolve(this.successHandler(data));\n            }\n            else {\n                if (this.emitError) {\n                    reject(new Error(this.failureHandler(this.httpRequest.statusText)));\n                }\n                else {\n                    resolve();\n                }\n            }\n        }\n    };\n    /**\n     * To get the response header from XMLHttpRequest\n     *\n     * @param  {string} key Key to search in the response header\n     * @returns {string} ?\n     */\n    Ajax.prototype.getResponseHeader = function (key) {\n        var responseHeaders;\n        var header;\n        // eslint-disable-next-line\n        responseHeaders = {};\n        var headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        while (headers) {\n            responseHeaders[headers[1].toLowerCase()] = headers[2];\n            headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        }\n        // eslint-disable-next-line\n        header = responseHeaders[key.toLowerCase()];\n        return isNullOrUndefined(header) ? null : header;\n    };\n    return Ajax;\n}());\nexport { Ajax };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}