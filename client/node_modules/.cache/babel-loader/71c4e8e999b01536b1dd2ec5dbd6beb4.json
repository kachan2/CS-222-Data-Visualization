{"ast":null,"code":"import { extend, isNullOrUndefined } from './util';\nimport { defaultCulture } from './internationalization';\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\nvar L10n = /** @class */function () {\n  /**\n   * Constructor\n   *\n   * @param {string} controlName ?\n   * @param {Object} localeStrings ?\n   * @param {string} locale ?\n   */\n  function L10n(controlName, localeStrings, locale) {\n    this.controlName = controlName;\n    this.localeStrings = localeStrings;\n    this.setLocale(locale || defaultCulture);\n  }\n  /**\n   * Sets the locale text\n   *\n   * @param {string} locale ?\n   * @returns {void} ?\n   */\n  L10n.prototype.setLocale = function (locale) {\n    var intLocale = this.intGetControlConstant(L10n.locale, locale);\n    this.currentLocale = intLocale || this.localeStrings;\n  };\n  /**\n   * Sets the global locale for all components.\n   *\n   * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n   * @returns {void} ?\n   */\n  L10n.load = function (localeObject) {\n    this.locale = extend(this.locale, localeObject, {}, true);\n  };\n  /**\n   * Returns current locale text for the property based on the culture name and control name.\n   *\n   * @param {string} prop - specifies the property for which localize text to be returned.\n   * @returns {string} ?\n   */\n  L10n.prototype.getConstant = function (prop) {\n    // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n    if (!isNullOrUndefined(this.currentLocale[prop])) {\n      return this.currentLocale[prop];\n    } else {\n      return this.localeStrings[prop] || '';\n    }\n  };\n  /**\n   * Returns the control constant object for current object and the locale specified.\n   *\n   * @param {Object} curObject ?\n   * @param {string} locale ?\n   * @returns {Object} ?\n   */\n  L10n.prototype.intGetControlConstant = function (curObject, locale) {\n    if (curObject[locale]) {\n      return curObject[locale][this.controlName];\n    }\n    return null;\n  };\n  L10n.locale = {};\n  return L10n;\n}();\nexport { L10n };","map":{"version":3,"names":["extend","isNullOrUndefined","defaultCulture","L10n","controlName","localeStrings","locale","setLocale","prototype","intLocale","intGetControlConstant","currentLocale","load","localeObject","getConstant","prop","curObject"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-base/src/l10n.js"],"sourcesContent":["import { extend, isNullOrUndefined } from './util';\nimport { defaultCulture } from './internationalization';\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\nvar L10n = /** @class */ (function () {\n    /**\n     * Constructor\n     *\n     * @param {string} controlName ?\n     * @param {Object} localeStrings ?\n     * @param {string} locale ?\n     */\n    function L10n(controlName, localeStrings, locale) {\n        this.controlName = controlName;\n        this.localeStrings = localeStrings;\n        this.setLocale(locale || defaultCulture);\n    }\n    /**\n     * Sets the locale text\n     *\n     * @param {string} locale ?\n     * @returns {void} ?\n     */\n    L10n.prototype.setLocale = function (locale) {\n        var intLocale = this.intGetControlConstant(L10n.locale, locale);\n        this.currentLocale = intLocale || this.localeStrings;\n    };\n    /**\n     * Sets the global locale for all components.\n     *\n     * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n     * @returns {void} ?\n     */\n    L10n.load = function (localeObject) {\n        this.locale = extend(this.locale, localeObject, {}, true);\n    };\n    /**\n     * Returns current locale text for the property based on the culture name and control name.\n     *\n     * @param {string} prop - specifies the property for which localize text to be returned.\n     * @returns {string} ?\n     */\n    L10n.prototype.getConstant = function (prop) {\n        // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n        if (!isNullOrUndefined(this.currentLocale[prop])) {\n            return this.currentLocale[prop];\n        }\n        else {\n            return this.localeStrings[prop] || '';\n        }\n    };\n    /**\n     * Returns the control constant object for current object and the locale specified.\n     *\n     * @param {Object} curObject ?\n     * @param {string} locale ?\n     * @returns {Object} ?\n     */\n    L10n.prototype.intGetControlConstant = function (curObject, locale) {\n        if ((curObject)[locale]) {\n            return (curObject)[locale][this.controlName];\n        }\n        return null;\n    };\n    L10n.locale = {};\n    return L10n;\n}());\nexport { L10n };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,iBAAiB,QAAQ,QAAQ;AAClD,SAASC,cAAc,QAAQ,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAG,aAAe,YAAY;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,IAAI,CAACC,WAAW,EAAEC,aAAa,EAAEC,MAAM,EAAE;IAC9C,IAAI,CAACF,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACE,SAAS,CAACD,MAAM,IAAIJ,cAAc,CAAC;EAC5C;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,IAAI,CAACK,SAAS,CAACD,SAAS,GAAG,UAAUD,MAAM,EAAE;IACzC,IAAIG,SAAS,GAAG,IAAI,CAACC,qBAAqB,CAACP,IAAI,CAACG,MAAM,EAAEA,MAAM,CAAC;IAC/D,IAAI,CAACK,aAAa,GAAGF,SAAS,IAAI,IAAI,CAACJ,aAAa;EACxD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIF,IAAI,CAACS,IAAI,GAAG,UAAUC,YAAY,EAAE;IAChC,IAAI,CAACP,MAAM,GAAGN,MAAM,CAAC,IAAI,CAACM,MAAM,EAAEO,YAAY,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;EAC7D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIV,IAAI,CAACK,SAAS,CAACM,WAAW,GAAG,UAAUC,IAAI,EAAE;IACzC;IACA,IAAI,CAACd,iBAAiB,CAAC,IAAI,CAACU,aAAa,CAACI,IAAI,CAAC,CAAC,EAAE;MAC9C,OAAO,IAAI,CAACJ,aAAa,CAACI,IAAI,CAAC;IACnC,CAAC,MACI;MACD,OAAO,IAAI,CAACV,aAAa,CAACU,IAAI,CAAC,IAAI,EAAE;IACzC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIZ,IAAI,CAACK,SAAS,CAACE,qBAAqB,GAAG,UAAUM,SAAS,EAAEV,MAAM,EAAE;IAChE,IAAKU,SAAS,CAAEV,MAAM,CAAC,EAAE;MACrB,OAAQU,SAAS,CAAEV,MAAM,CAAC,CAAC,IAAI,CAACF,WAAW,CAAC;IAChD;IACA,OAAO,IAAI;EACf,CAAC;EACDD,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;EAChB,OAAOH,IAAI;AACf,CAAC,EAAG;AACJ,SAASA,IAAI"},"metadata":{},"sourceType":"module"}