{"ast":null,"code":"/**\n * Module loading operations\n */\nimport { createInstance, setValue, getValue, deleteObject } from './util';\nvar MODULE_SUFFIX = 'Module';\nvar ModuleLoader = /** @class */function () {\n  function ModuleLoader(parent) {\n    this.loadedModules = [];\n    this.parent = parent;\n  }\n  /**\n   * Inject required modules in component library\n   *\n   * @returns {void} ?\n   * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required\n   * @param {Function[]} moduleList - Array of modules to be injected from sample side\n   */\n  ModuleLoader.prototype.inject = function (requiredModules, moduleList) {\n    var reqLength = requiredModules.length;\n    if (reqLength === 0) {\n      this.clean();\n      return;\n    }\n    if (this.loadedModules.length) {\n      this.clearUnusedModule(requiredModules);\n    }\n    for (var i = 0; i < reqLength; i++) {\n      var modl = requiredModules[i];\n      for (var _i = 0, moduleList_1 = moduleList; _i < moduleList_1.length; _i++) {\n        var module = moduleList_1[_i];\n        var modName = modl.member;\n        if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {\n          var moduleObject = createInstance(module, modl.args);\n          var memberName = this.getMemberName(modName);\n          if (modl.isProperty) {\n            setValue(memberName, module, this.parent);\n          } else {\n            setValue(memberName, moduleObject, this.parent);\n          }\n          var loadedModule = modl;\n          loadedModule.member = memberName;\n          this.loadedModules.push(loadedModule);\n        }\n      }\n    }\n  };\n  /**\n   * To remove the created object while destroying the control\n   *\n   * @returns {void}\n   */\n  ModuleLoader.prototype.clean = function () {\n    for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {\n      var modules = _a[_i];\n      if (!modules.isProperty) {\n        getValue(modules.member, this.parent).destroy();\n      }\n    }\n    this.loadedModules = [];\n  };\n  /**\n   * Removes all unused modules\n   *\n   * @param {ModuleDeclaration[]} moduleList ?\n   * @returns {void} ?\n   */\n  ModuleLoader.prototype.clearUnusedModule = function (moduleList) {\n    var _this = this;\n    var usedModules = moduleList.map(function (arg) {\n      return _this.getMemberName(arg.member);\n    });\n    var removableModule = this.loadedModules.filter(function (module) {\n      return usedModules.indexOf(module.member) === -1;\n    });\n    for (var _i = 0, removableModule_1 = removableModule; _i < removableModule_1.length; _i++) {\n      var mod = removableModule_1[_i];\n      if (!mod.isProperty) {\n        getValue(mod.member, this.parent).destroy();\n      }\n      this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);\n      deleteObject(this.parent, mod.member);\n    }\n  };\n  /**\n   * To get the name of the member.\n   *\n   * @param {string} name ?\n   * @returns {string} ?\n   */\n  ModuleLoader.prototype.getMemberName = function (name) {\n    return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;\n  };\n  /**\n   * Returns boolean based on whether the module specified is loaded or not\n   *\n   * @param {string} modName ?\n   * @returns {boolean} ?\n   */\n  ModuleLoader.prototype.isModuleLoaded = function (modName) {\n    for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {\n      var mod = _a[_i];\n      if (mod.member === this.getMemberName(modName)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  return ModuleLoader;\n}();\nexport { ModuleLoader };","map":{"version":3,"names":["createInstance","setValue","getValue","deleteObject","MODULE_SUFFIX","ModuleLoader","parent","loadedModules","prototype","inject","requiredModules","moduleList","reqLength","length","clean","clearUnusedModule","i","modl","_i","moduleList_1","module","modName","member","getModuleName","isModuleLoaded","moduleObject","args","memberName","getMemberName","isProperty","loadedModule","push","_a","modules","destroy","_this","usedModules","map","arg","removableModule","filter","indexOf","removableModule_1","mod","splice","name","toLowerCase","substring"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-base/src/module-loader.js"],"sourcesContent":["/**\n * Module loading operations\n */\nimport { createInstance, setValue, getValue, deleteObject } from './util';\nvar MODULE_SUFFIX = 'Module';\nvar ModuleLoader = /** @class */ (function () {\n    function ModuleLoader(parent) {\n        this.loadedModules = [];\n        this.parent = parent;\n    }\n    /**\n     * Inject required modules in component library\n     *\n     * @returns {void} ?\n     * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required\n     * @param {Function[]} moduleList - Array of modules to be injected from sample side\n     */\n    ModuleLoader.prototype.inject = function (requiredModules, moduleList) {\n        var reqLength = requiredModules.length;\n        if (reqLength === 0) {\n            this.clean();\n            return;\n        }\n        if (this.loadedModules.length) {\n            this.clearUnusedModule(requiredModules);\n        }\n        for (var i = 0; i < reqLength; i++) {\n            var modl = requiredModules[i];\n            for (var _i = 0, moduleList_1 = moduleList; _i < moduleList_1.length; _i++) {\n                var module = moduleList_1[_i];\n                var modName = modl.member;\n                if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {\n                    var moduleObject = createInstance(module, modl.args);\n                    var memberName = this.getMemberName(modName);\n                    if (modl.isProperty) {\n                        setValue(memberName, module, this.parent);\n                    }\n                    else {\n                        setValue(memberName, moduleObject, this.parent);\n                    }\n                    var loadedModule = modl;\n                    loadedModule.member = memberName;\n                    this.loadedModules.push(loadedModule);\n                }\n            }\n        }\n    };\n    /**\n     * To remove the created object while destroying the control\n     *\n     * @returns {void}\n     */\n    ModuleLoader.prototype.clean = function () {\n        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {\n            var modules = _a[_i];\n            if (!modules.isProperty) {\n                getValue(modules.member, this.parent).destroy();\n            }\n        }\n        this.loadedModules = [];\n    };\n    /**\n     * Removes all unused modules\n     *\n     * @param {ModuleDeclaration[]} moduleList ?\n     * @returns {void} ?\n     */\n    ModuleLoader.prototype.clearUnusedModule = function (moduleList) {\n        var _this = this;\n        var usedModules = moduleList.map(function (arg) { return _this.getMemberName(arg.member); });\n        var removableModule = this.loadedModules.filter(function (module) {\n            return usedModules.indexOf(module.member) === -1;\n        });\n        for (var _i = 0, removableModule_1 = removableModule; _i < removableModule_1.length; _i++) {\n            var mod = removableModule_1[_i];\n            if (!mod.isProperty) {\n                getValue(mod.member, this.parent).destroy();\n            }\n            this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);\n            deleteObject(this.parent, mod.member);\n        }\n    };\n    /**\n     * To get the name of the member.\n     *\n     * @param {string} name ?\n     * @returns {string} ?\n     */\n    ModuleLoader.prototype.getMemberName = function (name) {\n        return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;\n    };\n    /**\n     * Returns boolean based on whether the module specified is loaded or not\n     *\n     * @param {string} modName ?\n     * @returns {boolean} ?\n     */\n    ModuleLoader.prototype.isModuleLoaded = function (modName) {\n        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {\n            var mod = _a[_i];\n            if (mod.member === this.getMemberName(modName)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return ModuleLoader;\n}());\nexport { ModuleLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}