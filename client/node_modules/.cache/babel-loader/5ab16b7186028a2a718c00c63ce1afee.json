{"ast":null,"code":"import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */function () {\n  function PdfCrossTable() {\n    /**\n     * The modified `objects` that should be saved.\n     * @private\n     */\n    this.objects = new Dictionary();\n    /**\n     * Holds `maximal generation number` or offset to object.\n     * @default 0\n     * @private\n     */\n    this.maxGenNumIndex = 0;\n    /**\n     * The `number of the objects`.\n     * @default 0\n     * @private\n     */\n    this.objectCount = 0;\n    /**\n     * Internal variable for accessing fields from `DictionryProperties` class.\n     * @default new PdfDictionaryProperties()\n     * @private\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n  }\n  Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n    //Properties\n    /**\n     * Gets or sets if the document `is merged`.\n     * @private\n     */\n    get: function () {\n      return this.merging;\n    },\n    set: function (value) {\n      this.merging = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n    /**\n     * Gets the `trailer`.\n     * @private\n     */\n    get: function () {\n      if (this.internalTrailer == null) {\n        this.internalTrailer = new PdfStream();\n      }\n      return this.internalTrailer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n    /**\n     * Gets or sets the main `PdfDocument` class instance.\n     * @private\n     */\n    get: function () {\n      return this.pdfDocument;\n    },\n    set: function (value) {\n      this.pdfDocument = value;\n      this.items = this.pdfDocument.pdfObjects;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n    /**\n     * Gets the catched `PDF object` main collection.\n     * @private\n     */\n    get: function () {\n      return this.items;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n    /**\n     * Gets the `object collection`.\n     * @private\n     */\n    get: function () {\n      return this.pdfDocument.pdfObjects;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n    /**\n     * Gets or sets the `number of the objects` within the document.\n     * @private\n     */\n    get: function () {\n      return this.objectCount;\n    },\n    set: function (value) {\n      this.objectCount = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n    /**\n     * Returns `next available object number`.\n     * @private\n     */\n    get: function () {\n      this.count = this.count + 1;\n      return this.count;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfCrossTable.prototype.save = function (writer, filename) {\n    this.saveHead(writer);\n    var state = false;\n    this.mappedReferences = null;\n    this.objects.clear();\n    this.markTrailerReferences();\n    this.saveObjects(writer);\n    var saveCount = this.count;\n    var xrefPos = writer.position;\n    this.registerObject(0, new PdfReference(0, -1), true);\n    var prevXRef = 0;\n    writer.write(Operators.xref);\n    writer.write(Operators.newLine);\n    this.saveSections(writer);\n    this.saveTrailer(writer, this.count, prevXRef);\n    this.saveTheEndess(writer, xrefPos);\n    this.count = saveCount;\n    for (var i = 0; i < this.objectCollection.count; ++i) {\n      var oi = this.objectCollection.items(i);\n      oi.object.isSaving = false;\n    }\n    if (typeof filename === 'undefined') {\n      return writer.stream.buffer;\n    } else {\n      writer.stream.save(filename);\n    }\n  };\n  /**\n   * `Saves the endess` of the file.\n   * @private\n   */\n  PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n    writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n    writer.write(xrefPos.toString() + Operators.newLine);\n    writer.write(Operators.eof + Operators.newLine);\n  };\n  /**\n   * `Saves the new trailer` dictionary.\n   * @private\n   */\n  PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n    writer.write(Operators.trailer + Operators.newLine);\n    // Save the dictionary.\n    var trailer = this.trailer;\n    trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n    trailer = new PdfDictionary(trailer); // Make it real dictionary.\n    trailer.setEncrypt(false);\n    trailer.save(writer);\n  };\n  /**\n   * `Saves the xref section`.\n   * @private\n   */\n  PdfCrossTable.prototype.saveSections = function (writer) {\n    var objectNum = 0;\n    var count = 0;\n    do {\n      count = this.prepareSubsection(objectNum);\n      this.saveSubsection(writer, objectNum, count);\n      objectNum += count;\n    } while (count !== 0);\n  };\n  /**\n   * `Saves a subsection`.\n   * @private\n   */\n  PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n    if (count <= 0 || objectNum >= this.count) {\n      return;\n    }\n    var subsectionHead = '{0} {1}{2}';\n    writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n    for (var i = objectNum; i <= objectNum + count; ++i) {\n      var obj = this.objects.getValue(i);\n      var str = '';\n      if (obj.type === ObjectType.Free) {\n        str = this.getItem(obj.offset, 65535, true);\n      } else {\n        str = this.getItem(obj.offset, obj.generation, false);\n      }\n      writer.write(str);\n    }\n  };\n  /**\n   * Generates string for `xref table item`.\n   * @private\n   */\n  PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n    var returnString = '';\n    var addOffsetLength = 10 - offset.toString().length;\n    if (genNumber <= 0) {\n      genNumber = 0;\n    }\n    var addGenNumberLength = 5 - genNumber.toString().length <= 0 ? 0 : 5 - genNumber.toString().length;\n    for (var index = 0; index < addOffsetLength; index++) {\n      returnString = returnString + '0';\n    }\n    returnString = returnString + offset.toString() + ' ';\n    for (var index = 0; index < addGenNumberLength; index++) {\n      returnString = returnString + '0';\n    }\n    returnString = returnString + genNumber.toString() + ' ';\n    returnString = returnString + (isFree ? Operators.f : Operators.n) + Operators.newLine;\n    return returnString;\n  };\n  /**\n   * `Prepares a subsection` of the current section within the cross-reference table.\n   * @private\n   */\n  PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n    var count = 0;\n    var i;\n    var total = this.count;\n    for (var k = 0; k < this.document.pdfObjects.count; k++) {\n      var reference = this.document.pdfObjects.items(k).reference;\n      var refString = reference.toString();\n      var refArray = refString.split(' ');\n    }\n    if (objectNum >= total) {\n      return count;\n    }\n    // search for first changed indirect object.\n    for (i = objectNum; i < total; ++i) {\n      break;\n    }\n    objectNum = i;\n    // look up for all indirect objects in one subsection.\n    for (; i < total; ++i) {\n      ++count;\n    }\n    return count;\n  };\n  /**\n   * `Marks the trailer references` being saved.\n   * @private\n   */\n  PdfCrossTable.prototype.markTrailerReferences = function () {\n    var tempArray;\n    var keys = this.trailer.items.keys();\n    var values = this.trailer.items.values();\n  };\n  /**\n   * `Saves the head`.\n   * @private\n   */\n  PdfCrossTable.prototype.saveHead = function (writer) {\n    var version = this.generateFileVersion(writer.document);\n    writer.write('%PDF-' + version);\n    writer.write(Operators.newLine);\n  };\n  /**\n   * Generates the `version` of the file.\n   * @private\n   */\n  PdfCrossTable.prototype.generateFileVersion = function (document) {\n    var iVersion = 4;\n    var version = '1.' + iVersion.toString();\n    return version;\n  };\n  PdfCrossTable.prototype.getReference = function (obj, bNew) {\n    if (typeof bNew === 'undefined') {\n      var wasNew = false;\n      return this.getReference(obj, wasNew);\n    } else {\n      //code splitted for reducing lines of code exceeds 100.\n      return this.getSubReference(obj, bNew);\n    }\n  };\n  /**\n   * Retrieves the `reference` of the object given.\n   * @private\n   */\n  PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n    var isNew = false;\n    var wasNew;\n    var reference = null;\n    // if (obj.IsSaving) {\n    if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n      var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n      reference = tempObj.reference;\n      wasNew = tempObj.wasNew;\n    }\n    if (reference == null) {\n      if (obj.status === ObjectStatus.Registered) {\n        wasNew = false;\n      } else {\n        wasNew = true;\n      }\n    } else {\n      wasNew = false;\n    }\n    // need to add mapped reference code\n    if (reference == null) {\n      var objnumber = this.nextObjNumber;\n      reference = new PdfReference(objnumber, 0);\n      var found = void 0;\n      if (wasNew) {\n        this.document.pdfObjects.add(obj);\n        this.document.pdfObjects.trySetReference(obj, reference, found);\n        var tempIndex = this.document.pdfObjects.count - 1;\n        var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n        var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n        this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n        obj.position = -1;\n      } else {\n        this.document.pdfObjects.trySetReference(obj, reference, found);\n      }\n      obj.objectCollectionIndex = reference.objNumber;\n      obj.status = ObjectStatus.None;\n      isNew = true;\n    }\n    bNew = isNew || this.bForceNew;\n    return reference;\n  };\n  /**\n   * `Saves all objects` in the collection.\n   * @private\n   */\n  PdfCrossTable.prototype.saveObjects = function (writer) {\n    var objectCollection = this.objectCollection;\n    for (var i = 0; i < objectCollection.count; ++i) {\n      var oi = objectCollection.items(i);\n      var obj = oi.object;\n      obj.isSaving = true;\n      this.saveIndirectObject(obj, writer);\n    }\n  };\n  /**\n   * `Saves indirect object`.\n   * @private\n   */\n  PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n    var reference = this.getReference(obj);\n    if (obj instanceof PdfCatalog) {\n      this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n    }\n    // NOTE :  This is needed for correct string objects encryption.\n    this.pdfDocument.currentSavingObj = reference;\n    var tempArchive = false;\n    tempArchive = obj.getArchive();\n    var allowedType = !(obj instanceof PdfStream || !tempArchive || obj instanceof PdfCatalog);\n    var sigFlag = false;\n    this.registerObject(writer.position, reference);\n    this.doSaveObject(obj, reference, writer);\n  };\n  /**\n   * Performs `real saving` of the save object.\n   * @private\n   */\n  PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n    var correctPosition = writer.length;\n    writer.write(reference.objNumber.toString());\n    writer.write(Operators.whiteSpace);\n    writer.write(reference.genNumber.toString());\n    writer.write(Operators.whiteSpace);\n    writer.write(Operators.obj);\n    writer.write(Operators.newLine);\n    obj.save(writer);\n    var stream = writer.stream;\n    writer.write(Operators.endObj);\n    writer.write(Operators.newLine);\n  };\n  PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n    if (typeof free === 'boolean') {\n      // Register the object by its number.\n      this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n      this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n    } else if (typeof free === 'undefined') {\n      // Register the object by its number.\n      this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n      this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n    }\n  };\n  /**\n   * `Dereferences` the specified primitive object.\n   * @private\n   */\n  PdfCrossTable.dereference = function (obj) {\n    var rh = obj;\n    if (rh != null) {\n      obj = rh.object;\n    }\n    return obj;\n  };\n  return PdfCrossTable;\n}();\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */function () {\n  function RegisteredObject(offset, reference, free) {\n    var tempOffset = offset;\n    this.offsetNumber = tempOffset;\n    var tempReference = reference;\n    this.generation = tempReference.genNumber;\n    this.object = tempReference.objNumber;\n    if (typeof free === 'undefined') {\n      this.type = ObjectType.Normal;\n    } else {\n      this.type = ObjectType.Free;\n    }\n  }\n  Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n    //Properties\n    /**\n     * Gets the `object number`.\n     * @private\n     */\n    get: function () {\n      return this.object;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n    /**\n     * Gets the `offset`.\n     * @private\n     */\n    get: function () {\n      var result;\n      result = this.offsetNumber;\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return RegisteredObject;\n}();\nexport { RegisteredObject };","map":{"version":3,"names":["ObjectStatus","PdfDictionary","DictionaryProperties","Operators","Dictionary","PdfReference","ObjectType","PdfStream","PdfNumber","PdfCatalog","PdfCrossTable","objects","maxGenNumIndex","objectCount","dictionaryProperties","Object","defineProperty","prototype","get","merging","set","value","enumerable","configurable","internalTrailer","pdfDocument","items","pdfObjects","count","save","writer","filename","saveHead","state","mappedReferences","clear","markTrailerReferences","saveObjects","saveCount","xrefPos","position","registerObject","prevXRef","write","xref","newLine","saveSections","saveTrailer","saveTheEndess","i","objectCollection","oi","object","isSaving","stream","buffer","startxref","toString","eof","trailer","setValue","size","setEncrypt","objectNum","prepareSubsection","saveSubsection","subsectionHead","obj","getValue","str","type","Free","getItem","offset","generation","genNumber","isFree","returnString","addOffsetLength","length","addGenNumberLength","index","f","n","total","k","document","reference","refString","refArray","split","tempArray","keys","values","version","generateFileVersion","iVersion","getReference","bNew","wasNew","getSubReference","isNew","objectCollectionIndex","tempObj","status","Registered","objnumber","nextObjNumber","found","add","trySetReference","tempIndex","tempkey","objectCollections","objNumber","tempvalue","mainObjectCollection","None","bForceNew","saveIndirectObject","root","currentSavingObj","tempArchive","getArchive","allowedType","sigFlag","doSaveObject","correctPosition","whiteSpace","endObj","free","RegisteredObject","Math","max","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","result"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-cross-table.js"],"sourcesContent":["import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}