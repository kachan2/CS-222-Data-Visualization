{"ast":null,"code":"import { getValue, setValue, merge, isBlazor } from './util';\nimport { Base } from './base';\n/**\n * To detect the changes for inner properties.\n *\n * @private\n */\nvar ChildProperty = /** @class */function () {\n  function ChildProperty(parent, propName, defaultValue, isArray) {\n    this.isComplexArraySetter = false;\n    this.properties = {};\n    this.changedProperties = {};\n    this.childChangedProperties = {};\n    this.oldProperties = {};\n    // eslint-disable-next-line\n    this.finalUpdate = function () {};\n    this.callChildDataBind = getValue('callChildDataBind', Base);\n    this.parentObj = parent;\n    this.controlParent = this.parentObj.controlParent || this.parentObj;\n    this.propName = propName;\n    this.isParentArray = isArray;\n    this.setProperties(defaultValue, true);\n  }\n  /**\n   * Updates the property changes\n   *\n   * @param {boolean} val ?\n   * @param {string} propName ?\n   * @returns {void} ?\n   */\n  ChildProperty.prototype.updateChange = function (val, propName) {\n    if (val === true) {\n      this.parentObj.childChangedProperties[propName] = val;\n    } else {\n      delete this.parentObj.childChangedProperties[propName];\n    }\n    if (this.parentObj.updateChange) {\n      this.parentObj.updateChange(val, this.parentObj.propName);\n    }\n  };\n  /**\n   * Updates time out duration\n   *\n   * @returns {void} ?\n   */\n  ChildProperty.prototype.updateTimeOut = function () {\n    if (this.parentObj.updateTimeOut) {\n      this.parentObj.finalUpdate();\n      this.parentObj.updateTimeOut();\n    } else {\n      var changeTime_1 = setTimeout(this.parentObj.dataBind.bind(this.parentObj));\n      var clearUpdate = function () {\n        clearTimeout(changeTime_1);\n      };\n      this.finalUpdate = clearUpdate;\n    }\n  };\n  /**\n   * Clears changed properties\n   *\n   * @returns {void} ?\n   */\n  ChildProperty.prototype.clearChanges = function () {\n    this.finalUpdate();\n    this.updateChange(false, this.propName);\n    this.oldProperties = {};\n    this.changedProperties = {};\n  };\n  /**\n   * Set property changes\n   *\n   * @param {Object} prop ?\n   * @param {boolean} muteOnChange ?\n   * @returns {void} ?\n   */\n  ChildProperty.prototype.setProperties = function (prop, muteOnChange) {\n    if (muteOnChange === true) {\n      merge(this, prop);\n      this.updateChange(false, this.propName);\n      this.clearChanges();\n    } else {\n      merge(this, prop);\n    }\n  };\n  /**\n   * Binds data\n   *\n   * @returns {void} ?\n   */\n  ChildProperty.prototype.dataBind = function () {\n    this.callChildDataBind(this.childChangedProperties, this);\n    if (this.isParentArray) {\n      var curIndex = this.parentObj[this.propName].indexOf(this);\n      if (Object.keys(this.changedProperties).length) {\n        setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);\n        setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);\n      }\n    } else {\n      this.parentObj.changedProperties[this.propName] = this.changedProperties;\n      this.parentObj.oldProperties[this.propName] = this.oldProperties;\n    }\n    this.clearChanges();\n  };\n  /**\n   * Saves changes to newer values\n   *\n   * @param {string} key ?\n   * @param {Object} newValue ?\n   * @param {Object} oldValue ?\n   * @param {boolean} restrictServerDataBind ?\n   * @returns {void} ?\n   */\n  ChildProperty.prototype.saveChanges = function (key, newValue, oldValue, restrictServerDataBind) {\n    if (this.controlParent.isProtectedOnChange) {\n      return;\n    }\n    if (!restrictServerDataBind) {\n      this.serverDataBind(key, newValue, true);\n    }\n    this.oldProperties[key] = oldValue;\n    this.changedProperties[key] = newValue;\n    this.updateChange(true, this.propName);\n    this.finalUpdate();\n    this.updateTimeOut();\n  };\n  ChildProperty.prototype.serverDataBind = function (key, value, isSaveChanges, action) {\n    if (isBlazor() && !this.parentObj.isComplexArraySetter) {\n      var parent_1;\n      var newChanges = {};\n      var parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;\n      /* istanbul ignore else  */\n      if (parentKey.indexOf('.') !== -1) {\n        var complexKeys = parentKey.split('.');\n        parent_1 = newChanges;\n        for (var i = 0; i < complexKeys.length; i++) {\n          var isFinal = i === complexKeys.length - 1;\n          parent_1[complexKeys[i]] = isFinal ? value : {};\n          parent_1 = isFinal ? parent_1 : parent_1[complexKeys[i]];\n        }\n      } else {\n        newChanges[parentKey] = {};\n        parent_1 = newChanges[parentKey];\n        newChanges[parentKey][key] = value;\n      }\n      /* istanbul ignore next */\n      if (this.isParentArray) {\n        var actionProperty = 'ejsAction';\n        parent_1[actionProperty] = action ? action : 'none';\n      }\n      this.controlParent.serverDataBind(newChanges);\n    }\n  };\n  ChildProperty.prototype.getParentKey = function (isSaveChanges) {\n    // eslint-disable-next-line\n    var index = '';\n    var propName = this.propName;\n    /* istanbul ignore next */\n    if (this.isParentArray) {\n      index = this.parentObj[this.propName].indexOf(this);\n      var valueLength = this.parentObj[this.propName].length;\n      valueLength = isSaveChanges ? valueLength : valueLength > 0 ? valueLength - 1 : 0;\n      index = index !== -1 ? '-' + index : '-' + valueLength;\n      propName = propName + index;\n    }\n    if (this.controlParent !== this.parentObj) {\n      propName = this.parentObj.getParentKey() + '.' + this.propName + index;\n    }\n    return propName;\n  };\n  return ChildProperty;\n}();\nexport { ChildProperty };","map":{"version":3,"names":["getValue","setValue","merge","isBlazor","Base","ChildProperty","parent","propName","defaultValue","isArray","isComplexArraySetter","properties","changedProperties","childChangedProperties","oldProperties","finalUpdate","callChildDataBind","parentObj","controlParent","isParentArray","setProperties","prototype","updateChange","val","updateTimeOut","changeTime_1","setTimeout","dataBind","bind","clearUpdate","clearTimeout","clearChanges","prop","muteOnChange","curIndex","indexOf","Object","keys","length","saveChanges","key","newValue","oldValue","restrictServerDataBind","isProtectedOnChange","serverDataBind","value","isSaveChanges","action","parent_1","newChanges","parentKey","getParentKey","complexKeys","split","i","isFinal","actionProperty","index","valueLength"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-base/src/child-property.js"],"sourcesContent":["import { getValue, setValue, merge, isBlazor } from './util';\nimport { Base } from './base';\n/**\n * To detect the changes for inner properties.\n *\n * @private\n */\nvar ChildProperty = /** @class */ (function () {\n    function ChildProperty(parent, propName, defaultValue, isArray) {\n        this.isComplexArraySetter = false;\n        this.properties = {};\n        this.changedProperties = {};\n        this.childChangedProperties = {};\n        this.oldProperties = {};\n        // eslint-disable-next-line\n        this.finalUpdate = function () { };\n        this.callChildDataBind = getValue('callChildDataBind', Base);\n        this.parentObj = parent;\n        this.controlParent = this.parentObj.controlParent || this.parentObj;\n        this.propName = propName;\n        this.isParentArray = isArray;\n        this.setProperties(defaultValue, true);\n    }\n    /**\n     * Updates the property changes\n     *\n     * @param {boolean} val ?\n     * @param {string} propName ?\n     * @returns {void} ?\n     */\n    ChildProperty.prototype.updateChange = function (val, propName) {\n        if (val === true) {\n            this.parentObj.childChangedProperties[propName] = val;\n        }\n        else {\n            delete this.parentObj.childChangedProperties[propName];\n        }\n        if (this.parentObj.updateChange) {\n            this.parentObj.updateChange(val, this.parentObj.propName);\n        }\n    };\n    /**\n     * Updates time out duration\n     *\n     * @returns {void} ?\n     */\n    ChildProperty.prototype.updateTimeOut = function () {\n        if (this.parentObj.updateTimeOut) {\n            this.parentObj.finalUpdate();\n            this.parentObj.updateTimeOut();\n        }\n        else {\n            var changeTime_1 = setTimeout(this.parentObj.dataBind.bind(this.parentObj));\n            var clearUpdate = function () {\n                clearTimeout(changeTime_1);\n            };\n            this.finalUpdate = clearUpdate;\n        }\n    };\n    /**\n     * Clears changed properties\n     *\n     * @returns {void} ?\n     */\n    ChildProperty.prototype.clearChanges = function () {\n        this.finalUpdate();\n        this.updateChange(false, this.propName);\n        this.oldProperties = {};\n        this.changedProperties = {};\n    };\n    /**\n     * Set property changes\n     *\n     * @param {Object} prop ?\n     * @param {boolean} muteOnChange ?\n     * @returns {void} ?\n     */\n    ChildProperty.prototype.setProperties = function (prop, muteOnChange) {\n        if (muteOnChange === true) {\n            merge(this, prop);\n            this.updateChange(false, this.propName);\n            this.clearChanges();\n        }\n        else {\n            merge(this, prop);\n        }\n    };\n    /**\n     * Binds data\n     *\n     * @returns {void} ?\n     */\n    ChildProperty.prototype.dataBind = function () {\n        this.callChildDataBind(this.childChangedProperties, this);\n        if (this.isParentArray) {\n            var curIndex = this.parentObj[this.propName].indexOf(this);\n            if (Object.keys(this.changedProperties).length) {\n                setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);\n                setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);\n            }\n        }\n        else {\n            this.parentObj.changedProperties[this.propName] = this.changedProperties;\n            this.parentObj.oldProperties[this.propName] = this.oldProperties;\n        }\n        this.clearChanges();\n    };\n    /**\n     * Saves changes to newer values\n     *\n     * @param {string} key ?\n     * @param {Object} newValue ?\n     * @param {Object} oldValue ?\n     * @param {boolean} restrictServerDataBind ?\n     * @returns {void} ?\n     */\n    ChildProperty.prototype.saveChanges = function (key, newValue, oldValue, restrictServerDataBind) {\n        if (this.controlParent.isProtectedOnChange) {\n            return;\n        }\n        if (!restrictServerDataBind) {\n            this.serverDataBind(key, newValue, true);\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.updateChange(true, this.propName);\n        this.finalUpdate();\n        this.updateTimeOut();\n    };\n    ChildProperty.prototype.serverDataBind = function (key, value, isSaveChanges, action) {\n        if (isBlazor() && !this.parentObj.isComplexArraySetter) {\n            var parent_1;\n            var newChanges = {};\n            var parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;\n            /* istanbul ignore else  */\n            if (parentKey.indexOf('.') !== -1) {\n                var complexKeys = parentKey.split('.');\n                parent_1 = newChanges;\n                for (var i = 0; i < complexKeys.length; i++) {\n                    var isFinal = i === complexKeys.length - 1;\n                    parent_1[complexKeys[i]] = isFinal ? value : {};\n                    parent_1 = isFinal ? parent_1 : parent_1[complexKeys[i]];\n                }\n            }\n            else {\n                newChanges[parentKey] = {};\n                parent_1 = newChanges[parentKey];\n                newChanges[parentKey][key] = value;\n            }\n            /* istanbul ignore next */\n            if (this.isParentArray) {\n                var actionProperty = 'ejsAction';\n                parent_1[actionProperty] = action ? action : 'none';\n            }\n            this.controlParent.serverDataBind(newChanges);\n        }\n    };\n    ChildProperty.prototype.getParentKey = function (isSaveChanges) {\n        // eslint-disable-next-line\n        var index = '';\n        var propName = this.propName;\n        /* istanbul ignore next */\n        if (this.isParentArray) {\n            index = this.parentObj[this.propName].indexOf(this);\n            var valueLength = this.parentObj[this.propName].length;\n            valueLength = isSaveChanges ? valueLength : (valueLength > 0 ? valueLength - 1 : 0);\n            index = index !== -1 ? '-' + index : '-' + valueLength;\n            propName = propName + index;\n        }\n        if (this.controlParent !== this.parentObj) {\n            propName = this.parentObj.getParentKey() + '.' + this.propName + index;\n        }\n        return propName;\n    };\n    return ChildProperty;\n}());\nexport { ChildProperty };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}