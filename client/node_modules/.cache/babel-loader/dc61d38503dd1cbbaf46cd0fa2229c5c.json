{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */function (_super) {\n  __extends(PdfTrueTypeFont, _super);\n  function PdfTrueTypeFont(base64String, size, style) {\n    var _this = _super.call(this, size) || this;\n    /**\n     * Indicates whether the font is embedded or not.\n     * @private\n     */\n    _this.isEmbedFont = false;\n    /**\n     * Indicates whether the font is unicoded or not.\n     * @private\n     */\n    _this.isUnicode = true;\n    if (style !== undefined) {\n      _this.createFontInternal(base64String, style);\n    } else {\n      _this.createFontInternal(base64String, PdfFontStyle.Regular);\n    }\n    return _this;\n  }\n  PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n    var result = false;\n    //let result : boolean = this.fontInternal.equalsToFont(font);\n    return result;\n  };\n  PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n    var width = 0;\n    if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n      var returnValue = this.getUnicodeLineWidth(line, /*out*/width, format);\n      width = returnValue.width;\n    } else {\n      width = this.fontInternal.getLineWidth(line);\n    }\n    var size = this.metrics.getSize(format);\n    width *= PdfFont.charSizeMultiplier * size;\n    width = this.applyFormatSettings(line, format, width);\n    return width;\n  };\n  /**\n   * Returns width of the char.\n   */\n  PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n    var codeWidth = this.fontInternal.getCharWidth(charCode);\n    var size = this.metrics.getSize(format);\n    codeWidth *= 0.001 * size;\n    return codeWidth;\n  };\n  //Implementation\n  PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n    this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n    this.calculateStyle(style);\n    this.initializeInternals();\n  };\n  PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n    var iStyle = this.fontInternal.ttfMetrics.macStyle;\n    if ((style & PdfFontStyle.Underline) !== 0) {\n      iStyle |= PdfFontStyle.Underline;\n    }\n    if ((style & PdfFontStyle.Strikeout) !== 0) {\n      iStyle |= PdfFontStyle.Strikeout;\n    }\n    this.setStyle(iStyle);\n  };\n  PdfTrueTypeFont.prototype.initializeInternals = function () {\n    var equalFont = null;\n    if (PdfDocument.enableCache) {\n      // Search for the similar fonts.\n      equalFont = PdfDocument.cache.search(this);\n    }\n    var internals = null;\n    // There is not equal font in the cache.\n    if (equalFont !== null && equalFont !== undefined) {\n      // Get the settings from the cached font.\n      internals = equalFont.getInternals();\n      var metrics = equalFont.metrics;\n      metrics = metrics.clone();\n      metrics.size = this.size;\n      this.metrics = metrics;\n      this.fontInternal = equalFont.fontInternal;\n    } else {\n      if (equalFont == null) {\n        if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n          this.fontInternal.isEmbed = this.isEmbedFont;\n        }\n        this.fontInternal.createInternals();\n        internals = this.fontInternal.getInternals();\n        this.metrics = this.fontInternal.metrics;\n      }\n    }\n    this.metrics.isUnicodeFont = true;\n    this.setInternals(internals);\n    //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n  };\n  /**\n   * Stores used symbols.\n   */\n  PdfTrueTypeFont.prototype.setSymbols = function (text) {\n    var internalFont = this.fontInternal;\n    if (internalFont != null) {\n      internalFont.setSymbols(text);\n    }\n  };\n  Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n    /**\n     * Property\n     *\n     */\n    get: function () {\n      return this.isUnicode;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // public get Font() : UnicodeTrueTypeFont {\n  //     return this.fontInternal as UnicodeTrueTypeFont;\n  // }\n  PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/width, format) {\n    // if (line == null) {\n    //     throw new Error('ArgumentNullException : line');\n    // }\n    width = 0;\n    var glyphIndices = null;\n    var rtlRender = new RtlRenderer();\n    /* tslint:disable-next-line:max-line-length */\n    var result = rtlRender.getGlyphIndex(line, this, format.textDirection === PdfTextDirection.RightToLeft ? true : false, /*out*/glyphIndices, true);\n    var resultGlyph = result.success;\n    glyphIndices = result.glyphs;\n    if (resultGlyph && glyphIndices !== null) {\n      var ttfReader = this.fontInternal.ttfReader;\n      for (var i = 0, len = glyphIndices.length; i < len; i++) {\n        var glyphIndex = glyphIndices[i];\n        var glyph = ttfReader.getGlyph(glyphIndex);\n        if (glyph !== null && typeof glyph !== 'undefined') {\n          width += glyph.width;\n        }\n      }\n    }\n    return {\n      success: resultGlyph,\n      width: width\n    };\n  };\n  return PdfTrueTypeFont;\n}(PdfFont);\nexport { PdfTrueTypeFont };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","UnicodeTrueTypeFont","PdfFont","PdfFontStyle","PdfDocument","PdfTextDirection","RtlRenderer","PdfTrueTypeFont","_super","base64String","size","style","_this","call","isEmbedFont","isUnicode","undefined","createFontInternal","Regular","equalsToFont","font","result","getLineWidth","line","format","width","textDirection","None","returnValue","getUnicodeLineWidth","fontInternal","metrics","getSize","charSizeMultiplier","applyFormatSettings","getCharWidth","charCode","codeWidth","calculateStyle","initializeInternals","iStyle","ttfMetrics","macStyle","Underline","Strikeout","setStyle","equalFont","enableCache","cache","search","internals","getInternals","clone","isEmbed","createInternals","isUnicodeFont","setInternals","setSymbols","text","internalFont","defineProperty","get","enumerable","configurable","glyphIndices","rtlRender","getGlyphIndex","RightToLeft","resultGlyph","success","glyphs","ttfReader","i","len","length","glyphIndex","glyph","getGlyph"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-true-type-font.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}