{"ast":null,"code":"import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */function () {\n  function PdfImage() {}\n  Object.defineProperty(PdfImage.prototype, \"width\", {\n    /**\n     * Gets and Sets the `width` of an image.\n     * @private\n     */\n    get: function () {\n      return this.imageWidth;\n    },\n    set: function (value) {\n      this.imageWidth = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfImage.prototype, \"height\", {\n    /**\n     * Gets and Sets the `height` of an image.\n     * @private\n     */\n    get: function () {\n      return this.imageHeight;\n    },\n    set: function (value) {\n      this.imageHeight = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfImage.prototype, \"size\", {\n    /**\n     * Gets or sets the size of the image.\n     * @private\n     */\n    set: function (value) {\n      this.width = value.width;\n      this.height = value.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n    /**\n     * Gets the `physical dimension` of an image.\n     * @private\n     */\n    get: function () {\n      this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n      return new SizeF(this.width, this.height);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfImage.prototype, \"element\", {\n    // /**\n    //  * Gets the `image stream as string`.\n    //  * @private\n    //  */\n    // public static fromString(string : string) : PdfImage {\n    //     let image : PdfImage = new PdfBitmap(string);\n    //     return image;\n    // }\n    /**\n     * Gets the `element` image stream.\n     * @private\n     */\n    get: function () {\n      return this.imageStream;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n    if (typeof horizontalResolution === 'undefined') {\n      var dpiX = PdfUnitConverter.horizontalResolution;\n      var dpiY = PdfUnitConverter.verticalResolution;\n      var size = this.getPointSize(width, height, dpiX, dpiY);\n      return size;\n    } else {\n      var ucX = new PdfUnitConverter(horizontalResolution);\n      var ucY = new PdfUnitConverter(verticalResolution);\n      var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n      var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n      var size = new SizeF(ptWidth, ptHeight);\n      return size;\n    }\n  };\n  return PdfImage;\n}();\nexport { PdfImage };","map":{"version":3,"names":["SizeF","PdfGraphicsUnit","PdfUnitConverter","PdfImage","Object","defineProperty","prototype","get","imageWidth","set","value","enumerable","configurable","imageHeight","width","height","imagePhysicalDimension","getPointSize","horizontalResolution","verticalResolution","imageStream","dpiX","dpiY","size","ucX","ucY","ptWidth","convertUnits","Pixel","Point","ptHeight"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js"],"sourcesContent":["import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}