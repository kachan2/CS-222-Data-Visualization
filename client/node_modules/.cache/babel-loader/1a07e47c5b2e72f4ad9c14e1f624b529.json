{"ast":null,"code":"import { click, itemSelection } from '../index';\nimport { getElement, createStyle, customizeStyle, removeClass, getTargetElement, getElementByID } from '../utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection module class\n */\nvar Selection = /** @class */function () {\n  function Selection(maps) {\n    this.maps = maps;\n    this.addEventListener();\n  }\n  /**\n   * For binding events to selection module\n   *\n   * @returns {void}\n   */\n  Selection.prototype.addEventListener = function () {\n    if (!this.maps.isDestroyed) {\n      this.maps.on(click, this.mouseClick, this);\n    }\n  };\n  /**\n   * For removing events from selection modue\n   *\n   * @returns {void}\n   */\n  Selection.prototype.removeEventListener = function () {\n    if (this.maps.isDestroyed) {\n      return;\n    }\n    this.maps.off(click, this.mouseClick);\n  };\n  Selection.prototype.mouseClick = function (targetElement) {\n    if (!isNullOrUndefined(targetElement['type']) && targetElement['type'].indexOf('touch') !== -1 && isNullOrUndefined(targetElement.id)) {\n      targetElement = targetElement['target'];\n    }\n    if (!isNullOrUndefined(targetElement.id) && (targetElement.id.indexOf('LayerIndex') > -1 || targetElement.id.indexOf('NavigationIndex') > -1)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var shapeData = void 0;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var data = void 0;\n      var shapeIndex = void 0;\n      var dataIndex = void 0;\n      var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n      if (targetElement.id.indexOf('shapeIndex') > -1) {\n        shapeIndex = parseInt(targetElement.id.split('_shapeIndex_')[1].split('_')[0], 10);\n        shapeData = !isNullOrUndefined(this.maps.layers[layerIndex].shapeData['features']) && this.maps.layers[layerIndex].shapeData['features']['length'] > shapeIndex ? this.maps.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] : !isNullOrUndefined(this.maps.layers[layerIndex].shapeData['geometries']) && this.maps.layers[layerIndex].shapeData['geometries']['length'] > shapeIndex ? this.maps.layers[layerIndex].shapeData['geometries'][shapeIndex]['properties'] : null;\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = isNullOrUndefined(dataIndex) ? null : this.maps.layers[layerIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].selectionSettings;\n        this.selectionType = 'Shape';\n      } else if (targetElement.id.indexOf('BubbleIndex') > -1) {\n        var bubbleIndex = parseInt(targetElement.id.split('_BubbleIndex_')[1].split('_')[0], 10);\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].selectionSettings;\n        this.selectionType = 'Bubble';\n      } else if (targetElement.id.indexOf('MarkerIndex') > -1) {\n        var markerIndex = parseInt(targetElement.id.split('_MarkerIndex_')[1].split('_')[0], 10);\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = this.maps.layers[layerIndex].markerSettings[markerIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].markerSettings[markerIndex].selectionSettings;\n        this.selectionType = 'Marker';\n      } else {\n        var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n        shapeData = null;\n        data = {\n          latitude: this.maps.layers[layerIndex].navigationLineSettings[index].latitude,\n          longitude: this.maps.layers[layerIndex].navigationLineSettings[index].longitude\n        };\n        this.selectionsettings = this.maps.layers[layerIndex].navigationLineSettings[index].selectionSettings;\n        this.selectionType = 'navigationline';\n      }\n      if (this.selectionsettings.enable) {\n        this.selectElement(targetElement, layerIndex, data, shapeData);\n      }\n    } else if (this.maps.legendSettings.visible && !this.maps.legendSettings.toggleLegendSettings.enable && this.maps.legendModule && !isNullOrUndefined(targetElement.id) && targetElement.id.indexOf('_Text') === -1 && (targetElement.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 || targetElement.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1)) {\n      this.maps.legendModule.legendHighLightAndSelection(targetElement, 'selection');\n    }\n  };\n  /**\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Selection.prototype.selectElement = function (targetElement, layerIndex, data, shapeData) {\n    this.maps.mapSelect = targetElement ? true : false;\n    if (this.maps.legendModule && this.maps.legendSettings.visible && targetElement.id.indexOf('_MarkerIndex_') === -1) {\n      this.maps.legendModule.shapeHighLightAndSelection(targetElement, data, this.selectionsettings, 'selection', layerIndex);\n    }\n    var shapeToggled = targetElement.id.indexOf('shapeIndex') > -1 && this.maps.legendSettings.visible && this.maps.legendModule ? this.maps.legendModule.shapeToggled : true;\n    if (shapeToggled) {\n      this.selectMap(targetElement, shapeData, data);\n    }\n  };\n  // eslint-disable-next-line valid-jsdoc\n  /**\n   * Public method for selection\n   */\n  Selection.prototype.addSelection = function (layerIndex, name, enable) {\n    var targetElement = getTargetElement(layerIndex, name, enable, this.maps);\n    if (enable) {\n      this.selectMap(targetElement, null, null);\n    } else {\n      removeClass(targetElement);\n    }\n  };\n  /**\n   * Method for selection\n   *\n   * @param {Element} targetElement - Specifies the target element\n   * @param {any} shapeData - Specifies the shape data\n   * @param {any} data - Specifies the data\n   * @returns {void}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Selection.prototype.selectMap = function (targetElement, shapeData, data) {\n    var _this = this;\n    var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n    var parentElement;\n    var children;\n    var selectionClass;\n    var isLineStringShape = targetElement.parentElement.id.indexOf('LineString') > -1;\n    var selectionsettings = this.selectionsettings;\n    var border = {\n      color: isLineStringShape ? this.selectionsettings.fill || this.selectionsettings.border.color : this.selectionsettings.border.color,\n      width: isLineStringShape ? this.selectionsettings.border.width / this.maps.scale : this.selectionsettings.border.width / (this.selectionType === 'Marker' ? 1 : this.maps.scale),\n      opacity: this.selectionsettings.border.opacity\n    };\n    var eventArgs = {\n      opacity: this.selectionsettings.opacity,\n      fill: isLineStringShape ? 'transparent' : this.selectionType !== 'navigationline' ? this.selectionsettings.fill : 'none',\n      border: border,\n      name: itemSelection,\n      target: targetElement.id,\n      cancel: false,\n      shapeData: shapeData,\n      data: data,\n      maps: this.maps\n    };\n    this.maps.trigger('itemSelection', eventArgs, function (observedArgs) {\n      eventArgs.border.opacity = isNullOrUndefined(_this.selectionsettings.border.opacity) ? _this.selectionsettings.opacity : _this.selectionsettings.border.opacity;\n      if (!eventArgs.cancel) {\n        if (targetElement.getAttribute('class') === _this.selectionType + 'selectionMapStyle' || targetElement.getAttribute('class') === 'LineselectionMapStyle') {\n          removeClass(targetElement);\n          _this.removedSelectionList(targetElement);\n          for (var m = 0; m < _this.maps.shapeSelectionItem.length; m++) {\n            if (_this.maps.shapeSelectionItem[m] === eventArgs.shapeData) {\n              _this.maps.shapeSelectionItem.splice(m, 1);\n              break;\n            }\n          }\n          if (targetElement.id.indexOf('NavigationIndex') > -1) {\n            var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n            var layerIndex_1 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n            targetElement.setAttribute('stroke-width', _this.maps.layers[layerIndex_1].navigationLineSettings[index].width.toString());\n            targetElement.setAttribute('stroke', _this.maps.layers[layerIndex_1].navigationLineSettings[index].color);\n          }\n        } else {\n          var layetElement = getElementByID(_this.maps.element.id + '_Layer_Collections');\n          if (!_this.selectionsettings.enableMultiSelect && (layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length > 0 || layetElement.getElementsByClassName('LineselectionMapStyle').length > 0)) {\n            var eleCount = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length;\n            var ele = void 0;\n            for (var k = 0; k < eleCount; k++) {\n              ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n              removeClass(ele);\n              _this.removedSelectionList(ele);\n            }\n            if (layetElement.getElementsByClassName('LineselectionMapStyle').length > 0) {\n              eleCount = layetElement.getElementsByClassName('LineselectionMapStyle').length;\n              for (var k = 0; k < eleCount; k++) {\n                ele = layetElement.getElementsByClassName('LineselectionMapStyle')[0];\n                removeClass(ele);\n                _this.removedSelectionList(ele);\n              }\n            }\n            if (_this.selectionType === 'Shape') {\n              _this.maps.shapeSelectionItem = [];\n              var selectionLength = _this.maps.selectedElementId.length;\n              for (var i = 0; i < selectionLength; i++) {\n                ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                removeClass(ele);\n                var selectedElementIdIndex = _this.maps.selectedElementId.indexOf(ele.getAttribute('id'));\n                _this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n              }\n            }\n            if (ele.id.indexOf('NavigationIndex') > -1) {\n              var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n              var layerIndex_2 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n              ele.setAttribute('stroke-width', _this.maps.layers[layerIndex_2].navigationLineSettings[index].width.toString());\n              ele.setAttribute('stroke', _this.maps.layers[layerIndex_2].navigationLineSettings[index].color);\n            }\n          }\n          if (!isLineStringShape) {\n            if (!getElement(_this.selectionType + 'selectionMap')) {\n              document.body.appendChild(createStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs));\n            } else {\n              customizeStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs);\n            }\n            targetElement.setAttribute('class', _this.selectionType + 'selectionMapStyle');\n          } else {\n            if (!getElement('LineselectionMap')) {\n              document.body.appendChild(createStyle('LineselectionMap', 'LineselectionMapStyle', eventArgs));\n            } else {\n              customizeStyle('LineselectionMap', 'LineselectionMapStyle', eventArgs);\n            }\n            targetElement.setAttribute('class', 'LineselectionMapStyle');\n          }\n          if (targetElement.getAttribute('class') === 'ShapeselectionMapStyle') {\n            _this.maps.shapeSelectionClass = getElement(_this.selectionType + 'selectionMap');\n            _this.maps.selectedElementId.push(targetElement.getAttribute('id'));\n            _this.maps.shapeSelectionItem.push(eventArgs.shapeData);\n          }\n          if (targetElement.getAttribute('class') === 'MarkerselectionMapStyle') {\n            _this.maps.markerSelectionClass = getElement(_this.selectionType + 'selectionMap');\n            _this.maps.selectedMarkerElementId.push(targetElement.getAttribute('id'));\n          }\n          if (targetElement.getAttribute('class') === 'BubbleselectionMapStyle') {\n            _this.maps.bubbleSelectionClass = getElement(_this.selectionType + 'selectionMap');\n            _this.maps.selectedBubbleElementId.push(targetElement.getAttribute('id'));\n          }\n          if (targetElement.getAttribute('class') === 'navigationlineselectionMapStyle') {\n            _this.maps.navigationSelectionClass = getElement(_this.selectionType + 'selectionMap');\n            _this.maps.selectedNavigationElementId.push(targetElement.getAttribute('id'));\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Remove legend selection\n   */\n  // private removeLegendSelection(legendCollection: Object[], targetElement: Element): void {\n  //     let shape: Element;\n  //     if (!this.selectionsettings.enableMultiSelect) {\n  //        for (let i: number = 0; i < legendCollection.length; i++) {\n  //             for (let data of legendCollection[i]['data']) {\n  //                 shape = getElement(this.maps.element.id + '_LayerIndex_' + data['layerIndex'] +\n  //                            '_shapeIndex_' + data['shapeIndex'] + '_dataIndex_' + data['dataIndex']);\n  //                 removeClass(shape);\n  //             }\n  //         }\n  //     }\n  // }\n  /**\n   * Get module name.\n   *\n   * @param {Element} targetElement - Specifies the target element\n   * @returns {void}\n   * @private\n   */\n  Selection.prototype.removedSelectionList = function (targetElement) {\n    if (this.selectionType === 'Shape') {\n      this.maps.selectedElementId.splice(this.maps.selectedElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n    if (this.selectionType === 'Bubble') {\n      this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n    if (this.selectionType === 'Marker') {\n      this.maps.selectedMarkerElementId.splice(this.maps.selectedMarkerElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n    if (this.selectionType === 'navigationline') {\n      this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name\n   */\n  Selection.prototype.getModuleName = function () {\n    return 'Selection';\n  };\n  /**\n   * To destroy the selection.\n   *\n   * @returns {void}\n   * @private\n   */\n  Selection.prototype.destroy = function () {\n    this.selectionsettings = null;\n    this.removeEventListener();\n    this.maps = null;\n  };\n  return Selection;\n}();\nexport { Selection };","map":{"version":3,"names":["click","itemSelection","getElement","createStyle","customizeStyle","removeClass","getTargetElement","getElementByID","isNullOrUndefined","Selection","maps","addEventListener","prototype","isDestroyed","on","mouseClick","removeEventListener","off","targetElement","indexOf","id","shapeData","data","shapeIndex","dataIndex","layerIndex","parseInt","split","layers","dataSource","selectionsettings","selectionSettings","selectionType","bubbleIndex","bubbleSettings","markerIndex","markerSettings","index","latitude","navigationLineSettings","longitude","enable","selectElement","legendSettings","visible","toggleLegendSettings","legendModule","element","legendHighLightAndSelection","mapSelect","shapeHighLightAndSelection","shapeToggled","selectMap","addSelection","name","_this","parentElement","children","selectionClass","isLineStringShape","border","color","fill","width","scale","opacity","eventArgs","target","cancel","trigger","observedArgs","getAttribute","removedSelectionList","m","shapeSelectionItem","length","splice","layerIndex_1","setAttribute","toString","layetElement","enableMultiSelect","getElementsByClassName","eleCount","ele","k","selectionLength","selectedElementId","i","selectedElementIdIndex","layerIndex_2","document","body","appendChild","shapeSelectionClass","push","markerSelectionClass","selectedMarkerElementId","bubbleSelectionClass","selectedBubbleElementId","navigationSelectionClass","selectedNavigationElementId","getModuleName","destroy"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-maps/src/maps/user-interaction/selection.js"],"sourcesContent":["import { click, itemSelection } from '../index';\nimport { getElement, createStyle, customizeStyle, removeClass, getTargetElement, getElementByID } from '../utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection module class\n */\nvar Selection = /** @class */ (function () {\n    function Selection(maps) {\n        this.maps = maps;\n        this.addEventListener();\n    }\n    /**\n     * For binding events to selection module\n     *\n     * @returns {void}\n     */\n    Selection.prototype.addEventListener = function () {\n        if (!this.maps.isDestroyed) {\n            this.maps.on(click, this.mouseClick, this);\n        }\n    };\n    /**\n     * For removing events from selection modue\n     *\n     * @returns {void}\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.maps.isDestroyed) {\n            return;\n        }\n        this.maps.off(click, this.mouseClick);\n    };\n    Selection.prototype.mouseClick = function (targetElement) {\n        if (!isNullOrUndefined(targetElement['type']) && targetElement['type'].indexOf('touch') !== -1 &&\n            isNullOrUndefined(targetElement.id)) {\n            targetElement = targetElement['target'];\n        }\n        if (!isNullOrUndefined(targetElement.id) && (targetElement.id.indexOf('LayerIndex') > -1 ||\n            targetElement.id.indexOf('NavigationIndex') > -1)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var shapeData = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = void 0;\n            var shapeIndex = void 0;\n            var dataIndex = void 0;\n            var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n            if (targetElement.id.indexOf('shapeIndex') > -1) {\n                shapeIndex = parseInt(targetElement.id.split('_shapeIndex_')[1].split('_')[0], 10);\n                shapeData = !isNullOrUndefined(this.maps.layers[layerIndex].shapeData['features'])\n                    && this.maps.layers[layerIndex].shapeData['features']['length'] > shapeIndex ?\n                    this.maps.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] :\n                    !isNullOrUndefined(this.maps.layers[layerIndex].shapeData['geometries'])\n                        && this.maps.layers[layerIndex].shapeData['geometries']['length'] > shapeIndex ?\n                        this.maps.layers[layerIndex].shapeData['geometries'][shapeIndex]['properties'] : null;\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = isNullOrUndefined(dataIndex) ? null : this.maps.layers[layerIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].selectionSettings;\n                this.selectionType = 'Shape';\n            }\n            else if (targetElement.id.indexOf('BubbleIndex') > -1) {\n                var bubbleIndex = parseInt(targetElement.id.split('_BubbleIndex_')[1].split('_')[0], 10);\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].selectionSettings;\n                this.selectionType = 'Bubble';\n            }\n            else if (targetElement.id.indexOf('MarkerIndex') > -1) {\n                var markerIndex = parseInt(targetElement.id.split('_MarkerIndex_')[1].split('_')[0], 10);\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = this.maps.layers[layerIndex].markerSettings[markerIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].markerSettings[markerIndex].selectionSettings;\n                this.selectionType = 'Marker';\n            }\n            else {\n                var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                shapeData = null;\n                data = {\n                    latitude: this.maps.layers[layerIndex].navigationLineSettings[index].latitude,\n                    longitude: this.maps.layers[layerIndex].navigationLineSettings[index].longitude\n                };\n                this.selectionsettings = this.maps.layers[layerIndex].navigationLineSettings[index].selectionSettings;\n                this.selectionType = 'navigationline';\n            }\n            if (this.selectionsettings.enable) {\n                this.selectElement(targetElement, layerIndex, data, shapeData);\n            }\n        }\n        else if ((this.maps.legendSettings.visible && !this.maps.legendSettings.toggleLegendSettings.enable && this.maps.legendModule) &&\n            !isNullOrUndefined(targetElement.id) && targetElement.id.indexOf('_Text') === -1 &&\n            (targetElement.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 ||\n                targetElement.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1)) {\n            this.maps.legendModule.legendHighLightAndSelection(targetElement, 'selection');\n        }\n    };\n    /**\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Selection.prototype.selectElement = function (targetElement, layerIndex, data, shapeData) {\n        this.maps.mapSelect = targetElement ? true : false;\n        if (this.maps.legendModule && this.maps.legendSettings.visible && targetElement.id.indexOf('_MarkerIndex_') === -1) {\n            this.maps.legendModule.shapeHighLightAndSelection(targetElement, data, this.selectionsettings, 'selection', layerIndex);\n        }\n        var shapeToggled = (targetElement.id.indexOf('shapeIndex') > -1 && this.maps.legendSettings.visible && this.maps.legendModule) ?\n            this.maps.legendModule.shapeToggled : true;\n        if (shapeToggled) {\n            this.selectMap(targetElement, shapeData, data);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Public method for selection\n     */\n    Selection.prototype.addSelection = function (layerIndex, name, enable) {\n        var targetElement = getTargetElement(layerIndex, name, enable, this.maps);\n        if (enable) {\n            this.selectMap(targetElement, null, null);\n        }\n        else {\n            removeClass(targetElement);\n        }\n    };\n    /**\n     * Method for selection\n     *\n     * @param {Element} targetElement - Specifies the target element\n     * @param {any} shapeData - Specifies the shape data\n     * @param {any} data - Specifies the data\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Selection.prototype.selectMap = function (targetElement, shapeData, data) {\n        var _this = this;\n        var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n        var parentElement;\n        var children;\n        var selectionClass;\n        var isLineStringShape = targetElement.parentElement.id.indexOf('LineString') > -1;\n        var selectionsettings = this.selectionsettings;\n        var border = {\n            color: isLineStringShape ? (this.selectionsettings.fill || this.selectionsettings.border.color) : this.selectionsettings.border.color,\n            width: isLineStringShape ? (this.selectionsettings.border.width / this.maps.scale) :\n                (this.selectionsettings.border.width / (this.selectionType === 'Marker' ? 1 : this.maps.scale)),\n            opacity: this.selectionsettings.border.opacity\n        };\n        var eventArgs = {\n            opacity: this.selectionsettings.opacity,\n            fill: isLineStringShape ? 'transparent' : (this.selectionType !== 'navigationline' ? this.selectionsettings.fill : 'none'),\n            border: border,\n            name: itemSelection,\n            target: targetElement.id,\n            cancel: false,\n            shapeData: shapeData,\n            data: data,\n            maps: this.maps\n        };\n        this.maps.trigger('itemSelection', eventArgs, function (observedArgs) {\n            eventArgs.border.opacity = isNullOrUndefined(_this.selectionsettings.border.opacity) ? _this.selectionsettings.opacity : _this.selectionsettings.border.opacity;\n            if (!eventArgs.cancel) {\n                if (targetElement.getAttribute('class') === _this.selectionType + 'selectionMapStyle'\n                    || targetElement.getAttribute('class') === 'LineselectionMapStyle') {\n                    removeClass(targetElement);\n                    _this.removedSelectionList(targetElement);\n                    for (var m = 0; m < _this.maps.shapeSelectionItem.length; m++) {\n                        if (_this.maps.shapeSelectionItem[m] === eventArgs.shapeData) {\n                            _this.maps.shapeSelectionItem.splice(m, 1);\n                            break;\n                        }\n                    }\n                    if (targetElement.id.indexOf('NavigationIndex') > -1) {\n                        var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                        var layerIndex_1 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n                        targetElement.setAttribute('stroke-width', _this.maps.layers[layerIndex_1].navigationLineSettings[index].width.toString());\n                        targetElement.setAttribute('stroke', _this.maps.layers[layerIndex_1].navigationLineSettings[index].color);\n                    }\n                }\n                else {\n                    var layetElement = getElementByID(_this.maps.element.id + '_Layer_Collections');\n                    if (!_this.selectionsettings.enableMultiSelect &&\n                        (layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length > 0 ||\n                            layetElement.getElementsByClassName('LineselectionMapStyle').length > 0)) {\n                        var eleCount = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length;\n                        var ele = void 0;\n                        for (var k = 0; k < eleCount; k++) {\n                            ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                            removeClass(ele);\n                            _this.removedSelectionList(ele);\n                        }\n                        if (layetElement.getElementsByClassName('LineselectionMapStyle').length > 0) {\n                            eleCount = layetElement.getElementsByClassName('LineselectionMapStyle').length;\n                            for (var k = 0; k < eleCount; k++) {\n                                ele = layetElement.getElementsByClassName('LineselectionMapStyle')[0];\n                                removeClass(ele);\n                                _this.removedSelectionList(ele);\n                            }\n                        }\n                        if (_this.selectionType === 'Shape') {\n                            _this.maps.shapeSelectionItem = [];\n                            var selectionLength = _this.maps.selectedElementId.length;\n                            for (var i = 0; i < selectionLength; i++) {\n                                ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                                removeClass(ele);\n                                var selectedElementIdIndex = _this.maps.selectedElementId.indexOf(ele.getAttribute('id'));\n                                _this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n                            }\n                        }\n                        if (ele.id.indexOf('NavigationIndex') > -1) {\n                            var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                            var layerIndex_2 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n                            ele.setAttribute('stroke-width', _this.maps.layers[layerIndex_2].navigationLineSettings[index].width.toString());\n                            ele.setAttribute('stroke', _this.maps.layers[layerIndex_2].navigationLineSettings[index].color);\n                        }\n                    }\n                    if (!isLineStringShape) {\n                        if (!getElement(_this.selectionType + 'selectionMap')) {\n                            document.body.appendChild(createStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs));\n                        }\n                        else {\n                            customizeStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs);\n                        }\n                        targetElement.setAttribute('class', _this.selectionType + 'selectionMapStyle');\n                    }\n                    else {\n                        if (!getElement('LineselectionMap')) {\n                            document.body.appendChild(createStyle('LineselectionMap', 'LineselectionMapStyle', eventArgs));\n                        }\n                        else {\n                            customizeStyle('LineselectionMap', 'LineselectionMapStyle', eventArgs);\n                        }\n                        targetElement.setAttribute('class', 'LineselectionMapStyle');\n                    }\n                    if (targetElement.getAttribute('class') === 'ShapeselectionMapStyle') {\n                        _this.maps.shapeSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedElementId.push(targetElement.getAttribute('id'));\n                        _this.maps.shapeSelectionItem.push(eventArgs.shapeData);\n                    }\n                    if (targetElement.getAttribute('class') === 'MarkerselectionMapStyle') {\n                        _this.maps.markerSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedMarkerElementId.push(targetElement.getAttribute('id'));\n                    }\n                    if (targetElement.getAttribute('class') === 'BubbleselectionMapStyle') {\n                        _this.maps.bubbleSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedBubbleElementId.push(targetElement.getAttribute('id'));\n                    }\n                    if (targetElement.getAttribute('class') === 'navigationlineselectionMapStyle') {\n                        _this.maps.navigationSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedNavigationElementId.push(targetElement.getAttribute('id'));\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Remove legend selection\n     */\n    // private removeLegendSelection(legendCollection: Object[], targetElement: Element): void {\n    //     let shape: Element;\n    //     if (!this.selectionsettings.enableMultiSelect) {\n    //        for (let i: number = 0; i < legendCollection.length; i++) {\n    //             for (let data of legendCollection[i]['data']) {\n    //                 shape = getElement(this.maps.element.id + '_LayerIndex_' + data['layerIndex'] +\n    //                            '_shapeIndex_' + data['shapeIndex'] + '_dataIndex_' + data['dataIndex']);\n    //                 removeClass(shape);\n    //             }\n    //         }\n    //     }\n    // }\n    /**\n     * Get module name.\n     *\n     * @param {Element} targetElement - Specifies the target element\n     * @returns {void}\n     * @private\n     */\n    Selection.prototype.removedSelectionList = function (targetElement) {\n        if (this.selectionType === 'Shape') {\n            this.maps.selectedElementId.splice(this.maps.selectedElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'Bubble') {\n            this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'Marker') {\n            this.maps.selectedMarkerElementId.splice(this.maps.selectedMarkerElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'navigationline') {\n            this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'Selection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @returns {void}\n     * @private\n     */\n    Selection.prototype.destroy = function () {\n        this.selectionsettings = null;\n        this.removeEventListener();\n        this.maps = null;\n    };\n    return Selection;\n}());\nexport { Selection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}