{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro16/Desktop/data-visualization/client/src/buttons/dropdown.js\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['one', 'two', 'three'];\nconst defaultOption = options[0];\n/*#__PURE__*/_jsxDEV(Dropdown, {\n  options: options,\n  onChange: this._onSelect,\n  value: defaultOption,\n  placeholder: \"Select an option\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 1\n}, this);\nconst CountryMap = () => {\n  // const [data, setData] = useState([]);\n\n  // useEffect(() => {\n  //   csv(\"/data/f22_clean.csv\").then(counties => {\n  //     setData(counties);\n  //   });\n  // }, []);\n\n  // const colorScale = scaleQuantile()\n  //   .domain(data.map(d => d.population))\n  //   .range([\n  //     \"#ffedea\",\n  //     \"#ffcec5\",\n  //     \"#ffad9f\",\n  //     \"#ff8a75\",\n  //     \"#ff5533\",\n  //     \"#e2492d\",\n  //     \"#be3d26\",\n  //     \"#9a311f\",\n  //     \"#782618\"\n  //   ]);\n\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoAlbersUsa\",\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: _ref => {\n        let {\n          geographies\n        } = _ref;\n        return geographies.map(geo => {\n          // const cur = data.find(s => s.id === geo.id);\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo\n            // fill={cur ? colorScale(cur.population) : \"#EEE\"}\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_c = CountryMap;\nexport default CountryMap;\nvar _c;\n$RefreshReg$(_c, \"CountryMap\");","map":{"version":3,"names":["Dropdown","options","defaultOption","_onSelect","CountryMap","geoUrl","geographies","map","geo","rsmKey"],"sources":["/Users/macbookpro16/Desktop/data-visualization/client/src/buttons/dropdown.js"],"sourcesContent":["import Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst options = [\n  'one', 'two', 'three'\n];\n\nconst defaultOption = options[0];\n\n<Dropdown options={options} onChange={this._onSelect} value={defaultOption} placeholder=\"Select an option\" />;\n\nconst CountryMap = () => {\n    // const [data, setData] = useState([]);\n  \n    // useEffect(() => {\n    //   csv(\"/data/f22_clean.csv\").then(counties => {\n    //     setData(counties);\n    //   });\n    // }, []);\n  \n    // const colorScale = scaleQuantile()\n    //   .domain(data.map(d => d.population))\n    //   .range([\n    //     \"#ffedea\",\n    //     \"#ffcec5\",\n    //     \"#ffad9f\",\n    //     \"#ff8a75\",\n    //     \"#ff5533\",\n    //     \"#e2492d\",\n    //     \"#be3d26\",\n    //     \"#9a311f\",\n    //     \"#782618\"\n    //   ]);\n  \n    return (\n      <ComposableMap projection=\"geoAlbersUsa\">\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              // const cur = data.find(s => s.id === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  // fill={cur ? colorScale(cur.population) : \"#EEE\"}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    );\n  };\n  \n  export default CountryMap;\n  "],"mappings":";AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAO,0BAA0B;AAAC;AAElC,MAAMC,OAAO,GAAG,CACd,KAAK,EAAE,KAAK,EAAE,OAAO,CACtB;AAED,MAAMC,aAAa,GAAGD,OAAO,CAAC,CAAC,CAAC;AAEhC,qBAAC,QAAQ;EAAC,OAAO,EAAEA,OAAQ;EAAC,QAAQ,EAAE,IAAI,CAACE,SAAU;EAAC,KAAK,EAAED,aAAc;EAAC,WAAW,EAAC;AAAkB;EAAA;EAAA;EAAA;AAAA,QAAG;AAE7G,MAAME,UAAU,GAAG,MAAM;EACrB;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,aAAa;IAAC,UAAU,EAAC,cAAc;IAAA,uBACtC,QAAC,WAAW;MAAC,SAAS,EAAEC,MAAO;MAAA,UAC5B;QAAA,IAAC;UAAEC;QAAY,CAAC;QAAA,OACfA,WAAW,CAACC,GAAG,CAACC,GAAG,IAAI;UACrB;UACA,oBACE,QAAC,SAAS;YAER,SAAS,EAAEA;YACX;UAAA,GAFKA,GAAG,CAACC,MAAM;YAAA;YAAA;YAAA;UAAA,QAGf;QAEN,CAAC,CAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAEQ;IAAA;IAAA;IAAA;EAAA,QACA;AAEpB,CAAC;AAAC,KAzCEL,UAAU;AA2Cd,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}