{"ast":null,"code":"import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */function () {\n  /**\n   * Constructor for DataManager class\n   * @param  {DataOptions|JSON[]} dataSource?\n   * @param  {Query} query?\n   * @param  {AdaptorOptions|string} adaptor?\n   * @hidden\n   */\n  function DataManager(dataSource, query, adaptor) {\n    var _this = this;\n    /** @hidden */\n    this.dateParse = true;\n    /** @hidden */\n    this.timeZoneHandling = true;\n    this.requests = [];\n    if (!dataSource && !this.dataSource) {\n      dataSource = [];\n    }\n    adaptor = adaptor || dataSource.adaptor;\n    if (dataSource && dataSource.timeZoneHandling === false) {\n      this.timeZoneHandling = dataSource.timeZoneHandling;\n    }\n    var data;\n    if (dataSource instanceof Array) {\n      data = {\n        json: dataSource,\n        offline: true\n      };\n    } else if (typeof dataSource === 'object') {\n      if (!dataSource.json) {\n        dataSource.json = [];\n      }\n      data = {\n        url: dataSource.url,\n        insertUrl: dataSource.insertUrl,\n        removeUrl: dataSource.removeUrl,\n        updateUrl: dataSource.updateUrl,\n        crudUrl: dataSource.crudUrl,\n        batchUrl: dataSource.batchUrl,\n        json: dataSource.json,\n        headers: dataSource.headers,\n        accept: dataSource.accept,\n        data: dataSource.data,\n        timeTillExpiration: dataSource.timeTillExpiration,\n        cachingPageSize: dataSource.cachingPageSize,\n        enableCaching: dataSource.enableCaching,\n        requestType: dataSource.requestType,\n        key: dataSource.key,\n        crossDomain: dataSource.crossDomain,\n        jsonp: dataSource.jsonp,\n        dataType: dataSource.dataType,\n        offline: dataSource.offline !== undefined ? dataSource.offline : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ? false : dataSource.url ? false : true,\n        requiresFormat: dataSource.requiresFormat\n      };\n    } else {\n      DataUtil.throwError('DataManager: Invalid arguments');\n    }\n    if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n      data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n    }\n    if (data.dataType === undefined) {\n      data.dataType = 'json';\n    }\n    this.dataSource = data;\n    this.defaultQuery = query;\n    if (data.url && data.offline && !data.json.length) {\n      this.isDataAvailable = false;\n      this.adaptor = adaptor || new ODataAdaptor();\n      this.dataSource.offline = false;\n      this.ready = this.executeQuery(query || new Query());\n      this.ready.then(function (e) {\n        _this.dataSource.offline = true;\n        _this.isDataAvailable = true;\n        data.json = e.result;\n        _this.adaptor = new JsonAdaptor();\n      });\n    } else {\n      this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n    }\n    if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n      data.jsonp = 'callback';\n    }\n    this.adaptor = adaptor || this.adaptor;\n    if (data.enableCaching) {\n      this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n    }\n    return this;\n  }\n  /**\n   * Overrides DataManager's default query with given query.\n   * @param  {Query} query - Defines the new default query.\n   */\n  DataManager.prototype.setDefaultQuery = function (query) {\n    this.defaultQuery = query;\n    return this;\n  };\n  /**\n   * Executes the given query with local data source.\n   * @param  {Query} query - Defines the query to retrieve data.\n   */\n  DataManager.prototype.executeLocal = function (query) {\n    if (!this.defaultQuery && !(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n    }\n    if (!this.dataSource.json) {\n      DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n    }\n    query = query || this.defaultQuery;\n    var result = this.adaptor.processQuery(this, query);\n    if (query.subQuery) {\n      var from = query.subQuery.fromTable;\n      var lookup = query.subQuery.lookups;\n      var res = query.isCountRequired ? result.result : result;\n      if (lookup && lookup instanceof Array) {\n        DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n      }\n      for (var j = 0; j < res.length; j++) {\n        if (res[j][from] instanceof Array) {\n          res[j] = extend({}, {}, res[j]);\n          res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n        }\n      }\n    }\n    return this.adaptor.processResponse(result, this, query);\n  };\n  /**\n   * Executes the given query with either local or remote data source.\n   * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n   * @param  {Query|Function} query - Defines the query to retrieve data.\n   * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n   * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n   * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n   */\n  DataManager.prototype.executeQuery = function (query, done, fail, always) {\n    var _this = this;\n    var makeRequest = 'makeRequest';\n    if (typeof query === 'function') {\n      always = fail;\n      fail = done;\n      done = query;\n      query = null;\n    }\n    if (!query) {\n      query = this.defaultQuery;\n    }\n    if (!(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n    }\n    var deffered = new Deferred();\n    var args = {\n      query: query\n    };\n    if (!this.dataSource.offline && this.dataSource.url !== undefined && this.dataSource.url !== '' || !isNullOrUndefined(this.adaptor[makeRequest]) || this.isCustomDataAdaptor(this.adaptor)) {\n      var result = this.adaptor.processQuery(this, query);\n      if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n        this.adaptor[makeRequest](result, deffered, args, query);\n      } else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n        this.makeRequest(result, deffered, args, query);\n      } else {\n        args = DataManager.getDeferedArgs(query, result, args);\n        deffered.resolve(args);\n      }\n    } else {\n      DataManager.nextTick(function () {\n        var res = _this.executeLocal(query);\n        args = DataManager.getDeferedArgs(query, res, args);\n        deffered.resolve(args);\n      });\n    }\n    if (done || fail) {\n      deffered.promise.then(done, fail);\n    }\n    if (always) {\n      deffered.promise.then(always, always);\n    }\n    return deffered.promise;\n  };\n  DataManager.getDeferedArgs = function (query, result, args) {\n    if (query.isCountRequired) {\n      args.result = result.result;\n      args.count = result.count;\n      args.aggregates = result.aggregates;\n    } else {\n      args.result = result;\n    }\n    return args;\n  };\n  DataManager.nextTick = function (fn) {\n    (window.setImmediate || window.setTimeout)(fn, 0);\n  };\n  DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n    return extend({}, {\n      type: 'GET',\n      dataType: this.dataSource.dataType,\n      crossDomain: this.dataSource.crossDomain,\n      jsonp: this.dataSource.jsonp,\n      cache: true,\n      processData: false,\n      onSuccess: fnSuccess,\n      onFailure: fnFail\n    }, url);\n  };\n  // tslint:disable-next-line:max-func-body-length\n  DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n    var _this = this;\n    var isSelector = !!query.subQuerySelector;\n    var fnFail = function (e) {\n      args.error = e;\n      deffered.reject(args);\n    };\n    var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n      args.xhr = xhr;\n      args.count = count ? parseInt(count.toString(), 10) : 0;\n      args.result = data;\n      args.request = request;\n      args.aggregates = aggregates;\n      args.actual = actual;\n      args.virtualSelectRecords = virtualSelectRecords;\n      deffered.resolve(args);\n    };\n    var fnQueryChild = function (data, selector) {\n      var subDeffer = new Deferred();\n      var childArgs = {\n        parent: args\n      };\n      query.subQuery.isChild = true;\n      var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n      var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n      if (!isSelector) {\n        subDeffer.then(function (subData) {\n          if (data) {\n            DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n            process(data, subData.count, subData.xhr);\n          }\n        }, fnFail);\n      }\n      return childReq;\n    };\n    var fnSuccess = function (data, request) {\n      if (_this.isGraphQLAdaptor(_this.adaptor)) {\n        if (!isNullOrUndefined(data['errors'])) {\n          return fnFail(data['errors'], request);\n        }\n      }\n      if (_this.isCustomDataAdaptor(_this.adaptor)) {\n        request = extend({}, _this.ajaxReqOption, request);\n      }\n      if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n        data = DataUtil.parse.parseJson(data);\n      }\n      var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n      var count = 0;\n      var aggregates = null;\n      var virtualSelectRecords = 'virtualSelectRecords';\n      var virtualRecords = data[virtualSelectRecords];\n      if (query.isCountRequired) {\n        count = result.count;\n        aggregates = result.aggregates;\n        result = result.result;\n      }\n      if (!query.subQuery) {\n        process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n        return;\n      }\n      if (!isSelector) {\n        fnQueryChild(result, request);\n      }\n    };\n    var req = this.extendRequest(url, fnSuccess, fnFail);\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_1 = new Ajax(req);\n      ajax_1.beforeSend = function () {\n        _this.beforeSend(ajax_1.httpRequest, ajax_1);\n      };\n      req = ajax_1.send();\n      req.catch(function (e) {\n        return true;\n      }); // to handle failure remote requests.        \n      this.requests.push(ajax_1);\n    } else {\n      this.ajaxReqOption = req;\n      var request = req;\n      this.adaptor.options.getData({\n        data: request.data,\n        onSuccess: request.onSuccess,\n        onFailure: request.onFailure\n      });\n    }\n    if (isSelector) {\n      var promise = void 0;\n      var res = query.subQuerySelector.call(this, {\n        query: query.subQuery,\n        parent: query\n      });\n      if (res && res.length) {\n        promise = Promise.all([req, fnQueryChild(null, res)]);\n        promise.then(function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var result = args[0];\n          var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n          var count = 0;\n          if (query.isCountRequired) {\n            count = pResult.count;\n            pResult = pResult.result;\n          }\n          var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n          count = 0;\n          if (query.subQuery.isCountRequired) {\n            count = cResult.count;\n            cResult = cResult.result;\n          }\n          DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n          isSelector = false;\n          process(pResult, count, _this.requests[0].httpRequest);\n        });\n      } else {\n        isSelector = false;\n      }\n    }\n    return req;\n  };\n  DataManager.prototype.beforeSend = function (request, settings) {\n    this.adaptor.beforeSend(this, request, settings);\n    var headers = this.dataSource.headers;\n    var props;\n    for (var i = 0; headers && i < headers.length; i++) {\n      props = [];\n      var keys = Object.keys(headers[i]);\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        props.push(prop);\n        request.setRequestHeader(prop, headers[i][prop]);\n      }\n    }\n  };\n  /**\n   * Save bulk changes to the given table name.\n   * User can add a new record, edit an existing record, and delete a record at the same time.\n   * If the datasource from remote, then updated in a single post.\n   * @param  {Object} changes - Defines the CrudOptions.\n   * @param  {string} key - Defines the column field.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n  DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n    var _this = this;\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var args = {\n      url: tableName,\n      key: key || this.dataSource.key\n    };\n    var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n    var doAjaxRequest = 'doAjaxRequest';\n    if (this.dataSource.offline) {\n      return req;\n    }\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var deff_1 = new Deferred();\n      var ajax_2 = new Ajax(req);\n      ajax_2.beforeSend = function () {\n        _this.beforeSend(ajax_2.httpRequest, ajax_2);\n      };\n      ajax_2.onSuccess = function (data, request) {\n        if (_this.isGraphQLAdaptor(_this.adaptor)) {\n          if (!isNullOrUndefined(data['errors'])) {\n            ajax_2.onFailure(JSON.stringify(data['errors']));\n          }\n        }\n        deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n      };\n      ajax_2.onFailure = function (e) {\n        deff_1.reject([{\n          error: e\n        }]);\n      };\n      ajax_2.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.        \n      return deff_1.promise;\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n    }\n  };\n  /**\n   * Inserts new record in the given table.\n   * @param  {Object} data - Defines the data to insert.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n  DataManager.prototype.insert = function (data, tableName, query, position) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var req = this.adaptor.insert(this, data, tableName, query, position);\n    var doAjaxRequest = 'doAjaxRequest';\n    if (this.dataSource.offline) {\n      return req;\n    }\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n    }\n  };\n  /**\n   * Removes data from the table with the given key.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n  DataManager.prototype.remove = function (keyField, value, tableName, query) {\n    if (typeof value === 'object') {\n      value = DataUtil.getObject(keyField, value);\n    }\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var res = this.adaptor.remove(this, keyField, value, tableName, query);\n    var doAjaxRequest = 'doAjaxRequest';\n    if (this.dataSource.offline) {\n      return res;\n    }\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var remove = this.adaptor.options.deleteRecord;\n      return this.doAjaxRequest(res, remove);\n    }\n  };\n  /**\n   * Updates existing record in the given table.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n  DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n    var doAjaxRequest = 'doAjaxRequest';\n    if (this.dataSource.offline) {\n      return res;\n    }\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var update = this.adaptor.options.updateRecord;\n      return this.doAjaxRequest(res, update);\n    }\n  };\n  DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'CustomDataAdaptor';\n  };\n  DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'GraphQLAdaptor';\n  };\n  DataManager.prototype.successFunc = function (record, request) {\n    if (this.isGraphQLAdaptor(this.adaptor)) {\n      var data = JSON.parse(record);\n      if (!isNullOrUndefined(data['errors'])) {\n        this.failureFunc(JSON.stringify(data['errors']));\n      }\n    }\n    if (this.isCustomDataAdaptor(this.adaptor)) {\n      request = extend({}, this.ajaxReqOption, request);\n    }\n    try {\n      DataUtil.parse.parseJson(record);\n    } catch (e) {\n      record = [];\n    }\n    record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n    this.ajaxDeffered.resolve(record);\n  };\n  ;\n  DataManager.prototype.failureFunc = function (e) {\n    this.ajaxDeffered.reject([{\n      error: e\n    }]);\n  };\n  ;\n  DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n    var _this = this;\n    res = extend({}, {\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8',\n      processData: false\n    }, res);\n    this.ajaxDeffered = new Deferred();\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_3 = new Ajax(res);\n      ajax_3.beforeSend = function () {\n        _this.beforeSend(ajax_3.httpRequest, ajax_3);\n      };\n      ajax_3.onSuccess = this.successFunc.bind(this);\n      ajax_3.onFailure = this.failureFunc.bind(this);\n      ajax_3.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.\n    } else {\n      this.ajaxReqOption = res;\n      ajaxFunc.call(this, {\n        data: res.data,\n        onSuccess: this.successFunc.bind(this),\n        onFailure: this.failureFunc.bind(this)\n      });\n    }\n    return this.ajaxDeffered.promise;\n  };\n  return DataManager;\n}();\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */function () {\n  function Deferred() {\n    var _this = this;\n    /**\n     * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n     */\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    /**\n     * Defines the callback function triggers when the Deferred object is resolved.\n     */\n    this.then = this.promise.then.bind(this.promise);\n    /**\n     * Defines the callback function triggers when the Deferred object is rejected.\n     */\n    this.catch = this.promise.catch.bind(this.promise);\n  }\n  return Deferred;\n}();\nexport { Deferred };","map":{"version":3,"names":["Ajax","extend","isNullOrUndefined","DataUtil","Query","ODataAdaptor","JsonAdaptor","CacheAdaptor","RemoteSaveAdaptor","CustomDataAdaptor","DataManager","dataSource","query","adaptor","_this","dateParse","timeZoneHandling","requests","data","Array","json","offline","url","insertUrl","removeUrl","updateUrl","crudUrl","batchUrl","headers","accept","timeTillExpiration","cachingPageSize","enableCaching","requestType","key","crossDomain","jsonp","dataType","undefined","requiresFormat","throwError","isCors","defaultQuery","length","isDataAvailable","ready","executeQuery","then","e","result","prototype","setDefaultQuery","executeLocal","processQuery","subQuery","from","fromTable","lookup","lookups","res","isCountRequired","buildHierarchy","fKey","j","processResponse","using","slice","done","fail","always","makeRequest","deffered","Deferred","args","isCustomDataAdaptor","getDeferedArgs","resolve","nextTick","promise","count","aggregates","fn","window","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","type","cache","processData","onSuccess","onFailure","isSelector","subQuerySelector","error","reject","process","xhr","request","actual","virtualSelectRecords","parseInt","toString","fnQueryChild","selector","subDeffer","childArgs","parent","isChild","subUrl","childReq","subData","isGraphQLAdaptor","ajaxReqOption","httpRequest","getResponseHeader","indexOf","parse","parseJson","virtualRecords","req","ajax_1","beforeSend","send","catch","push","options","getData","call","Promise","all","_i","arguments","pResult","cResult","settings","props","i","keys","Object","keys_1","prop","setRequestHeader","saveChanges","changes","tableName","original","batchRequest","doAjaxRequest","deff_1","ajax_2","JSON","stringify","batchUpdate","insert","position","addRecord","remove","keyField","value","getObject","deleteRecord","update","updateRecord","getModuleName","successFunc","record","failureFunc","ajaxDeffered","ajaxFunc","contentType","ajax_3","bind"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-data/src/manager.js"],"sourcesContent":["import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                if (!isNullOrUndefined(data['errors'])) {\n                    return fnFail(data['errors'], request);\n                }\n            }\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.ajaxReqOption, request);\n            }\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            req = ajax_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.        \n            this.requests.push(ajax_1);\n        }\n        else {\n            this.ajaxReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var ajax_2 = new Ajax(req);\n            ajax_2.beforeSend = function () {\n                _this.beforeSend(ajax_2.httpRequest, ajax_2);\n            };\n            ajax_2.onSuccess = function (data, request) {\n                if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                    if (!isNullOrUndefined(data['errors'])) {\n                        ajax_2.onFailure(JSON.stringify(data['errors']));\n                    }\n                }\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_2.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.doAjaxRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.doAjaxRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'GraphQLAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request) {\n        if (this.isGraphQLAdaptor(this.adaptor)) {\n            var data = JSON.parse(record);\n            if (!isNullOrUndefined(data['errors'])) {\n                this.failureFunc(JSON.stringify(data['errors']));\n            }\n        }\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.ajaxReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n        this.ajaxDeffered.resolve(record);\n    };\n    ;\n    DataManager.prototype.failureFunc = function (e) {\n        this.ajaxDeffered.reject([{ error: e }]);\n    };\n    ;\n    DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.ajaxDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_3 = new Ajax(res);\n            ajax_3.beforeSend = function () {\n                _this.beforeSend(ajax_3.httpRequest, ajax_3);\n            };\n            ajax_3.onSuccess = this.successFunc.bind(this);\n            ajax_3.onFailure = this.failureFunc.bind(this);\n            ajax_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.ajaxReqOption = res;\n            ajaxFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this)\n            });\n        }\n        return this.ajaxDeffered.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}