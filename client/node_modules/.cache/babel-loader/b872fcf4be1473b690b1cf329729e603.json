{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */function (_super) {\n  __extends(PdfDocument, _super);\n  function PdfDocument(isMerging) {\n    var _this = _super.call(this) || this;\n    /**\n     * Default `margin` value.\n     * @default 40.0\n     * @private\n     */\n    _this.defaultMargin = 40.0;\n    /**\n     * Internal variable to store instance of `StreamWriter` classes..\n     * @default null\n     * @private\n     */\n    _this.streamWriter = null;\n    _this.document = _this;\n    var isMerge = false;\n    if (typeof isMerging === 'undefined') {\n      PdfDocument.cacheCollection = new PdfCacheCollection();\n      isMerge = false;\n    } else {\n      isMerge = isMerging;\n    }\n    var objects = new PdfMainObjectCollection();\n    _this.setMainObjectCollection(objects);\n    var crossTable = new PdfCrossTable();\n    crossTable.isMerging = isMerge;\n    crossTable.document = _this;\n    _this.setCrossTable(crossTable);\n    var catalog = new PdfCatalog();\n    _this.setCatalog(catalog);\n    objects.add(catalog);\n    catalog.position = -1;\n    _this.sectionCollection = new PdfSectionCollection(_this);\n    _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n    catalog.pages = _this.sectionCollection;\n    return _this;\n  }\n  Object.defineProperty(PdfDocument, \"defaultFont\", {\n    //Properties\n    /**\n     * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n     * @private\n     */\n    get: function () {\n      if (this.defaultStandardFont == null) {\n        this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n      }\n      return this.defaultStandardFont;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocument.prototype, \"sections\", {\n    /**\n     * Gets the collection of the `sections` in the document.\n     * @private\n     */\n    get: function () {\n      return this.sectionCollection;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n    /**\n     * Gets the document's page setting.\n     * @public\n     */\n    get: function () {\n      if (this.settings == null) {\n        this.settings = new PdfPageSettings(this.defaultMargin);\n      }\n      return this.settings;\n    },\n    /**\n     * Sets the document's page setting.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     *\n     * // sets the right margin of the page\n     * document.pageSettings.margins.right = 0;\n     * // set the page size.\n     * document.pageSettings.size = new SizeF(500, 500);\n     * // change the page orientation to landscape\n     * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n     * // apply 90 degree rotation on the page\n     * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n     *\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // set the specified Point\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this.settings = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocument.prototype, \"pages\", {\n    /**\n     * Represents the collection of pages in the PDF document.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * //\n     * // get the collection of pages in the document\n     * let pageCollection : PdfDocumentPageCollection  = document.pages;\n     * //\n     * // add pages\n     * let page1 : PdfPage = pageCollection.add();\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this.documentPageCollection;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocument, \"cache\", {\n    /**\n     * Gets collection of the `cached objects`.\n     * @private\n     */\n    get: function () {\n      if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n        return new PdfCacheCollection();\n      }\n      return PdfDocument.cacheCollection;\n    },\n    /**\n     * Sets collection of the `cached objects`.\n     * @private\n     */\n    set: function (value) {\n      this.cacheCollection = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocument, \"enableCache\", {\n    /**\n     * Gets the value of enable cache.\n     * @private\n     */\n    get: function () {\n      return this.isCacheEnabled;\n    },\n    /**\n     * Sets thie value of enable cache.\n     * @private\n     */\n    set: function (value) {\n      this.isCacheEnabled = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n    /* tslint:disable */\n    /**\n     * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n     * @private\n     */\n    get: function () {\n      if (this.pdfColorSpace === PdfColorSpace.Rgb || this.pdfColorSpace === PdfColorSpace.Cmyk || this.pdfColorSpace === PdfColorSpace.GrayScale) {\n        return this.pdfColorSpace;\n      } else {\n        return PdfColorSpace.Rgb;\n      }\n    },\n    set: function (value) {\n      if (value === PdfColorSpace.Rgb || value === PdfColorSpace.Cmyk || value === PdfColorSpace.GrayScale) {\n        this.pdfColorSpace = value;\n      } else {\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocument.prototype, \"template\", {\n    /* tslint:enable */\n    /**\n     * Gets or sets a `template` to all pages in the document.\n     * @private\n     */\n    get: function () {\n      if (this.pageTemplate == null) {\n        this.pageTemplate = new PdfDocumentTemplate();\n      }\n      return this.pageTemplate;\n    },\n    set: function (value) {\n      this.pageTemplate = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n    this.checkPagesPresence();\n    if (stream === null) {\n      throw new Error('ArgumentNullException : stream');\n    }\n    this.streamWriter = stream;\n    var writer = new PdfWriter(stream);\n    writer.document = this;\n    if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n      return this.crossTable.save(writer);\n    } else {\n      this.crossTable.save(writer, arg2);\n    }\n  };\n  /**\n   * Checks the pages `presence`.\n   * @private\n   */\n  PdfDocument.prototype.checkPagesPresence = function () {\n    if (this.pages.count === 0) {\n      this.pages.add();\n    }\n  };\n  /**\n   * disposes the current instance of `PdfDocument` class.\n   * ```typescript\n   * // create a new PDF document\n   * let document : PdfDocument = new PdfDocument();\n   * // add a new page to the document\n   * let page1 : PdfPage = document.pages.add();\n   * // set the font\n   * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n   * // create black brush\n   * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n   * // draw the text\n   * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n   * // save the document\n   * document.save('output.pdf');\n   * // destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfDocument.prototype.destroy = function () {\n    this.catalog = undefined;\n    this.colorSpace = undefined;\n    this.currentSavingObj = undefined;\n    this.documentPageCollection = undefined;\n    this.isStreamCopied = undefined;\n    this.pageSettings = undefined;\n    this.pageTemplate = undefined;\n    this.pdfColorSpace = undefined;\n    this.sectionCollection = undefined;\n    PdfDocument.cache.destroy();\n    this.crossTable.pdfObjects.destroy();\n    PdfDocument.cache = undefined;\n    this.streamWriter.destroy();\n  };\n  /**\n   * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n   * @default null\n   * @private\n   */\n  PdfDocument.defaultStandardFont = null;\n  /**\n   * Indicates whether enable cache or not\n   * @default true\n   * @private\n   */\n  PdfDocument.isCacheEnabled = true;\n  return PdfDocument;\n}(PdfDocumentBase);\nexport { PdfDocument };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfWriter","PdfMainObjectCollection","PdfDocumentBase","PdfCrossTable","PdfCatalog","PdfPageSettings","PdfSectionCollection","PdfDocumentPageCollection","PdfCacheCollection","PdfColorSpace","PdfDocumentTemplate","PdfFontFamily","PdfStandardFont","PdfDocument","_super","isMerging","_this","call","defaultMargin","streamWriter","document","isMerge","cacheCollection","objects","setMainObjectCollection","crossTable","setCrossTable","catalog","setCatalog","add","position","sectionCollection","documentPageCollection","pages","defineProperty","get","defaultStandardFont","Helvetica","enumerable","configurable","settings","set","value","isCacheEnabled","pdfColorSpace","Rgb","Cmyk","GrayScale","pageTemplate","docSave","stream","arg2","arg3","checkPagesPresence","Error","writer","save","count","destroy","undefined","colorSpace","currentSavingObj","isStreamCopied","pageSettings","cache","pdfObjects"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,SAASI,SAAS,QAAQ,8BAA8B;AACxD,SAASC,uBAAuB,QAAQ,8CAA8C;AACtF,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,oBAAoB,QAAQ,mCAAmC;AACxE,SAASC,yBAAyB,QAAQ,yCAAyC;AACnF,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,eAAe,QAAQ,uCAAuC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/C5B,SAAS,CAAC2B,WAAW,EAAEC,MAAM,CAAC;EAC9B,SAASD,WAAW,CAACE,SAAS,EAAE;IAC5B,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrC;AACR;AACA;AACA;AACA;IACQD,KAAK,CAACE,aAAa,GAAG,IAAI;IAC1B;AACR;AACA;AACA;AACA;IACQF,KAAK,CAACG,YAAY,GAAG,IAAI;IACzBH,KAAK,CAACI,QAAQ,GAAGJ,KAAK;IACtB,IAAIK,OAAO,GAAG,KAAK;IACnB,IAAI,OAAON,SAAS,KAAK,WAAW,EAAE;MAClCF,WAAW,CAACS,eAAe,GAAG,IAAId,kBAAkB,EAAE;MACtDa,OAAO,GAAG,KAAK;IACnB,CAAC,MACI;MACDA,OAAO,GAAGN,SAAS;IACvB;IACA,IAAIQ,OAAO,GAAG,IAAItB,uBAAuB,EAAE;IAC3Ce,KAAK,CAACQ,uBAAuB,CAACD,OAAO,CAAC;IACtC,IAAIE,UAAU,GAAG,IAAItB,aAAa,EAAE;IACpCsB,UAAU,CAACV,SAAS,GAAGM,OAAO;IAC9BI,UAAU,CAACL,QAAQ,GAAGJ,KAAK;IAC3BA,KAAK,CAACU,aAAa,CAACD,UAAU,CAAC;IAC/B,IAAIE,OAAO,GAAG,IAAIvB,UAAU,EAAE;IAC9BY,KAAK,CAACY,UAAU,CAACD,OAAO,CAAC;IACzBJ,OAAO,CAACM,GAAG,CAACF,OAAO,CAAC;IACpBA,OAAO,CAACG,QAAQ,GAAG,CAAC,CAAC;IACrBd,KAAK,CAACe,iBAAiB,GAAG,IAAIzB,oBAAoB,CAACU,KAAK,CAAC;IACzDA,KAAK,CAACgB,sBAAsB,GAAG,IAAIzB,yBAAyB,CAACS,KAAK,CAAC;IACnEW,OAAO,CAACM,KAAK,GAAGjB,KAAK,CAACe,iBAAiB;IACvC,OAAOf,KAAK;EAChB;EACA1B,MAAM,CAAC4C,cAAc,CAACrB,WAAW,EAAE,aAAa,EAAE;IAC9C;IACA;AACR;AACA;AACA;IACQsB,GAAG,EAAE,YAAY;MACb,IAAI,IAAI,CAACC,mBAAmB,IAAI,IAAI,EAAE;QAClC,IAAI,CAACA,mBAAmB,GAAG,IAAIxB,eAAe,CAACD,aAAa,CAAC0B,SAAS,EAAE,CAAC,CAAC;MAC9E;MACA,OAAO,IAAI,CAACD,mBAAmB;IACnC,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjD,MAAM,CAAC4C,cAAc,CAACrB,WAAW,CAACf,SAAS,EAAE,UAAU,EAAE;IACrD;AACR;AACA;AACA;IACQqC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACJ,iBAAiB;IACjC,CAAC;IACDO,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjD,MAAM,CAAC4C,cAAc,CAACrB,WAAW,CAACf,SAAS,EAAE,cAAc,EAAE;IACzD;AACR;AACA;AACA;IACQqC,GAAG,EAAE,YAAY;MACb,IAAI,IAAI,CAACK,QAAQ,IAAI,IAAI,EAAE;QACvB,IAAI,CAACA,QAAQ,GAAG,IAAInC,eAAe,CAAC,IAAI,CAACa,aAAa,CAAC;MAC3D;MACA,OAAO,IAAI,CAACsB,QAAQ;IACxB,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAACF,QAAQ,GAAGE,KAAK;IACzB,CAAC;IACDJ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjD,MAAM,CAAC4C,cAAc,CAACrB,WAAW,CAACf,SAAS,EAAE,OAAO,EAAE;IAClD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQqC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACH,sBAAsB;IACtC,CAAC;IACDM,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjD,MAAM,CAAC4C,cAAc,CAACrB,WAAW,EAAE,OAAO,EAAE;IACxC;AACR;AACA;AACA;IACQsB,GAAG,EAAE,YAAY;MACb,IAAI,OAAOtB,WAAW,CAACS,eAAe,KAAK,WAAW,IAAIT,WAAW,CAACS,eAAe,IAAI,IAAI,EAAE;QAC3F,OAAO,IAAId,kBAAkB,EAAE;MACnC;MACA,OAAOK,WAAW,CAACS,eAAe;IACtC,CAAC;IACD;AACR;AACA;AACA;IACQmB,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAACpB,eAAe,GAAGoB,KAAK;IAChC,CAAC;IACDJ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjD,MAAM,CAAC4C,cAAc,CAACrB,WAAW,EAAE,aAAa,EAAE;IAC9C;AACR;AACA;AACA;IACQsB,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACQ,cAAc;IAC9B,CAAC;IACD;AACR;AACA;AACA;IACQF,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC/B,CAAC;IACDJ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjD,MAAM,CAAC4C,cAAc,CAACrB,WAAW,CAACf,SAAS,EAAE,YAAY,EAAE;IACvD;IACA;AACR;AACA;AACA;IACQqC,GAAG,EAAE,YAAY;MACb,IAAK,IAAI,CAACS,aAAa,KAAKnC,aAAa,CAACoC,GAAG,IAAO,IAAI,CAACD,aAAa,KAAKnC,aAAa,CAACqC,IAAI,IACrF,IAAI,CAACF,aAAa,KAAKnC,aAAa,CAACsC,SAAW,EAAE;QACtD,OAAO,IAAI,CAACH,aAAa;MAC7B,CAAC,MACI;QACD,OAAOnC,aAAa,CAACoC,GAAG;MAC5B;IACJ,CAAC;IACDJ,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAKA,KAAK,KAAKjC,aAAa,CAACoC,GAAG,IAAOH,KAAK,KAAKjC,aAAa,CAACqC,IAAI,IAC9DJ,KAAK,KAAKjC,aAAa,CAACsC,SAAW,EAAE;QACtC,IAAI,CAACH,aAAa,GAAGF,KAAK;MAC9B,CAAC,MACI;QACD,IAAI,CAACE,aAAa,GAAGnC,aAAa,CAACoC,GAAG;MAC1C;IACJ,CAAC;IACDP,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjD,MAAM,CAAC4C,cAAc,CAACrB,WAAW,CAACf,SAAS,EAAE,UAAU,EAAE;IACrD;IACA;AACR;AACA;AACA;IACQqC,GAAG,EAAE,YAAY;MACb,IAAI,IAAI,CAACa,YAAY,IAAI,IAAI,EAAE;QAC3B,IAAI,CAACA,YAAY,GAAG,IAAItC,mBAAmB,EAAE;MACjD;MACA,OAAO,IAAI,CAACsC,YAAY;IAC5B,CAAC;IACDP,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAACM,YAAY,GAAGN,KAAK;IAC7B,CAAC;IACDJ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF1B,WAAW,CAACf,SAAS,CAACmD,OAAO,GAAG,UAAUC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC1D,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAIH,MAAM,KAAK,IAAI,EAAE;MACjB,MAAM,IAAII,KAAK,CAAC,gCAAgC,CAAC;IACrD;IACA,IAAI,CAACnC,YAAY,GAAG+B,MAAM;IAC1B,IAAIK,MAAM,GAAG,IAAIvD,SAAS,CAACkD,MAAM,CAAC;IAClCK,MAAM,CAACnC,QAAQ,GAAG,IAAI;IACtB,IAAI,OAAO+B,IAAI,KAAK,SAAS,IAAI,OAAOC,IAAI,KAAK,WAAW,EAAE;MAC1D,OAAO,IAAI,CAAC3B,UAAU,CAAC+B,IAAI,CAACD,MAAM,CAAC;IACvC,CAAC,MACI;MACD,IAAI,CAAC9B,UAAU,CAAC+B,IAAI,CAACD,MAAM,EAAEJ,IAAI,CAAC;IACtC;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACItC,WAAW,CAACf,SAAS,CAACuD,kBAAkB,GAAG,YAAY;IACnD,IAAI,IAAI,CAACpB,KAAK,CAACwB,KAAK,KAAK,CAAC,EAAE;MACxB,IAAI,CAACxB,KAAK,CAACJ,GAAG,EAAE;IACpB;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIhB,WAAW,CAACf,SAAS,CAAC4D,OAAO,GAAG,YAAY;IACxC,IAAI,CAAC/B,OAAO,GAAGgC,SAAS;IACxB,IAAI,CAACC,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACE,gBAAgB,GAAGF,SAAS;IACjC,IAAI,CAAC3B,sBAAsB,GAAG2B,SAAS;IACvC,IAAI,CAACG,cAAc,GAAGH,SAAS;IAC/B,IAAI,CAACI,YAAY,GAAGJ,SAAS;IAC7B,IAAI,CAACX,YAAY,GAAGW,SAAS;IAC7B,IAAI,CAACf,aAAa,GAAGe,SAAS;IAC9B,IAAI,CAAC5B,iBAAiB,GAAG4B,SAAS;IAClC9C,WAAW,CAACmD,KAAK,CAACN,OAAO,EAAE;IAC3B,IAAI,CAACjC,UAAU,CAACwC,UAAU,CAACP,OAAO,EAAE;IACpC7C,WAAW,CAACmD,KAAK,GAAGL,SAAS;IAC7B,IAAI,CAACxC,YAAY,CAACuC,OAAO,EAAE;EAC/B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI7C,WAAW,CAACuB,mBAAmB,GAAG,IAAI;EACtC;AACJ;AACA;AACA;AACA;EACIvB,WAAW,CAAC8B,cAAc,GAAG,IAAI;EACjC,OAAO9B,WAAW;AACtB,CAAC,CAACX,eAAe,CAAE;AACnB,SAASW,WAAW"},"metadata":{},"sourceType":"module"}