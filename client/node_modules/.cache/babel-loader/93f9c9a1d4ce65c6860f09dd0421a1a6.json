{"ast":null,"code":"import { isUndefined } from './util';\nvar REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nvar REGX_IE = /msie|trident/i;\nvar REGX_IE11 = /Trident\\/7\\./;\nvar REGX_IOS = /(ipad|iphone|ipod touch)/i;\nvar REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nvar REGX_ANDROID = /android/i;\nvar REGX_WINDOWS = /trident|windows phone|edge/i;\nvar REGX_VERSION = /(version)[ /]([\\w.]+)/i;\nvar REGX_BROWSER = {\n  OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\n  EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\n  CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\n  PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\n  SAFARI: /(safari)[ /]([\\w.]+)/i,\n  WEBKIT: /(webkit)[ /]([\\w.]+)/i,\n  MSIE: /(msie|trident) ([\\w.]+)/i,\n  MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\nif (typeof window !== 'undefined') {\n  window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n *\n * @private\n */\nvar Browser = /** @class */function () {\n  function Browser() {}\n  Browser.extractBrowserDetail = function () {\n    var browserInfo = {\n      culture: {}\n    };\n    var keys = Object.keys(REGX_BROWSER);\n    var clientInfo = [];\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n      if (clientInfo) {\n        browserInfo.name = clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase();\n        browserInfo.name = clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name;\n        browserInfo.version = clientInfo[2];\n        browserInfo.culture.name = browserInfo.culture.language = navigator.language;\n        // eslint-disable-next-line\n        if (!!Browser.userAgent.match(REGX_IE11)) {\n          browserInfo.name = 'msie';\n          break;\n        }\n        var version = Browser.userAgent.match(REGX_VERSION);\n        if (browserInfo.name === 'safari' && version) {\n          browserInfo.version = version[2];\n        }\n        break;\n      }\n    }\n    return browserInfo;\n  };\n  /**\n   * To get events from the browser\n   *\n   * @param {string} event - type of event triggered.\n   * @returns {boolean}\n   */\n  Browser.getEvent = function (event) {\n    // eslint-disable-next-line\n    var events = {\n      start: {\n        isPointer: 'pointerdown',\n        isTouch: 'touchstart',\n        isDevice: 'mousedown'\n      },\n      move: {\n        isPointer: 'pointermove',\n        isTouch: 'touchmove',\n        isDevice: 'mousemove'\n      },\n      end: {\n        isPointer: 'pointerup',\n        isTouch: 'touchend',\n        isDevice: 'mouseup'\n      },\n      cancel: {\n        isPointer: 'pointercancel',\n        isTouch: 'touchcancel',\n        isDevice: 'mouseleave'\n      }\n    };\n    return Browser.isPointer ? events[event].isPointer : Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '') : events[event].isDevice;\n  };\n  /**\n   * To get the Touch start event from browser\n   *\n   * @returns {string}\n   */\n  Browser.getTouchStartEvent = function () {\n    return Browser.getEvent('start');\n  };\n  /**\n   * To get the Touch end event from browser\n   *\n   * @returns {string}\n   */\n  Browser.getTouchEndEvent = function () {\n    return Browser.getEvent('end');\n  };\n  /**\n   * To get the Touch move event from browser\n   *\n   * @returns {string}\n   */\n  Browser.getTouchMoveEvent = function () {\n    return Browser.getEvent('move');\n  };\n  /**\n   * To cancel the touch event from browser\n   *\n   * @returns {string}\n   */\n  Browser.getTouchCancelEvent = function () {\n    return Browser.getEvent('cancel');\n  };\n  /**\n   * To get the value based on provided key and regX\n   *\n   * @param {string} key ?\n   * @param {RegExp} regX ?\n   * @returns {Object} ?\n   */\n  Browser.getValue = function (key, regX) {\n    var browserDetails = window.browserDetails;\n    if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {\n      browserDetails['isIos'] = true;\n      browserDetails['isDevice'] = true;\n      browserDetails['isTouch'] = true;\n      browserDetails['isPointer'] = true;\n    }\n    if ('undefined' === typeof browserDetails[key]) {\n      return browserDetails[key] = regX.test(Browser.userAgent);\n    }\n    return browserDetails[key];\n  };\n  Object.defineProperty(Browser, \"userAgent\", {\n    get: function () {\n      return Browser.uA;\n    },\n    //Properties\n    /**\n     * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n     * Also we can set our own userAgent.\n     *\n     * @param {string} uA ?\n     */\n    set: function (uA) {\n      Browser.uA = uA;\n      window.browserDetails = {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"info\", {\n    //Read Only Properties\n    /**\n     * Property is to get the browser information like Name, Version and Language\n     *\n     * @returns {BrowserInfo} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.info)) {\n        return window.browserDetails.info = Browser.extractBrowserDetail();\n      }\n      return window.browserDetails.info;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIE\", {\n    /**\n     * Property is to get whether the userAgent is based IE.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      return Browser.getValue('isIE', REGX_IE);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isTouch\", {\n    /**\n     * Property is to get whether the browser has touch support.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isTouch)) {\n        return window.browserDetails.isTouch = 'ontouchstart' in window.navigator || window && window.navigator && window.navigator.maxTouchPoints > 0 || 'ontouchstart' in window;\n      }\n      return window.browserDetails.isTouch;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isPointer\", {\n    /**\n     * Property is to get whether the browser has Pointer support.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isPointer)) {\n        return window.browserDetails.isPointer = 'pointerEnabled' in window.navigator;\n      }\n      return window.browserDetails.isPointer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isMSPointer\", {\n    /**\n     * Property is to get whether the browser has MSPointer support.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isMSPointer)) {\n        return window.browserDetails.isMSPointer = 'msPointerEnabled' in window.navigator;\n      }\n      return window.browserDetails.isMSPointer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isDevice\", {\n    /**\n     * Property is to get whether the userAgent is device based.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      return Browser.getValue('isDevice', REGX_MOBILE);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIos\", {\n    /**\n     * Property is to get whether the userAgent is IOS.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      return Browser.getValue('isIos', REGX_IOS);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIos7\", {\n    /**\n     * Property is to get whether the userAgent is Ios7.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      return Browser.getValue('isIos7', REGX_IOS7);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isAndroid\", {\n    /**\n     * Property is to get whether the userAgent is Android.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      return Browser.getValue('isAndroid', REGX_ANDROID);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isWebView\", {\n    /**\n     * Property is to identify whether application ran in web view.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isWebView)) {\n        window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap) && isUndefined(window.phonegap) && window.forge !== 'object');\n        return window.browserDetails.isWebView;\n      }\n      return window.browserDetails.isWebView;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isWindows\", {\n    /**\n     * Property is to get whether the userAgent is Windows.\n     *\n     * @returns {boolean} ?\n     */\n    get: function () {\n      return Browser.getValue('isWindows', REGX_WINDOWS);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchStartEvent\", {\n    /**\n     * Property is to get the touch start event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchStartEvent)) {\n        return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n      }\n      return window.browserDetails.touchStartEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchMoveEvent\", {\n    /**\n     * Property is to get the touch move event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchMoveEvent)) {\n        return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n      }\n      return window.browserDetails.touchMoveEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchEndEvent\", {\n    /**\n     * Property is to get the touch end event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchEndEvent)) {\n        return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n      }\n      return window.browserDetails.touchEndEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchCancelEvent\", {\n    /**\n     * Property is to cancel the touch end event.\n     *\n     * @returns {string} ?\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchCancelEvent)) {\n        return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n      }\n      return window.browserDetails.touchCancelEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /* istanbul ignore next */\n  Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n  return Browser;\n}();\nexport { Browser };","map":{"version":3,"names":["isUndefined","REGX_MOBILE","REGX_IE","REGX_IE11","REGX_IOS","REGX_IOS7","REGX_ANDROID","REGX_WINDOWS","REGX_VERSION","REGX_BROWSER","OPERA","EDGE","CHROME","PANTHOMEJS","SAFARI","WEBKIT","MSIE","MOZILLA","window","browserDetails","Browser","extractBrowserDetail","browserInfo","culture","keys","Object","clientInfo","_i","keys_1","length","key","userAgent","match","name","toLowerCase","version","language","navigator","getEvent","event","events","start","isPointer","isTouch","isDevice","move","end","cancel","getTouchStartEvent","getTouchEndEvent","getTouchMoveEvent","getTouchCancelEvent","getValue","regX","platform","maxTouchPoints","test","defineProperty","get","uA","set","enumerable","configurable","info","isMSPointer","isWebView","cordova","PhoneGap","phonegap","forge","touchStartEvent","touchMoveEvent","touchEndEvent","touchCancelEvent"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-base/src/browser.js"],"sourcesContent":["import { isUndefined } from './util';\nvar REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nvar REGX_IE = /msie|trident/i;\nvar REGX_IE11 = /Trident\\/7\\./;\nvar REGX_IOS = /(ipad|iphone|ipod touch)/i;\nvar REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nvar REGX_ANDROID = /android/i;\nvar REGX_WINDOWS = /trident|windows phone|edge/i;\nvar REGX_VERSION = /(version)[ /]([\\w.]+)/i;\nvar REGX_BROWSER = {\n    OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\n    EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\n    CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\n    PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\n    SAFARI: /(safari)[ /]([\\w.]+)/i,\n    WEBKIT: /(webkit)[ /]([\\w.]+)/i,\n    MSIE: /(msie|trident) ([\\w.]+)/i,\n    MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\nif (typeof window !== 'undefined') {\n    window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n *\n * @private\n */\nvar Browser = /** @class */ (function () {\n    function Browser() {\n    }\n    Browser.extractBrowserDetail = function () {\n        var browserInfo = { culture: {} };\n        var keys = Object.keys(REGX_BROWSER);\n        var clientInfo = [];\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n            if (clientInfo) {\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);\n                browserInfo.version = clientInfo[2];\n                browserInfo.culture.name = browserInfo.culture.language = navigator.language;\n                // eslint-disable-next-line\n                if (!!Browser.userAgent.match(REGX_IE11)) {\n                    browserInfo.name = 'msie';\n                    break;\n                }\n                var version = Browser.userAgent.match(REGX_VERSION);\n                if (browserInfo.name === 'safari' && version) {\n                    browserInfo.version = version[2];\n                }\n                break;\n            }\n        }\n        return browserInfo;\n    };\n    /**\n     * To get events from the browser\n     *\n     * @param {string} event - type of event triggered.\n     * @returns {boolean}\n     */\n    Browser.getEvent = function (event) {\n        // eslint-disable-next-line\n        var events = {\n            start: {\n                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'\n            },\n            move: {\n                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'\n            },\n            end: {\n                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'\n            },\n            cancel: {\n                isPointer: 'pointercancel', isTouch: 'touchcancel', isDevice: 'mouseleave'\n            }\n        };\n        return (Browser.isPointer ? events[event].isPointer :\n            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')\n                : events[event].isDevice));\n    };\n    /**\n     * To get the Touch start event from browser\n     *\n     * @returns {string}\n     */\n    Browser.getTouchStartEvent = function () {\n        return Browser.getEvent('start');\n    };\n    /**\n     * To get the Touch end event from browser\n     *\n     * @returns {string}\n     */\n    Browser.getTouchEndEvent = function () {\n        return Browser.getEvent('end');\n    };\n    /**\n     * To get the Touch move event from browser\n     *\n     * @returns {string}\n     */\n    Browser.getTouchMoveEvent = function () {\n        return Browser.getEvent('move');\n    };\n    /**\n     * To cancel the touch event from browser\n     *\n     * @returns {string}\n     */\n    Browser.getTouchCancelEvent = function () {\n        return Browser.getEvent('cancel');\n    };\n    /**\n     * To get the value based on provided key and regX\n     *\n     * @param {string} key ?\n     * @param {RegExp} regX ?\n     * @returns {Object} ?\n     */\n    Browser.getValue = function (key, regX) {\n        var browserDetails = window.browserDetails;\n        if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {\n            browserDetails['isIos'] = true;\n            browserDetails['isDevice'] = true;\n            browserDetails['isTouch'] = true;\n            browserDetails['isPointer'] = true;\n        }\n        if ('undefined' === typeof browserDetails[key]) {\n            return browserDetails[key] = regX.test(Browser.userAgent);\n        }\n        return browserDetails[key];\n    };\n    Object.defineProperty(Browser, \"userAgent\", {\n        get: function () {\n            return Browser.uA;\n        },\n        //Properties\n        /**\n         * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n         * Also we can set our own userAgent.\n         *\n         * @param {string} uA ?\n         */\n        set: function (uA) {\n            Browser.uA = uA;\n            window.browserDetails = {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"info\", {\n        //Read Only Properties\n        /**\n         * Property is to get the browser information like Name, Version and Language\n         *\n         * @returns {BrowserInfo} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.info)) {\n                return window.browserDetails.info = Browser.extractBrowserDetail();\n            }\n            return window.browserDetails.info;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIE\", {\n        /**\n         * Property is to get whether the userAgent is based IE.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            return Browser.getValue('isIE', REGX_IE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isTouch\", {\n        /**\n         * Property is to get whether the browser has touch support.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isTouch)) {\n                return (window.browserDetails.isTouch =\n                    ('ontouchstart' in window.navigator) ||\n                        (window &&\n                            window.navigator &&\n                            (window.navigator.maxTouchPoints > 0)) || ('ontouchstart' in window));\n            }\n            return window.browserDetails.isTouch;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isPointer\", {\n        /**\n         * Property is to get whether the browser has Pointer support.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isPointer)) {\n                return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);\n            }\n            return window.browserDetails.isPointer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isMSPointer\", {\n        /**\n         * Property is to get whether the browser has MSPointer support.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isMSPointer)) {\n                return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);\n            }\n            return window.browserDetails.isMSPointer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isDevice\", {\n        /**\n         * Property is to get whether the userAgent is device based.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            return Browser.getValue('isDevice', REGX_MOBILE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIos\", {\n        /**\n         * Property is to get whether the userAgent is IOS.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            return Browser.getValue('isIos', REGX_IOS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIos7\", {\n        /**\n         * Property is to get whether the userAgent is Ios7.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            return Browser.getValue('isIos7', REGX_IOS7);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isAndroid\", {\n        /**\n         * Property is to get whether the userAgent is Android.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            return Browser.getValue('isAndroid', REGX_ANDROID);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isWebView\", {\n        /**\n         * Property is to identify whether application ran in web view.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isWebView)) {\n                window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap)\n                    && isUndefined(window.phonegap) && window.forge !== 'object');\n                return window.browserDetails.isWebView;\n            }\n            return window.browserDetails.isWebView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isWindows\", {\n        /**\n         * Property is to get whether the userAgent is Windows.\n         *\n         * @returns {boolean} ?\n         */\n        get: function () {\n            return Browser.getValue('isWindows', REGX_WINDOWS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchStartEvent\", {\n        /**\n         * Property is to get the touch start event. It returns event name based on browser.\n         *\n         * @returns {string} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchStartEvent)) {\n                return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n            }\n            return window.browserDetails.touchStartEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchMoveEvent\", {\n        /**\n         * Property is to get the touch move event. It returns event name based on browser.\n         *\n         * @returns {string} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchMoveEvent)) {\n                return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n            }\n            return window.browserDetails.touchMoveEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchEndEvent\", {\n        /**\n         * Property is to get the touch end event. It returns event name based on browser.\n         *\n         * @returns {string} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchEndEvent)) {\n                return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n            }\n            return window.browserDetails.touchEndEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchCancelEvent\", {\n        /**\n         * Property is to cancel the touch end event.\n         *\n         * @returns {string} ?\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchCancelEvent)) {\n                return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n            }\n            return window.browserDetails.touchCancelEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* istanbul ignore next */\n    Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n    return Browser;\n}());\nexport { Browser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}