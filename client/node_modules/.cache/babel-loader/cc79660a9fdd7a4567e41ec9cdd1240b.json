{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */function (_super) {\n  __extends(ShapeLayouter, _super);\n  // Constructors\n  /**\n   * Initializes a new instance of the `ShapeLayouter` class.\n   * @private\n   */\n  function ShapeLayouter(element) {\n    var _this = _super.call(this, element) || this;\n    // Fields\n    /**\n     * Initializes the object to store `older form elements` of previous page.\n     * @default 0\n     * @private\n     */\n    _this.olderPdfForm = 0;\n    /**\n     * The `bounds` of the shape element.\n     * * @default new RectangleF()\n     * @private\n     */\n    _this.shapeBounds = new RectangleF();\n    /**\n     * Total Page size of the web page.\n     * * @default 0\n     * @private\n     */\n    _this.totalPageSize = 0;\n    return _this;\n  }\n  Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n    // Properties\n    /**\n     * Gets shape element.\n     * @private\n     */\n    get: function () {\n      return this.elements;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // Implementation\n  /**\n   * Layouts the element.\n   * @private\n   */\n  ShapeLayouter.prototype.layoutInternal = function (param) {\n    var currentPage = param.page;\n    var currentBounds = param.bounds;\n    var shapeLayoutBounds = this.element.getBounds();\n    shapeLayoutBounds.x = 0;\n    shapeLayoutBounds.y = 0;\n    /* tslint:disable */\n    var isEmpty = this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0 ? true : false;\n    /* tslint:enable */\n    if (this.isPdfGrid && !isEmpty) {\n      shapeLayoutBounds = this.shapeBounds;\n    }\n    var result = null;\n    var pageResult = new ShapeLayoutResult();\n    pageResult.page = currentPage;\n    /*tslint:disable:no-constant-condition */\n    while (true) {\n      // Raise event.\n      var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n      currentBounds = result1.currentBounds;\n      var endArgs = null;\n      if (!result1.cancel) {\n        pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n        // Raise event.\n        endArgs = this.raiseEndPageLayout(pageResult);\n        result1.cancel = endArgs === null ? false : endArgs.cancel;\n      }\n      if (!pageResult.end && !result1.cancel) {\n        currentBounds = this.getPaginateBounds(param);\n        shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n        currentPage = endArgs === null || endArgs.nextPage === null ? this.getNextPage(currentPage) : endArgs.nextPage;\n        if (this.isPdfGrid) {\n          result = this.getLayoutResult(pageResult);\n          break;\n        }\n      } else {\n        result = this.getLayoutResult(pageResult);\n        break;\n      }\n    }\n    return result;\n  };\n  /**\n   * Raises BeforePageLayout event.\n   * @private\n   */\n  ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n    var cancel = false;\n    if (this.element.raiseBeginPageLayout) {\n      var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n      this.element.onBeginPageLayout(args);\n      cancel = args.cancel;\n      currentBounds = args.bounds;\n    }\n    return {\n      currentBounds: currentBounds,\n      cancel: cancel\n    };\n  };\n  /**\n   * Raises PageLayout event if needed.\n   * @private\n   */\n  ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n    var args = null;\n    if (this.element.raiseEndPageLayout) {\n      var res = this.getLayoutResult(pageResult);\n      args = new EndPageLayoutEventArgs(res);\n      this.element.onEndPageLayout(args);\n    }\n    return args;\n  };\n  /**\n   * Creates layout result.\n   * @private\n   */\n  ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n    var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n    return result;\n  };\n  /**\n   * Calculates the next active shape bounds.\n   * @private\n   */\n  ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n    var layoutedBounds = pageResult.bounds;\n    shapeLayoutBounds.y = shapeLayoutBounds.y + layoutedBounds.height;\n    shapeLayoutBounds.height = shapeLayoutBounds.height - layoutedBounds.height;\n    return shapeLayoutBounds;\n  };\n  /**\n   * Layouts the element on the current page.\n   * @private\n   */\n  ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n    var result = new ShapeLayoutResult();\n    curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n    var fitToPage = this.fitsToBounds(curBounds, sBounds);\n    var canDraw = !(param.format.break === PdfLayoutBreakType.FitElement && !fitToPage && currentPage === param.page);\n    var shapeFinished = false;\n    if (canDraw) {\n      var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n      this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n      result.bounds = this.getPageResultBounds(curBounds, sBounds);\n      shapeFinished = curBounds.height >= sBounds.height;\n    }\n    result.end = shapeFinished || param.format.layout === PdfLayoutType.OnePage;\n    result.page = currentPage;\n    return result;\n  };\n  /**\n   * Returns Rectangle for element drawing on the page.\n   * @private\n   */\n  ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n    var result = currentBounds;\n    result.y = result.y - shapeLayoutBounds.y;\n    result.height = result.height + shapeLayoutBounds.y;\n    return result;\n  };\n  /**\n   * Draws the shape.\n   * @private\n   */\n  ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n    var gState = g.save();\n    try {\n      g.setClip(currentBounds);\n      this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n    } finally {\n      g.restore(gState);\n    }\n  };\n  /**\n   * Corrects current bounds on the page.\n   * @protected\n   */\n  ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n    var pageSize = currentPage.graphics.clientSize;\n    curBounds.width = curBounds.width > 0 ? curBounds.width : pageSize.width - curBounds.x;\n    curBounds.height = curBounds.height > 0 ? curBounds.height : pageSize.height - curBounds.y;\n    if (this.isPdfGrid) {\n      curBounds.height = curBounds.height - this.bottomCellPadding;\n    }\n    return curBounds;\n  };\n  /**\n   * Calculates bounds where the shape was layout on the page.\n   * @private\n   */\n  ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n    var result = currentBounds;\n    result.height = Math.min(result.height, shapeLayoutBounds.height);\n    return result;\n  };\n  /**\n   * Checks whether shape rectangle fits to the lay outing bounds.\n   * @private\n   */\n  ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n    var fits = shapeLayoutBounds.height <= currentBounds.height;\n    return fits;\n  };\n  /**\n   * Initializes the offset `index`.\n   * * @default 0\n   * @private\n   */\n  ShapeLayouter.index = 0;\n  /**\n   * Initializes the `difference in page height`.\n   * * @default 0\n   * @private\n   */\n  ShapeLayouter.splitDiff = 0;\n  /**\n   * Determines the `end of Vertical offset` values.\n   * * @default false\n   * @private\n   */\n  ShapeLayouter.last = false;\n  /**\n   * Determines the document link annotation `border width`.\n   * * @default 0\n   * @private\n   */\n  ShapeLayouter.borderWidth = 0;\n  return ShapeLayouter;\n}(ElementLayouter);\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */function () {\n  function ShapeLayoutResult() {}\n  return ShapeLayoutResult;\n}();","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ElementLayouter","PdfLayoutResult","RectangleF","PointF","PdfLayoutBreakType","PdfLayoutType","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","ShapeLayouter","_super","element","_this","call","olderPdfForm","shapeBounds","totalPageSize","defineProperty","get","elements","enumerable","configurable","layoutInternal","param","currentPage","page","currentBounds","bounds","shapeLayoutBounds","getBounds","x","y","isEmpty","width","height","isPdfGrid","result","pageResult","ShapeLayoutResult","result1","raiseBeforePageLayout","endArgs","cancel","layoutOnPage","raiseEndPageLayout","end","getPaginateBounds","getNextShapeBounds","nextPage","getNextPage","getLayoutResult","raiseBeginPageLayout","args","onBeginPageLayout","res","onEndPageLayout","layoutedBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","canDraw","format","break","FitElement","shapeFinished","drawRectangle","getDrawBounds","drawShape","graphics","getPageResultBounds","layout","OnePage","g","gState","save","setClip","drawGraphicsHelper","restore","pageSize","clientSize","bottomCellPadding","Math","min","fits","index","splitDiff","last","borderWidth"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/shape-layouter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}