{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro16/Desktop/cs222/client/src/map2.jsx\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst map2 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: \"/features.json\",\n      children: _ref => {\n        let {\n          geographies\n        } = _ref;\n        return geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\nconst map = ReactDOM.render( /*#__PURE__*/_jsxDEV(MapsComponent, {\n  id: \"maps\",\n  children: /*#__PURE__*/_jsxDEV(LayersDirective, {\n    children: /*#__PURE__*/_jsxDEV(LayerDirective, {\n      shapeData: world_map,\n      shapeDataPath: \"name\",\n      shapePropertyPath: \"name\",\n      dataSource: population_density,\n      shapeSettings: {\n        colorValuePath: 'density',\n        fill: '#E5E5E5',\n        colorMapping: [{\n          from: 0.00001,\n          to: 100,\n          color: 'rgb(153,174,214)'\n        }, {\n          from: 100,\n          to: 200,\n          color: 'rgb(115,143,199)'\n        }, {\n          from: 200,\n          to: 300,\n          color: 'rgb(77,112,184)'\n        }, {\n          from: 300,\n          to: 500,\n          color: 'rgb(38,82,168)'\n        }, {\n          from: 500,\n          to: 19000,\n          color: 'rgb(0,51,153)'\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 5\n}, this), document.getElementById(\"maps\"));\nexport default map2;","map":{"version":3,"names":["React","ComposableMap","Geographies","Geography","map2","geographies","map","geo","rsmKey","ReactDOM","render","world_map","population_density","colorValuePath","fill","colorMapping","from","to","color","document","getElementById"],"sources":["/Users/macbookpro16/Desktop/cs222/client/src/map2.jsx"],"sourcesContent":["import React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n\nimport \"./styles.css\";\n\nconst map2 = () => (\n  <div>\n    <ComposableMap>\n      <Geographies geography=\"/features.json\">\n        {({ geographies }) =>\n          geographies.map((geo) => (\n            <Geography key={geo.rsmKey} geography={geo} />\n          ))\n        }\n      </Geographies>\n    </ComposableMap>\n  </div>\n);\n\nconst map = ReactDOM.render(\n    <MapsComponent id=\"maps\">\n        <LayersDirective>\n            <LayerDirective shapeData={world_map} shapeDataPath='name' shapePropertyPath='name' dataSource={population_density} shapeSettings={{\ncolorValuePath: 'density',\nfill: '#E5E5E5',\ncolorMapping: [\n    {\n        from: 0.00001, to: 100, color: 'rgb(153,174,214)'\n    },\n    {\n        from: 100, to: 200, color: 'rgb(115,143,199)'\n    },\n    {\n        from: 200, to: 300, color: 'rgb(77,112,184)'\n    },\n    {\n        from: 300, to: 500, color: 'rgb(38,82,168)'\n    },\n    {\n        from: 500, to: 19000, color: 'rgb(0,51,153)'\n    }\n]\n}}>\n            </LayerDirective>\n        </LayersDirective>\n    </MapsComponent>\n    , document.getElementById(\"maps\"));\n\nexport default map2;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,WAAW,EAAEC,SAAS,QAAQ,mBAAmB;AAEzE,OAAO,cAAc;AAAC;AAEtB,MAAMC,IAAI,GAAG,mBACX;EAAA,uBACE,QAAC,aAAa;IAAA,uBACZ,QAAC,WAAW;MAAC,SAAS,EAAC,gBAAgB;MAAA,UACpC;QAAA,IAAC;UAAEC;QAAY,CAAC;QAAA,OACfA,WAAW,CAACC,GAAG,CAAEC,GAAG,iBAClB,QAAC,SAAS;UAAkB,SAAS,EAAEA;QAAI,GAA3BA,GAAG,CAACC,MAAM;UAAA;UAAA;UAAA;QAAA,QAC3B,CAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAEQ;IAAA;IAAA;IAAA;EAAA;AACA;EAAA;EAAA;EAAA;AAAA,QAEnB;AAED,MAAMF,GAAG,GAAGG,QAAQ,CAACC,MAAM,eACvB,QAAC,aAAa;EAAC,EAAE,EAAC,MAAM;EAAA,uBACpB,QAAC,eAAe;IAAA,uBACZ,QAAC,cAAc;MAAC,SAAS,EAAEC,SAAU;MAAC,aAAa,EAAC,MAAM;MAAC,iBAAiB,EAAC,MAAM;MAAC,UAAU,EAAEC,kBAAmB;MAAC,aAAa,EAAE;QAC/IC,cAAc,EAAE,SAAS;QACzBC,IAAI,EAAE,SAAS;QACfC,YAAY,EAAE,CACV;UACIC,IAAI,EAAE,OAAO;UAAEC,EAAE,EAAE,GAAG;UAAEC,KAAK,EAAE;QACnC,CAAC,EACD;UACIF,IAAI,EAAE,GAAG;UAAEC,EAAE,EAAE,GAAG;UAAEC,KAAK,EAAE;QAC/B,CAAC,EACD;UACIF,IAAI,EAAE,GAAG;UAAEC,EAAE,EAAE,GAAG;UAAEC,KAAK,EAAE;QAC/B,CAAC,EACD;UACIF,IAAI,EAAE,GAAG;UAAEC,EAAE,EAAE,GAAG;UAAEC,KAAK,EAAE;QAC/B,CAAC,EACD;UACIF,IAAI,EAAE,GAAG;UAAEC,EAAE,EAAE,KAAK;UAAEC,KAAK,EAAE;QACjC,CAAC;MAEL;IAAE;MAAA;MAAA;MAAA;IAAA;EAC2B;IAAA;IAAA;IAAA;EAAA;AACH;EAAA;EAAA;EAAA;AAAA,QACN,EACdC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEtC,eAAehB,IAAI"},"metadata":{},"sourceType":"module"}