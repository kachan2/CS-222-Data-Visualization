{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro16/Desktop/data-visualization/client/src/maps/CountryMap.js\";\n// import React, { useState, useEffect } from \"react\";\n// import React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n// import { scaleQuantile } from \"d3-scale\";\n// import { csv } from \"d3-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\nconst CountryMap = () => {\n  // const [data, setData] = useState([]);\n\n  // useEffect(() => {\n  //   csv(\"/data/f22_clean.csv\").then(counties => {\n  //     setData(counties);\n  //   });\n  // }, []);\n\n  // const colorScale = scaleQuantile()\n  //   .domain(data.map(d => d.population))\n  //   .range([\n  //     \"#ffedea\",\n  //     \"#ffcec5\",\n  //     \"#ffad9f\",\n  //     \"#ff8a75\",\n  //     \"#ff5533\",\n  //     \"#e2492d\",\n  //     \"#be3d26\",\n  //     \"#9a311f\",\n  //     \"#782618\"\n  //   ]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoAlbersUsa\",\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: _ref => {\n          let {\n            geographies\n          } = _ref;\n          return geographies.map(geo => {\n            // const cur = data.find(s => s.id === geo.id);\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo\n              // fill={cur ? colorScale(cur.population) : \"#EEE\"}\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = CountryMap;\nexport default CountryMap;\nvar _c;\n$RefreshReg$(_c, \"CountryMap\");","map":{"version":3,"names":["ComposableMap","Geographies","Geography","geoUrl","CountryMap","geographies","map","geo","rsmKey"],"sources":["/Users/macbookpro16/Desktop/data-visualization/client/src/maps/CountryMap.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n// import { scaleQuantile } from \"d3-scale\";\n// import { csv } from \"d3-fetch\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst CountryMap = () => {\n  // const [data, setData] = useState([]);\n\n  // useEffect(() => {\n  //   csv(\"/data/f22_clean.csv\").then(counties => {\n  //     setData(counties);\n  //   });\n  // }, []);\n\n  // const colorScale = scaleQuantile()\n  //   .domain(data.map(d => d.population))\n  //   .range([\n  //     \"#ffedea\",\n  //     \"#ffcec5\",\n  //     \"#ffad9f\",\n  //     \"#ff8a75\",\n  //     \"#ff5533\",\n  //     \"#e2492d\",\n  //     \"#be3d26\",\n  //     \"#9a311f\",\n  //     \"#782618\"\n  //   ]);\n\n  return (\n    <div>\n    <ComposableMap projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => {\n            // const cur = data.find(s => s.id === geo.id);\n            return (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                // fill={cur ? colorScale(cur.population) : \"#EEE\"}\n              />\n            );\n          })\n        }\n      </Geographies>\n    </ComposableMap>\n    <Slider />\n    </div>\n  );\n};\n\nexport default CountryMap;\n"],"mappings":";AAAA;AACA;AACA,SAASA,aAAa,EAAEC,WAAW,EAAEC,SAAS,QAAQ,mBAAmB;AACzE;AACA;AAAA;AAEA,MAAMC,MAAM,GAAG,2DAA2D;AAE1E,MAAMC,UAAU,GAAG,MAAM;EACvB;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACA,QAAC,aAAa;MAAC,UAAU,EAAC,cAAc;MAAA,uBACtC,QAAC,WAAW;QAAC,SAAS,EAAED,MAAO;QAAA,UAC5B;UAAA,IAAC;YAAEE;UAAY,CAAC;UAAA,OACfA,WAAW,CAACC,GAAG,CAACC,GAAG,IAAI;YACrB;YACA,oBACE,QAAC,SAAS;cAER,SAAS,EAAEA;cACX;YAAA,GAFKA,GAAG,CAACC,MAAM;cAAA;cAAA;cAAA;YAAA,QAGf;UAEN,CAAC,CAAC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAEQ;MAAA;MAAA;MAAA;IAAA,QACA,eAChB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,KA5CIJ,UAAU;AA8ChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}