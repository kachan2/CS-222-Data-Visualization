{"ast":null,"code":"import { ColorValue } from '../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getValueFromObject } from '../utils/helper';\n/**\n * ColorMapping class\n */\nvar ColorMapping = /** @class */function () {\n  function ColorMapping(maps) {\n    this.maps = maps;\n  }\n  /**\n   * To get color based on shape settings.\n   *\n   * @param { ShapeSettingsModel } shapeSettings - Specifies the shape settings.\n   * @param { object } layerData - Specifies the layer data.\n   * @param { string } color - Specifies the color.\n   * @returns {Object} - Returns the object.\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ColorMapping.prototype.getShapeColorMapping = function (shapeSettings, layerData, color) {\n    var colorValuePath = shapeSettings.colorValuePath ? shapeSettings.colorValuePath : shapeSettings.valuePath;\n    var equalValue = !isNullOrUndefined(colorValuePath) ? colorValuePath.indexOf('.') > -1 ? getValueFromObject(layerData, colorValuePath) : layerData[colorValuePath] : layerData[colorValuePath];\n    var colorValue = Number(equalValue);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var shapeColor = this.getColorByValue(shapeSettings.colorMapping, colorValue, equalValue);\n    return !isNullOrUndefined(shapeColor) ? shapeColor : color;\n  };\n  /**\n   * To color by value and color mapping\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ColorMapping.prototype.getColorByValue = function (colorMapping, colorValue, equalValue) {\n    if (isNaN(colorValue) && isNullOrUndefined(equalValue)) {\n      return null;\n    }\n    var fill = '';\n    var opacity;\n    var gradientColor;\n    var gradientFill;\n    for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n      var colorMap = colorMapping_1[_i];\n      if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) && colorValue >= colorMap.from && colorValue <= colorMap.to || colorMap.value === equalValue) {\n        if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n          if (!isNullOrUndefined(colorMap.value)) {\n            fill = colorMap.color[0];\n          } else {\n            gradientFill = this.getColor(colorMap, colorValue);\n            fill = gradientFill;\n          }\n        } else {\n          fill = colorMap.color;\n        }\n      }\n      if ((colorValue >= colorMap.from && colorValue <= colorMap.to || colorMap.value === equalValue) && !isNullOrUndefined(colorMap.minOpacity) && !isNullOrUndefined(colorMap.maxOpacity) && fill) {\n        opacity = this.deSaturationColor(colorMap, fill, colorValue, equalValue);\n      }\n      if ((fill === '' || isNullOrUndefined(fill)) && isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to) && isNullOrUndefined(colorMap.minOpacity) && isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value)) {\n        fill = Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n      }\n    }\n    return {\n      fill: fill || (!colorMapping.length ? equalValue : null),\n      opacity: opacity\n    };\n  };\n  ColorMapping.prototype.deSaturationColor = function (colorMapping, color, rangeValue, equalValue) {\n    var opacity = 1;\n    if (rangeValue >= colorMapping.from && rangeValue <= colorMapping.to || colorMapping.value === equalValue) {\n      var ratio = !isNaN(rangeValue) ? (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from) : colorMapping.from / (colorMapping.to - colorMapping.from);\n      opacity = ratio * (colorMapping.maxOpacity - colorMapping.minOpacity) + colorMapping.minOpacity;\n    }\n    return opacity;\n  };\n  ColorMapping.prototype.rgbToHex = function (r, g, b) {\n    return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n  };\n  ColorMapping.prototype.componentToHex = function (value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  };\n  ColorMapping.prototype.getColor = function (colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n      color = colorMap.color[0];\n    } else if (Number(value) === colorMap.to) {\n      color = colorMap.color[colorMap.color.length - 1];\n    } else {\n      rbg = this.getGradientColor(Number(value), colorMap);\n      color = this.rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n  };\n  ColorMapping.prototype.getGradientColor = function (value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n      previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n      nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ? colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    } else {\n      previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n      nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ? colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n      var a = full / (colorMap.color.length - 1);\n      var b = void 0;\n      var c = void 0;\n      var length_1 = colorMap.color.length - 1;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var splitColorValueOffset = [];\n      var splitColor = {};\n      for (var j = 1; j < length_1; j++) {\n        c = j * a;\n        b = previousOffset + c;\n        splitColor = {\n          b: b,\n          color: colorMap.color[j]\n        };\n        splitColorValueOffset.push(splitColor);\n      }\n      for (var i = 0; i < splitColorValueOffset.length; i++) {\n        if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n          midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n          nextColor = midColor;\n          percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n        } else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === splitColorValueOffset.length - 1) {\n          midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n          previousColor = midColor;\n          percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n        }\n        if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n          if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n            midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n            previousColor = midColor;\n            nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ? splitColorValueOffset[i + 1]['color'] : this._colorNameToHex(splitColorValueOffset[i + 1]['color']);\n            percent = Math.abs(value - splitColorValueOffset[i + 1]['b']) / a;\n          }\n        }\n      }\n    }\n    return this.getPercentageColor(percent, previousColor, nextColor);\n  };\n  ColorMapping.prototype.getPercentageColor = function (percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n  };\n  ColorMapping.prototype.getPercentage = function (percent, previous, next) {\n    var full = next - previous;\n    return Math.round(previous + full * percent);\n  };\n  ColorMapping.prototype._colorNameToHex = function (color) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var colors = {\n      'aliceblue': '#f0f8ff',\n      'antiquewhite': '#faebd7',\n      'aqua': '#00ffff',\n      'aquamarine': '#7fffd4',\n      'azure': '#f0ffff',\n      'beige': '#f5f5dc',\n      'bisque': '#ffe4c4',\n      'black': '#000000',\n      'blanchedalmond': '#ffebcd',\n      'blue': '#0000ff',\n      'blueviolet': '#8a2be2',\n      'brown': '#a52a2a',\n      'burlywood': '#deb887',\n      'cadetblue': '#5f9ea0',\n      'chartreuse': '#7fff00',\n      'chocolate': '#d2691e',\n      'coral': '#ff7f50',\n      'cornflowerblue': '#6495ed',\n      'cornsilk': '#fff8dc',\n      'crimson': '#dc143c',\n      'cyan': '#00ffff',\n      'darkblue': '#00008b',\n      'darkcyan': '#008b8b',\n      'darkgoldenrod': '#b8860b',\n      'darkgray': '#a9a9a9',\n      'darkgreen': '#006400',\n      'darkkhaki': '#bdb76b',\n      'darkmagenta': '#8b008b',\n      'darkolivegreen': '#556b2f',\n      'darkorange': '#ff8c00',\n      'darkorchid': '#9932cc',\n      'darkred': '#8b0000',\n      'darksalmon': '#e9967a',\n      'darkseagreen': '#8fbc8f',\n      'darkslateblue': '#483d8b',\n      'darkslategray': '#2f4f4f',\n      'darkturquoise': '#00ced1',\n      'darkviolet': '#9400d3',\n      'deeppink': '#ff1493',\n      'deepskyblue': '#00bfff',\n      'dimgray': '#696969',\n      'dodgerblue': '#1e90ff',\n      'firebrick': '#b22222',\n      'floralwhite': '#fffaf0',\n      'forestgreen': '#228b22',\n      'fuchsia': '#ff00ff',\n      'gainsboro': '#dcdcdc',\n      'ghostwhite': '#f8f8ff',\n      'gold': '#ffd700',\n      'goldenrod': '#daa520',\n      'gray': '#808080',\n      'green': '#008000',\n      'greenyellow': '#adff2f',\n      'honeydew': '#f0fff0',\n      'hotpink': '#ff69b4',\n      'indianred ': '#cd5c5c',\n      'indigo ': '#4b0082',\n      'ivory': '#fffff0',\n      'khaki': '#f0e68c',\n      'lavender': '#e6e6fa',\n      'lavenderblush': '#fff0f5',\n      'lawngreen': '#7cfc00',\n      'lemonchiffon': '#fffacd',\n      'lightblue': '#add8e6',\n      'lightcoral': '#f08080',\n      'lightcyan': '#e0ffff',\n      'lightgoldenrodyellow': '#fafad2',\n      'lightgrey': '#d3d3d3',\n      'lightgreen': '#90ee90',\n      'lightpink': '#ffb6c1',\n      'lightsalmon': '#ffa07a',\n      'lightseagreen': '#20b2aa',\n      'lightskyblue': '#87cefa',\n      'lightslategray': '#778899',\n      'lightsteelblue': '#b0c4de',\n      'lightyellow': '#ffffe0',\n      'lime': '#00ff00',\n      'limegreen': '#32cd32',\n      'linen': '#faf0e6',\n      'magenta': '#ff00ff',\n      'maroon': '#800000',\n      'mediumaquamarine': '#66cdaa',\n      'mediumblue': '#0000cd',\n      'mediumorchid': '#ba55d3',\n      'mediumpurple': '#9370d8',\n      'mediumseagreen': '#3cb371',\n      'mediumslateblue': '#7b68ee',\n      'mediumspringgreen': '#00fa9a',\n      'mediumturquoise': '#48d1cc',\n      'mediumvioletred': '#c71585',\n      'midnightblue': '#191970',\n      'mintcream': '#f5fffa',\n      'mistyrose': '#ffe4e1',\n      'moccasin': '#ffe4b5',\n      'navajowhite': '#ffdead',\n      'navy': '#000080',\n      'orchid': '#da70d6',\n      'papayawhip': '#ffefd5',\n      'oldlace': '#fdf5e6',\n      'olive': '#808000',\n      'olivedrab': '#6b8e23',\n      'orange': '#ffa500',\n      'orangered': '#ff4500',\n      'palegoldenrod': '#eee8aa',\n      'palegreen': '#98fb98',\n      'paleturquoise': '#afeeee',\n      'palevioletred': '#d87093',\n      'peachpuff': '#ffdab9',\n      'peru': '#cd853f',\n      'pink': '#ffc0cb',\n      'plum': '#dda0dd',\n      'powderblue': '#b0e0e6',\n      'purple': '#800080',\n      'red': '#ff0000',\n      'rosybrown': '#bc8f8f',\n      'royalblue': '#4169e1',\n      'saddlebrown': '#8b4513',\n      'salmon': '#fa8072',\n      'sandybrown': '#f4a460',\n      'seagreen': '#2e8b57',\n      'seashell': '#fff5ee',\n      'sienna': '#a0522d',\n      'silver': '#c0c0c0',\n      'skyblue': '#87ceeb',\n      'slateblue': '#6a5acd',\n      'slategray': '#708090',\n      'snow': '#fffafa',\n      'springgreen': '#00ff7f',\n      'steelblue': '#4682b4',\n      'tan': '#d2b48c',\n      'teal': '#008080',\n      'thistle': '#d8bfd8',\n      'tomato': '#ff6347',\n      'turquoise': '#40e0d0',\n      'violet': '#ee82ee',\n      'wheat': '#f5deb3',\n      'white': '#ffffff',\n      'whitesmoke': '#f5f5f5',\n      'yellow': '#ffff00',\n      'yellowgreen': '#9acd32'\n    };\n    if (Object.prototype.toString.call(color) === '[object Array]') {\n      return color;\n    }\n    if (typeof colors[color.toLowerCase()] !== 'undefined') {\n      return colors[color.toLowerCase()];\n    }\n    return color;\n  };\n  return ColorMapping;\n}();\nexport { ColorMapping };","map":{"version":3,"names":["ColorValue","isNullOrUndefined","getValueFromObject","ColorMapping","maps","prototype","getShapeColorMapping","shapeSettings","layerData","color","colorValuePath","valuePath","equalValue","indexOf","colorValue","Number","shapeColor","getColorByValue","colorMapping","isNaN","fill","opacity","gradientColor","gradientFill","_i","colorMapping_1","length","colorMap","from","to","value","Object","toString","call","getColor","minOpacity","maxOpacity","deSaturationColor","rangeValue","ratio","rgbToHex","r","g","b","componentToHex","hex","rbg","getGradientColor","previousOffset","nextOffset","percent","prev1","full","midColor","midreturn","previousColor","nextColor","charAt","_colorNameToHex","a","c","length_1","splitColorValueOffset","splitColor","j","push","i","Math","abs","getPercentageColor","previous","next","split","prevColor","getPercentage","parseInt","substr","round","colors","toLowerCase"],"sources":["/Users/macbookpro16/Desktop/cs222/client/node_modules/@syncfusion/ej2-maps/src/maps/layers/color-mapping.js"],"sourcesContent":["import { ColorValue } from '../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getValueFromObject } from '../utils/helper';\n/**\n * ColorMapping class\n */\nvar ColorMapping = /** @class */ (function () {\n    function ColorMapping(maps) {\n        this.maps = maps;\n    }\n    /**\n     * To get color based on shape settings.\n     *\n     * @param { ShapeSettingsModel } shapeSettings - Specifies the shape settings.\n     * @param { object } layerData - Specifies the layer data.\n     * @param { string } color - Specifies the color.\n     * @returns {Object} - Returns the object.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ColorMapping.prototype.getShapeColorMapping = function (shapeSettings, layerData, color) {\n        var colorValuePath = shapeSettings.colorValuePath ? shapeSettings.colorValuePath : shapeSettings.valuePath;\n        var equalValue = (!isNullOrUndefined(colorValuePath)) ? ((colorValuePath.indexOf('.') > -1) ?\n            getValueFromObject(layerData, colorValuePath) : layerData[colorValuePath]) : layerData[colorValuePath];\n        var colorValue = Number(equalValue);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var shapeColor = this.getColorByValue(shapeSettings.colorMapping, colorValue, equalValue);\n        return !isNullOrUndefined(shapeColor) ? shapeColor : color;\n    };\n    /**\n     * To color by value and color mapping\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ColorMapping.prototype.getColorByValue = function (colorMapping, colorValue, equalValue) {\n        if (isNaN(colorValue) && isNullOrUndefined(equalValue)) {\n            return null;\n        }\n        var fill = '';\n        var opacity;\n        var gradientColor;\n        var gradientFill;\n        for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n            var colorMap = colorMapping_1[_i];\n            if ((!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to)\n                && (colorValue >= colorMap.from && colorValue <= colorMap.to)) ||\n                (colorMap.value === equalValue)) {\n                if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                    if (!isNullOrUndefined(colorMap.value)) {\n                        fill = colorMap.color[0];\n                    }\n                    else {\n                        gradientFill = this.getColor(colorMap, colorValue);\n                        fill = gradientFill;\n                    }\n                }\n                else {\n                    fill = colorMap.color;\n                }\n            }\n            if (((colorValue >= colorMap.from && colorValue <= colorMap.to) || (colorMap.value === equalValue))\n                && (!isNullOrUndefined(colorMap.minOpacity) && !isNullOrUndefined(colorMap.maxOpacity) && fill)) {\n                opacity = this.deSaturationColor(colorMap, fill, colorValue, equalValue);\n            }\n            if ((fill === '' || isNullOrUndefined(fill)) && isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                && isNullOrUndefined(colorMap.minOpacity) && isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value)) {\n                fill = Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n            }\n        }\n        return { fill: fill || ((!colorMapping.length) ? equalValue : null), opacity: opacity };\n    };\n    ColorMapping.prototype.deSaturationColor = function (colorMapping, color, rangeValue, equalValue) {\n        var opacity = 1;\n        if (((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to) || colorMapping.value === equalValue)) {\n            var ratio = !isNaN(rangeValue) ? (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from) :\n                colorMapping.from / (colorMapping.to - colorMapping.from);\n            opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n        }\n        return opacity;\n    };\n    ColorMapping.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    ColorMapping.prototype.componentToHex = function (value) {\n        var hex = value.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    ColorMapping.prototype.getColor = function (colorMap, value) {\n        var color = '';\n        var rbg;\n        if (Number(value) === colorMap.from) {\n            color = colorMap.color[0];\n        }\n        else if (Number(value) === colorMap.to) {\n            color = colorMap.color[colorMap.color.length - 1];\n        }\n        else {\n            rbg = this.getGradientColor(Number(value), colorMap);\n            color = this.rgbToHex(rbg.r, rbg.g, rbg.b);\n        }\n        return color;\n    };\n    ColorMapping.prototype.getGradientColor = function (value, colorMap) {\n        var previousOffset = colorMap.from;\n        var nextOffset = colorMap.to;\n        var percent = 0;\n        var prev1;\n        var full = nextOffset - previousOffset;\n        var midColor;\n        var midreturn;\n        percent = (value - previousOffset) / full;\n        var previousColor;\n        var nextColor;\n        if (colorMap.color.length <= 2) {\n            previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n            nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n                colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        }\n        else {\n            previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n            nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n                colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n            var a = full / (colorMap.color.length - 1);\n            var b = void 0;\n            var c = void 0;\n            var length_1 = colorMap.color.length - 1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var splitColorValueOffset = [];\n            var splitColor = {};\n            for (var j = 1; j < length_1; j++) {\n                c = j * a;\n                b = previousOffset + c;\n                splitColor = { b: b, color: colorMap.color[j] };\n                splitColorValueOffset.push(splitColor);\n            }\n            for (var i = 0; i < splitColorValueOffset.length; i++) {\n                if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n                    nextColor = midColor;\n                    percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                        : (value - splitColorValueOffset[i]['b']) / a;\n                }\n                else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    percent = value < splitColorValueOffset[i]['b'] ?\n                        1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n                }\n                if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                    if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                        midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                            splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n                        previousColor = midColor;\n                        nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                            splitColorValueOffset[i + 1]['color'] : this._colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                        percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                    }\n                }\n            }\n        }\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    ColorMapping.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new ColorValue(r, g, b);\n    };\n    ColorMapping.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    ColorMapping.prototype._colorNameToHex = function (color) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var colors = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4', 'azure': '#f0ffff',\n            'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000', 'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887',\n            'cadetblue': '#5f9ea0', 'chartreuse': '#7fff00', 'chocolate': '#d2691e', 'coral': '#ff7f50',\n            'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520', 'gray': '#808080',\n            'green': '#008000', 'greenyellow': '#adff2f',\n            'honeydew': '#f0fff0', 'hotpink': '#ff69b4',\n            'indianred ': '#cd5c5c', 'indigo ': '#4b0082', 'ivory': '#fffff0', 'khaki': '#f0e68c',\n            'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd', 'lightblue': '#add8e6',\n            'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5',\n            'navajowhite': '#ffdead', 'navy': '#000080', 'orchid': '#da70d6', 'papayawhip': '#ffefd5',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57', 'seashell': '#fff5ee',\n            'sienna': '#a0522d', 'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd',\n            'slategray': '#708090', 'snow': '#fffafa', 'springgreen': '#00ff7f', 'steelblue': '#4682b4',\n            'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee',\n            'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5',\n            'yellow': '#ffff00', 'yellowgreen': '#9acd32'\n        };\n        if (Object.prototype.toString.call(color) === '[object Array]') {\n            return color;\n        }\n        if (typeof colors[color.toLowerCase()] !== 'undefined') {\n            return colors[color.toLowerCase()];\n        }\n        return color;\n    };\n    return ColorMapping;\n}());\nexport { ColorMapping };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}